"use strict";

var app = angular.module('app',['ngSanitize','ngCookies'])
.filter('startFrom', function() {
    return function(input, start) {
    	 if (!input || !input.length) { return; }
        start = +start; //parse to int
        return input.slice(start);
    }
})
.config(['$compileProvider', function ($compileProvider) {
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(|blob|):/);
}])
.directive("alertMessage",function($compile) {
	return {
		restrict : "E",
		scope : {
			alert : "="
		},
		link : function(scope, element) {
			scope.$watch('alert', function() {
				updateAlert();
			});
			scope.close = function() {
				scope.alert = null;
			}
			function updateAlert() {
				var html = "";
				if (scope.alert) {
					var icon = null;
					switch (scope.alert.type) {
					case 'success': {
						icon = 'fa fa-check-circle';
					}
						break;
					case 'warning': {
						icon = 'fa fa-exclamation';
					}
						break;
					case 'info': {
						icon = 'fa fa-info';
					}
						break;
					case 'danger': {
						icon = 'fa fa-times';
					}
						break;
					}
					html = "<div class='loader'><div class='pre-div' style='background-color: rgba(255, 255, 255, 0.6);'><div class='col-md-12 floatMessage'><div class='alert alert-"+ scope.alert.type + "' role='alert'>";
					if (scope.alert.closable) {
						html += "<button type='button' class='close' data-dismiss='alert' ng-click='close()' aria-label='Close'><span aria-hidden='true'>&times;</span></button>";
					}
					if (icon) {
						html +="<span><b>Message</b><hr></span>";
						html += "<span style='padding-right: 5px;' i class='"+icon+"' aria-hidden='true'></span>";
					}
					html += scope.alert.text;
					html += "</div></div></div></div>";
				}
				var newElement = angular.element(html);
				var compiledElement = $compile(newElement)(scope);
				element.html(compiledElement);
				if (scope.alert && scope.alert.delay > 0) {
					setTimeout(function() {
						scope.alert = null;
						scope.$apply();
						}, scope.alert.delay * 1000);
				}
			}
		}
	}
})
.directive('fileModel', ['$parse', function ($parse) {
	return {
		restrict: 'A',
		link: function(scope, element, attrs) {
			var model = $parse(attrs.fileModel);
			var modelSetter = model.assign;
			element.bind('change', function(){
				scope.$apply(function(){
					modelSetter(scope, element[0].files[0]);
				});
			});
		}
	};
}])
.directive('compileTemplate', function($compile, $parse){
    return {
        link: function(scope, element, attr){
            var parsed = $parse(attr.ngBindHtml);
            function getStringValue() {
                return (parsed(scope) || '').toString();
            }

            // Recompile if the template changes
            scope.$watch(getStringValue, function() {
                $compile(element, null, -9999)(scope);  // The -9999 makes it skip directives so that we do not recompile ourselves
            });
        }
    }
})
.filter('sumOfValue', function() {
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;

		angular.forEach(data, function(v, k) {
			sum = sum + parseInt(v[key]);
		});
		return sum;
	}
})
.filter('totalSuccess', function() {
	var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		//alert(data);
		angular.forEach(data, function(v, k) {
			if(v[status] == 'SUCCESS') {
				//alert(v[status]);
				//alert(v[key]);
				sum = sum + parseInt(v[key]);
			}
		});
		return sum;
	}
})

.filter('totalCommission', function() {
	var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		
		angular.forEach(data, function(v, k) {
		//	if(v[status] == 'SUCCESS') {
				//alert(v[status]);
			//	alert(v[key]);
				sum = sum + v[key];
				//alert(sum);
			//}
		});
		return sum;
	}
})



.controller('appController', ["$scope", "$http", "$window","$parse","$sce", "$cookieStore", "$filter",function($scope, $http, $window,$parse,$sce, $cookieStore, $filter) {
	$scope.date = new Date();
	$scope.date =   $filter('date')($scope.date, 'yyyy-MM-dd');	
	$scope.currentPage = 0;
    $scope.pageSize = 10;
    $scope.data = [];
    $scope.numberOfPages=function(){    	
        return Math.ceil($scope.data.length/$scope.pageSize);                
    }
	$scope.showAlert = function(alertType, alertText) {		
		$scope.alertMessage = {
			type : alertType,
			text : alertText,
			closable : true,
			delay : 5
		};
	};
	
	$scope.state = ['Andaman and Nicobar','Andhra Pradesh','Arunachal Pradesh','Assam','Bihar','Chandigarh','Chhattisgarh','Daman and Diu', 'Delhi','Goa','Gujarat',
		'Haryana','Himachal Pradesh','Jammu And Kashmir','Jharkhand','Karnataka','Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur','Meghalaya','Mizoram',
		'Nagaland','Orissa','Pondicherry','Punjab','Rajasthan','Sikkim','Tamilnadu','Tripura','Uttarakhand','Uttar Pradesh','West Bengal'];
	$scope.userType = [{type: 2,role: "WHITE LABLE"},{type: 3,role: "SUPER DISTRIBUTOR"},{type: 4,role: "DISTRIBUTOR"},{type: 5,role: "RETAILER"}, {type: 100,role: "API USER"}];	
	$scope.yesbankdetail = {};
	
	$scope.packageDetails = {};
	$scope.package = {};
//	$scope.popremark= {};
			
	$scope.addUserDetails = {"name":"","firmName":"","email":"", "mobile":"", "address": "", "pinCode":"", "state":"","city": "", "userType":"",} 
	$http.post('getyesbankdetails').success(function(data) {
		console.log(data);
		if(data.status=='1'){
			$scope.yesbankdetail = data;	
			 $scope.userDetails = data.userDetails;
			 $scope.reseller = data.reseller;
 			
 			var base64String = $scope.Uint8ToBase64($scope.reseller.image);
 			$scope.logoimage = base64String;
		}
		
	});
	$scope.Uint8ToBase64 = function(ab){
		var dView = new Uint8Array(ab);   //Get a byte view    
	    var arr = Array.prototype.slice.call(dView); //Create a normal array   
	    var arr1 = arr.map(function(item){        
	      return String.fromCharCode(item);    //Convert
	    });

	    return window.btoa(arr1.join('')); 
	}
	
	$scope.customer = {};
	$scope.customer.mobile = "";
	$scope.transactionReq = {};
	$scope.transactionReq.deviceType = "MANTRA_PROTOBUF";
	$scope.transactionReq = {};
	$scope.transactionReq.mode = "BALANCEINFO";
	
	$scope.getaepslogreport = function(details){
		console.log(details);
		$http.post('getaepslogreport',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.aepslogreport = data.aepslogreport;
			}else{
				$scope.showAlert("danger", data.message);
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000)
			}
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}
	$scope.aepsstatuscheck = function(details){
		console.log(details);
		var id = details.id;
		details.id = id.toString();
		console.log(details);
		$scope.loader=true;
		$http.post('aepsstatuscheck',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("danger", data.message);
			}else{
				$scope.showAlert("danger", data.message);
				
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}
	$scope.getAEPSViewUser = function(){
 		$scope.loader=true;
 		$http.post('getAEPSViewUser').success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				$scope.aepsuser = data.aepslist;
 			} else{
 				$scope.showAlert("danger", data.message);
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
	
	$scope.settlestatusmodal = function(details,status){
		
	    console.log(details);
	    $scope.loader=true;
	    details.newstatus = status;
		$scope.loader=false;
		 $('#rblSetStatus').modal('show'); 
		$scope.popsettlestatus=details;
		 console.log($scope.popsettlestatus);
	
	}
	
	$scope.aepsSettleToBank = function(details){
		console.log(details);
		$http.post('aepsSettleToBank',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}

	
	
	$scope.getRBLSETTLEMENTReport = function(details){
 		$scope.loader=true;
 		$http.post('getRBLSETTLEMENTReport',details).success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				$scope.TotalSettleBalance = data.totalBalance;
 				$scope.settlementreport = data.settlementreport;
 				$scope.settletype = data.type;
 				console.log($scope.settletype);
 			} else{
 				$scope.showAlert("danger", data.message);
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
	
	$scope.aepsUseradd = function(details){
		$http.post('aepsUseradd',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	}
	
	
	
	
	
	 $scope.getYesBankAEPSReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getYesBankAEPSReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.rblReport = data.rblReport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 $scope.registerCustomer = {};
	 $scope.transactionReq = {};
	 $scope.searchCustomer = function(details,token){
		    console.log(details);
			console.log(token);
			 if(details === null || details === undefined || details === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Enter Mobile");
		  			return false;
		  		}
			details.token=token;
			console.log(details);
			var exp = 'PAYEL';
			var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
			var format2 = /[0123456789]/;
			var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
			console.log(format3.test(details.mobile));
			/*console.log(format.test(exp));
			console.log(format.test(details.mobile));*/
			if(!format2.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			
			if(format3.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			if(format.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "Special chracters present in Mobile Number");
				return false;
			
			}
			if(details.mobile.length>10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number greater than 10 digits");
				return false;
			}
			if(details.mobile.length<10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number smaller than 10 digits");
				return false;
			}
	 		$scope.loader=true;
	 	$http.post('searchCustomer',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			
	 			if(data.status == "1"){
	 				 $scope.transactionReq.mobile =details.mobile;
	 				 showDiv('div1');
	 			}if(data.status == 601){
	 				 $window.location.href ='myaeps';
	 			}
	 				else{
	 				showDiv('div3');
	 				$scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 $scope.numberVerify = true;
	 $scope.isRegistered = true;
	 $scope.alldone = false;
	 $scope.SearchCustomersky = function(details){
		    console.log(details);
			//console.log(token);
			 if(details === null || details === undefined || details === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Enter Mobile");
		  			return false;
		  		}
			//details.token=token;
			console.log(details);
			//var exp = 'PAYEL';
			var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
			var format2 = /[0123456789]/;
			var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
			console.log(format3.test(details.mobile));
			/*console.log(format.test(exp));
			console.log(format.test(details.mobile));*/
			if(!format2.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			
			if(format3.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			if(format.test(details.mobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "Special chracters present in Mobile Number");
				return false;
			
			}
			if(details.mobile.length>10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number greater than 10 digits");
				return false;
			}
			if(details.mobile.length<10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number smaller than 10 digits");
				return false;
			}
	 		$scope.loader=true;
	 	$http.post('SearchCustomersky',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			
	 			if(data.status == "1"){
	 				$scope.alldone = true;
	 				$scope.numberVerify = false;
	 				$('.wizard-navigation a[href="#location"]').tab('show');
	 				 $scope.transactionReq.mobile =details.mobile;
	 			} else if(data.status == "0" && data.message == "customer does not exist" ){
	 				$scope.isRegistered = false;
	 				$scope.numberVerify = true;
	 				$scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger", data.message);
	 			}
	 			else{
	 				//$scope.isRegistered = false;
	 				$scope.showAlert("danger", data.message);
	 				 $window.location.href ='myaeps';
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 /*$scope.selecttransaction = function(details){
		 if(details==='BALANCEINFO'){
			 document.getElementById("transamnt").disabled = true; 
		 }else if(details==='WITHDRAWAL'){
			 document.getElementById("transamnt").disabled = false;  
		 }
	 }*/
	 
	 $scope.Customerregister = function(details){
			console.log(details);
	 		$scope.loader=true;
	 		var format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
	 		var format2 = /[0123456789]/;
	 		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
 			if(format.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Special chracters present in Name");
				return false;
			
			}
 			if(format2.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Numbers present in Name");
				return false;
			
			}
 			if(format3.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Numbers present in Name");
				return false;
				}
 			if(details.name.length<3 || details.name.length>35){
				$scope.loader=false;
				$scope.showAlert("danger", "Name should be greater than 35 or smaller than 3 characters");
				return false;
				}
	 		$http.post('Customerregister',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				 showDiv('div1');
	 				 $scope.transactionReq.mobile =details.mobile;
	 			} else{
	 				showDiv('div3');
	 				 $scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger",data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 			}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 		
	 	}
	 
	 
	 $scope.CustomerregisterSKY = function(details){
			console.log(details);
	 		$scope.loader=true;
	 		var format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
	 		var format2 = /[0123456789]/;
	 		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
			if(format.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Special chracters present in Name");
				return false;
			
			}
			if(format2.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Numbers present in Name");
				return false;
			
			}
			if(format3.test(details.name)){
				$scope.loader=false;
				$scope.showAlert("danger", "Numbers present in Name");
				return false;
				}
			if(details.name.length<3 || details.name.length>35){
				$scope.loader=false;
				$scope.showAlert("danger", "Name should be greater than 35 or smaller than 3 characters");
				return false;
				}
	 		$http.post('Customerregistersky',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				 //showDiv('div1');
	 				setTimeout(() => {
	 					$window.location.href = 'myaeps';
					}, 2000);
	 				
	 			} else{
	 				setTimeout(() => {
	 					$window.location.href = 'myaeps';
					}, 2000);
	 				
	 				 $scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger",data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 			}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 		
	 	}
	 $scope.isDisabled = false;
	 $scope.rdrespose={};
	 $scope.getDeviceByDeviceType= function(port,details){
		 console.log(details);
		 $("#myloader").show();
		 var port;
         var urlStr = '';
         var url = '';
         var xhr;
         var InputXml = '';
         var parser,xmlDoc,errInfo,status;
         var x,y,txt,txt2,i,text2,data3,res;
         var data2='';
		 if(details === null || details === undefined || details === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","Please Select Device");
	  			return false;
	  		}
		// $scope.inputJson = {"deviceType": details, "modelName": modelName,"mobile":mobile};
		 /*var divId = $parse(divName);	
			if(details == "0" || details === ""){
				divId.assign($scope,  $sce.trustAsHtml(""));
				return false;
			}
			for(i=11100;i<11103;i++){
			*/

		 
				//console.log(i);
				//port=11099;
				 
				// console.log(data2);
				 
					// data2=undefined;
					/* port++;	 
				 url = 'http://localhost:'+port+'/';
				 $scope.getrd(url,port);
				 console.log($scope.rdrespose.res);*/
				
				
				 //console.log(data2);
				
					 urlStr = 'http://localhost:'+port+'/rd/capture';
						//urlStr = 'http://localhost:11090/rd/facecapture';
					
					
					 if (window.XMLHttpRequest) {
						 
			             try{
			            	// alert('Payel1');
			                 xhr = new XMLHttpRequest();
			                 xhr.open('CAPTURE',urlStr, true);
			                 xhr.responseType = 'text';
			                // alert('Payel1');
			             }catch(e){
			            	// alert('Payel2');
			                 xhr = new ActiveXObject("Microsoft.XMLHTTP");
			                xhr.open('CAPTURE', url, true);
			             }
			         } else {
			        	// alert('Payel3');
			             xhr = new ActiveXObject("Microsoft.XMLHTTP");
			             xhr.open('CAPTURE', urlStr, true);
			         }
					 if(details=='STARTEK_PROTOBUF'){
					 InputXml = "<PidOptions ver=\"1.0\"><Opts fCount=\"1\" wadh=\"\" format=\"1\" pidVer=\"2.0\" timeout=\"20000\"  posh=\"LEFT_INDEX\" env=\"P\" /> </PidOptions>";
					 }else if(details=='MANTRA_PROTOBUF'){
					 InputXml = "<PidOptions ver=\"1.0\"> <Opts fCount=\"1\" fType=\"0\" iCount=\"0\" pCount=\"0\" format=\"1\" pidVer=\"2.0\" timeout=\"20000\" posh=\"UNKNOWN\" env=\"P\" wadh=\"\"/> <CustOpts><Param name=\"mantrakey\" value=\"\" /></CustOpts> </PidOptions>";	 
					 }else if(details=='MORPHO_PROTOBUF'){
					 InputXml = "<PidOptions ver=\"1.0\"><Opts fCount=\"1\" fType=\"0\" iCount=\"\" iType=\"\" pCount=\"\" pType=\"\" format=\"1\" pidVer=\"2.0\" timeout=\"10000\" otp=\"\" wadh=\"\" posh=\"\"/></PidOptions>";	 
					 }
				        // var InputXml = "<PidOptions><Opts fCount\"0\" fType=\"0\" format=\"0\" pidVer=\"2.0\" timeout=\"20000\" otp=\"\" posh =\"UNKNOWN\" env=\"P\" wadh=\"\" /><Demo></Demo><CustOpts><Param name=\"ValidationKey\" value=\"\" /></CustOpts></PidOptions>";
					 // alert('Payel4');
					  //alert(xhr.status);
				          xhr.onreadystatechange = function () {
				        	//  alert('Payel4');
				        	 // console.log(xhr.readyState);
				             if (xhr.readyState == 4) {
				                 if (xhr.status == 200) {
				                	 $("#myloader").hide();
				                	 var text =xhr.responseText;  
				                	 
				                	 parser = new DOMParser();
				                	 console.log(text);
				                	 xmlDoc=parser.parseFromString(text,"text/xml");
				                	 x = xmlDoc.getElementsByTagName("Resp")[0];
				                	 console.log(x);
				                	 y = x.getAttributeNode("errCode");
				                	 console.log(y);
				                	 txt = y.nodeValue;
				                	 
				                	 console.log(txt);
				                	 console.log(xhr.responseText);
				                	 if(txt==0){
				                		 $scope.isDisabled = true;
				                		 $("#capture").show(); 
				                		 $("#errInfo").hide(); 
				                		 $scope.transactionReq.pidData = xhr.responseText;
				                	 }else{
				                		 $("#errInfo").show(); 
				                		 $("#capture").hide(); 
				                		 errInfo=x.getAttributeNode("errInfo");
					                	 console.log(errInfo);
					                	 txt2 = errInfo.nodeValue;	
					                	 $scope.errmsg = txt2;
					                	
				                	 }
				                	
				                	 //divId.assign($scope,  $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Fingure Captured successfully.</h5></div></div></div></div></div>"));	
				                	// console.log($scope.transactionReq.pidData);
				                	 
				                 } 
				             }
				         };
				         xhr.send(InputXml);
				        
			            console.log($scope.transactionReq.pidData);
			
				/*	$http.post('getDeviceByDeviceType',$scope.inputJson).success(function(data){
						 $scope.loader=false;
						console.log(data);
						 $scope.transactionReq.pidData = data.pidData;
						divId.assign($scope,  $sce.trustAsHtml(data.message));			
					}).error(function(data){
						divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
					});*/
				
		
		 
		// console.log(port);
			/*if(port<11103){
			 urlStr = 'http://localhost:'+port+'/rd/capture';
			 
				//urlStr = 'http://localhost:11090/rd/facecapture';
			getJSONCapture(urlStr,
	                function (err,data) {
	                    if (err != null) {
	                        alert('Something went wrong: ' + err);
	                    } else {
	                        alert('Response:-' + String(data));
	                    }
	                }
	            );
			 console.log(urlStr);
			 if (window.XMLHttpRequest) {
				 
	             try{
	            	 alert('Payel1');
	                 xhr = new XMLHttpRequest();
	                 xhr.open('CAPTURE',urlStr, true);
	                 xhr.responseType = 'text';
	                // alert('Payel1');
	             }catch(e){
	            	// alert('Payel2');
	                 xhr = new ActiveXObject("Microsoft.XMLHTTP");
	                xhr.open('CAPTURE', url, true);
	             }
	         } else {
	        	 alert('Payel3');
	             xhr = new ActiveXObject("Microsoft.XMLHTTP");
	             xhr.open('CAPTURE', urlStr, true);
	         }
			 if(details=='STARTEK_PROTOBUF'){
			 InputXml = "<PidOptions ver=\"1.0\"><Opts fCount=\"1\" wadh=\"\" format=\"1\" pidVer=\"2.0\" timeout=\"20000\"  posh=\"LEFT_INDEX\" env=\"P\" /> </PidOptions>";
			 }else if(details=='MANTRA_PROTOBUF'){
		     console.log('MANTRA_PROTOBUF');		 
			 InputXml = "<PidOptions ver=\"1.0\"> <Opts fCount=\"1\" fType=\"0\" iCount=\"0\" pCount=\"0\" format=\"1\" pidVer=\"2.0\" timeout=\"20000\" posh=\"UNKNOWN\" env=\"P\" wadh=\"\"/> <CustOpts><Param name=\"mantrakey\" value=\"\" /></CustOpts> </PidOptions>";	 
			 }else if(details=='MORPHO_PROTOBUF'){
			 InputXml = "<PidOptions ver=\"1.0\"><Opts fCount=\"1\" wadh=\"\" format=\"1\" pidVer=\"2.0\" timeout=\"20000\"  posh=\"LEFT_INDEX\" env=\"P\" /> </PidOptions>";	 
			 }
			 console.log(InputXml);
		        // var InputXml = "<PidOptions><Opts fCount\"0\" fType=\"0\" format=\"0\" pidVer=\"2.0\" timeout=\"20000\" otp=\"\" posh =\"UNKNOWN\" env=\"P\" wadh=\"\" /><Demo></Demo><CustOpts><Param name=\"ValidationKey\" value=\"\" /></CustOpts></PidOptions>";
			 // alert('Payel4');
			  //alert(xhr.status);
		          xhr.onreadystatechange = function () {
		        	//  alert('Payel4');
		        	 // console.log(xhr.readyState);
		             if (xhr.readyState == 4) {
		                 if (xhr.status == 200) {
		                	 
		                	 $("#myloader").hide();
		                	 var text =xhr.responseText;  
		                	 
		                	 parser = new DOMParser();
		                	 console.log(text);
		                	 xmlDoc=parser.parseFromString(text,"text/xml");
		                	 x = xmlDoc.getElementsByTagName("Resp")[0];
		                	 console.log(x);
		                	 y = x.getAttributeNode("errCode");
		                	 console.log(y);
		                	 txt = y.nodeValue;
		                	 
		                	 console.log(txt);
		                	 console.log(xhr.responseText);
		                	 if(txt==0){
		                		 $("#capture").show(); 
		                		 $scope.transactionReq.pidData = xhr.responseText;
		                	 }else{
		                		 $("#errInfo").show(); 
		                		 errInfo=x.getAttributeNode("errInfo");
			                	 console.log(errInfo);
			                	 txt2 = errInfo.nodeValue;	
			                	 $scope.errmsg = txt2;
			                	
		                	 }
		                	
		                	 //divId.assign($scope,  $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Fingure Captured successfully.</h5></div></div></div></div></div>"));	
		                	// console.log($scope.transactionReq.pidData);
		                	 
		                 } 
		             }
		         };
		         xhr.send(InputXml);
		        
	            console.log($scope.transactionReq.pidData);
	
			$http.post('getDeviceByDeviceType',$scope.inputJson).success(function(data){
				 $scope.loader=false;
				console.log(data);
				 $scope.transactionReq.pidData = data.pidData;
				divId.assign($scope,  $sce.trustAsHtml(data.message));			
			}).error(function(data){
				divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
			});
		 }
	 */
	 }
	 
	 $scope.getrd= function(url,port,details) {
		 var url2;
		 var parser,xmlDoc,errInfo,status;
         var x,y,txt,txt2,i,text2,data3,res;
        // alert(url);
         $("#myloader").show();
        var xhr;
        var res;
        if (window.XMLHttpRequest) {
            try{
                xhr = new XMLHttpRequest();
                xhr.open('RDSERVICE',url,true);
				xhr.setRequestHeader("accept", "application/json, text/xml, */*");
                xhr.responseType = 'text';
            }catch(e){
                 xhr = new ActiveXObject("Microsoft.XMLHTTP");
                xhr.open('RDSERVICE',url,true);
            }
        } else {
            xhr = new ActiveXObject("Microsoft.XMLHTTP");
            xhr.open('RDSERVICE', url, true);
        }
        try{
        xhr.send();
        xhr.onreadystatechange = function () {
        	console.log(xhr.readyState);
            if (xhr.readyState == 4) {
            	console.log(xhr.readyState);
                if (xhr.status == 200) {
                	console.log(url);
                	console.log(xhr.responseText);
                	console.log(xhr.status);
                	res=xhr.responseText;
                	 $scope.rdrespose.res=xhr.responseText;
                	 parser = new DOMParser();
                	 console.log(res);
                	 xmlDoc=parser.parseFromString(res,"text/xml");
                	 x = xmlDoc.getElementsByTagName("RDService")[0];
                	 console.log(x);
                	 y = x.getAttributeNode("status");
                	 console.log(y);
                	 txt = y.nodeValue;
                	 if(txt=='NOTREADY'){
                	 port++;	 
                	 url2 = 'http://localhost:'+port+'/';	 
                	 console.log(txt);	 
                	// data2='';
                	 console.log(url2);
                	 console.log(port);
                	 $scope.getrd(url2,port,details);
                	 //console.log(data2);
                	
                }else{
                	$("#myloader").hide();
                	$scope.getDeviceByDeviceType(port,details);
                	
                }
                } else {
                	$("#myloader").hide();
                	 //$scope.rdrespose.res=xhr.responseText;
                	console.log(xhr.responseText);
                	$scope.loader = false;
               	 $("#errnewInfo").show(); 
                }
            }
        }
	 }catch(e){
         console.log(e);
     }
    
    };
    
    
    $scope.callDevice= function(details) {
    	
    	$("#myloader").show();
    	 var port=11100;
         
         var url = 'http://localhost:'+port+'/';
         $scope.getrd(url,port,details)
         $("#myloader").hide();
	
}

	 
     /*var getJSONCapture = function (url,callback) {
    	 alert(callback);
         var xhr;
          if (window.XMLHttpRequest) {
             try{
                 xhr = new XMLHttpRequest();
                 xhr.open('CAPTURE', url, true);
                 xhr.responseType = 'text';
             }catch(e){
                  xhr = new ActiveXObject("Microsoft.XMLHTTP");
                 xhr.open('CAPTURE', url, true);
             }
         } else {
             xhr = new ActiveXObject("Microsoft.XMLHTTP");
             xhr.open('CAPTURE', url, true);
         }
         var InputXml = "<PidOptions> <Opts fCount=\"1\" fType=\"0\" iCount=\"0\" iType=\"0\" pCount=\"0\"  format=\"0\" pidVer=\"2.0\" timeout=\"20000\" otp=\"\"  env=\"P\" wadh=\"\" /> <Demo></Demo></PidOptions>";
        // var InputXml = "<PidOptions><Opts fCount\"0\" fType=\"0\" format=\"0\" pidVer=\"2.0\" timeout=\"20000\" otp=\"\" posh =\"UNKNOWN\" env=\"P\" wadh=\"\" /><Demo></Demo><CustOpts><Param name=\"ValidationKey\" value=\"\" /></CustOpts></PidOptions>";
         
          xhr.onreadystatechange = function () {
             if (xhr.readyState == 4) {
                 if (xhr.status == 200) {
                     callback(null, xhr.responseText);
                 } else {
                     callback(status);
                 }
             }
         };
        
         xhr.send(InputXml);
     };*/
	 
	 $scope.yesBankResponse={};
	 $scope.yesBankTransaction = function(details){
		    var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
	 		var format2 = /[0123456789]/;
	 		var format4 = /[A-Z]/;
	 		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
	 		
			console.log(details);
	 		$scope.loader=true;
	 		 if(details.deviceType === null || details.deviceType === undefined || details.deviceType === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select Device");
		  			return false;
		  		}
	 		 if(details.mode === null || details.mode === undefined || details.mode === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select mode");
		  			return false;
		  		}else{
		  			if(details.mode ==='WITHDRAWAL'){
		  				if(details.amount === null || details.amount === undefined || details.amount === ""){
		  		  			$scope.loader=false;
		  		  			$scope.showAlert("danger","Enter Amount");
		  		  			return false;
		  		  		}else{
		  		  			if(format.test(details.amount)){
		  		  				$scope.loader=false;
		  						$scope.showAlert("danger", "Special chracters present in Amount");
		  						return false;
		  		  			}else if(format4.test(details.amount)){
		  		  				$scope.loader=false;
		  						$scope.showAlert("danger", "chracters present in Amount");
		  						return false;
		  		  			}else if(format2.test(details.amount)){
		  		  				var amnt =parseInt(details.amount);	
		  		  				if(amnt<100){
		  			  				$scope.loader=false;
		  							$scope.showAlert("danger", "Amount is smaller than 100");
		  							return false;
		  		  				}else if(amnt>10000){
		  			  				$scope.loader=false;
		  							$scope.showAlert("danger", "Amount is greater than 10000");
		  							return false;
		  		  				}
		  		  				
		  		  			}
		  		  			
		  		  		}
		  				
		  			}
		  		}
	 		 
	 		 if(details.bank === null || details.bank === undefined || details.bank === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select bank");
		  			return false;
		  		}
	 		 
	 		if(details.aadhar === null || details.aadhar === undefined || details.aadhar === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","Please Select aadhar");
	  			return false;
	  		}
	 		
	 		if(details.pidData === null || details.pidData === undefined || details.pidData === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","First capture your finger");
	  			return false;
	  		}
	 		
	 	
	 		 	if(details.aadhar.length<12 || details.aadhar.length>12){
				$scope.loader=false;
				$scope.showAlert("danger", "Aadhar number not equal to 12 digits");
				return false;
			}
	 		$http.post('yesBankTransaction',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 		    showDiv('div2');
	 			$scope.yesBankResponse=data.YesBankResponse;
	 			}else{
	 				
	 				$scope.showAlert("danger",data.message);
	 				/*setTimeout(function(){
		 				 if(data.nextPage != undefined){
		 					 $window.location.href = data.nextPage;
		 				 }
		 			 },1000);*/
	 			}
	 			
	 			
	 			/*else{
	 				showDiv('div3');
	 				 $scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger",data.message);
	 			}*/
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 $scope.transactionReq.mode ="";
	 
	 $scope.skyBankTransaction = function(details){
		    var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
	 		var format2 = /[0123456789]/;
	 		var format4 = /[A-Z]/;
	 		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
	 		
			console.log(details);
	 		$scope.loader=true;
	 		 if(details.deviceType === null || details.deviceType === undefined || details.deviceType === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select Device");
		  			return false;
		  		}
	 		 if(details.mode === null || details.mode === undefined || details.mode === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select mode");
		  			return false;
		  		}else{
		  			if(details.mode ==='WITHDRAWAL'){
		  				if(details.amount === null || details.amount === undefined || details.amount === ""){
		  		  			$scope.loader=false;
		  		  			$scope.showAlert("danger","Enter Amount");
		  		  			return false;
		  		  		}else{
		  		  			if(format.test(details.amount)){
		  		  				$scope.loader=false;
		  						$scope.showAlert("danger", "Special chracters present in Amount");
		  						return false;
		  		  			}else if(format4.test(details.amount)){
		  		  				$scope.loader=false;
		  						$scope.showAlert("danger", "chracters present in Amount");
		  						return false;
		  		  			}else if(format2.test(details.amount)){
		  		  				var amnt =parseInt(details.amount);	
		  		  				if(amnt<100){
		  			  				$scope.loader=false;
		  							$scope.showAlert("danger", "Amount is smaller than 100");
		  							return false;
		  		  				}else if(amnt>10000){
		  			  				$scope.loader=false;
		  							$scope.showAlert("danger", "Amount is greater than 10000");
		  							return false;
		  		  				}
		  		  				
		  		  			}
		  		  			
		  		  		}
		  				
		  			}
		  		}
	 		 
	 		 if(details.bank === null || details.bank === undefined || details.bank === ""){
		  			$scope.loader=false;
		  			$scope.showAlert("danger","Please Select bank");
		  			return false;
		  		}
	 		 
	 		if(details.aadhar === null || details.aadhar === undefined || details.aadhar === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","Please Select aadhar");
	  			return false;
	  		}
	 		
	 		if(details.pidData === null || details.pidData === undefined || details.pidData === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","First capture your finger");
	  			return false;
	  		}
	 		
	 	
	 		 	if(details.aadhar.length<12 || details.aadhar.length>12){
				$scope.loader=false;
				$scope.showAlert("danger", "Aadhar number not equal to 12 digits");
				return false;
			}
	 		$http.post('skyTransaction',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 		    showDiv('div2');
	 		  // $scope.showAlert("success",data.message);
	 			$scope.yesBankResponse=data.YesBankResponse;
	 			console.log($scope.yesBankResponse);
	 			}else{
		 			showDiv('div2');	
		 			console.log($scope.yesBankResponse);
		 			$scope.yesBankResponse=data.YesBankResponse;	
		 				/*$scope.showAlert("danger",data.message);
		 				setTimeout(function(){
			 				 if(data.nextPage != undefined){
			 					 $window.location.href = 'myaeps';
			 				 }
			 			 },1000);*/
		 			}
	 			
	 			
	 			/*else{
	 				showDiv('div3');
	 				 $scope.registerCustomer.mobile =details.mobile;
	 				$scope.showAlert("danger",data.message);
	 			}*/
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 $scope.resendOtp= function(details){
		 console.log(details);
		 $http.post('resendOtp',details).success(function(data) {
				console.log(data);
				$scope.loader = false; 
				if(data.status == "1"){
					
				    showDiv('div1');
					sshowDiv('sdiv1');
			
					
	 			}
				else{
	 				$scope.showAlert("danger", data.message);
	 				$scope.remitter.customermobile=details.mobile;
	 				showDiv('div1');
	 				sshowDiv('sdiv0');
	 				
	 			}
			 }).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});	 
	 }
	 $scope.remDetails2={};
	 $scope.checkuserEncorenew = function(details){
 		$scope.loader = true;
 		
 		var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
		var format2 = /[0123456789]/;
		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
		console.log(format3.test(details.mobile));
		/*console.log(format.test(exp));
		console.log(format.test(details.mobile));*/
		if(!format2.test(details.mobile)){
			$scope.loader=false;
			$scope.showAlert("danger", "chracters present in Mobile Number");
			return false;
		
		}
		
		if(format3.test(details.mobile)){
			$scope.loader=false;
			$scope.showAlert("danger", "chracters present in Mobile Number");
			return false;
		
		}
		if(format.test(details.mobile)){
			$scope.loader=false;
			$scope.showAlert("danger", "Special chracters present in Mobile Number");
			return false;
		
		}
 		if(details.mobile.length<10 || details.mobile.length>10){
 			$scope.loader=false;
  			$scope.showAlert("danger","Mobile Number should be 10 digit");
  			return false;
 		}
		$http.post('checkuserEncoreNew', details).success(function(data) {
			console.log(data);
			$scope.loader = false; 
			if(data.status == "1"){
			    showDiv('div1');
				sshowDiv('sdiv2');
			//	$scope.showAlert("success", data.message);
			/*	showDiv("div1");
				sshowDiv('sdiv2');*/
				$scope.remitterDetails=data;
				$scope.remitterbeneficiarylist=data.beneficiarylist;
				console.log($scope.remitterbeneficiarylist);
				/*$scope.remitterDetails.remitter=data.MOBILENO;
				$scope.remitterDetails.remitterid=data.REMID;*/
				//$scope.viewdoopmebene();
				
 			}else if(data.status == "2"){
 				$scope.showAlert("danger", data.message);
 			//	$scope.remDetails.mobile==details.mobile;
 				$scope.remitter.customermobile=details.mobile;
 				showDiv('div1');
 				sshowDiv('sdiv1');	
 				$scope.remDetails2.mobile==details.mobile;
 			}
			
			else{
 				$scope.showAlert("danger", data.message);
 				$scope.remitter.customermobile=details.mobile;
 				showDiv('div1');
 				sshowDiv('sdiv0');
 				
 			}
		 }).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	 
		$scope.encoreRemitterRegister =function(details){
    		$scope.loader = true;
    		
    		
    		var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
    		var format2 = /[0123456789]/;
    		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
    		console.log(format3.test(details.mobile));
    		/*console.log(format.test(exp));
    		console.log(format.test(details.mobile));*/
    		if(format2.test(details.customerfname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Numbers present in customer first name");
    			return false;
    		
    		}
    		
    		if(format3.test(details.customerfname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Numbers present in customer first name");
    			return false;
    		
    		}
    		if(format.test(details.customerfname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Special chracters present in customer last name");
    			return false;
    		
    		}
    		
    		
    		if(format2.test(details.customerlname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Numbers present in customer last name");
    			return false;
    		
    		}
    		
    		if(format3.test(details.customerlname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Numbers present in customer last name");
    			return false;
    		
    		}
    		if(format.test(details.customerlname)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Special chracters present in customer last name");
    			return false;
    		
    		}
    		if(details.customerfname === null || details.customerfname === undefined || details.customerfname === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","Enter your first name");
	  			return false;
	  		}
    		if(details.customerlname === null || details.customerlname === undefined || details.customerlname === ""){
	  			$scope.loader=false;
	  			$scope.showAlert("danger","Enter your last name");
	  			return false;
	  		}
    		$scope.loader = false;
    		/*showDiv("div1");
			sshowDiv('sdiv1');*/
			$scope.remDetails=details;
    		$http.post('remmiterRegisterEncoreNew', details).success(function(data) {
    			console.log(data);
    			$scope.loader = false; 
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    				showDiv("div1");
    				sshowDiv('sdiv1');
    				$scope.remDetails=data;
    				//$scope.remiid=data.REMID;
    				$scope.remitterDetails.remitter=data.MOBILENO;
    				$scope.remitterDetails.remitterid=data.REMID;
    				//$scope.viewdoopmebene();
     			}else{
     				$scope.showAlert("danger", data.message);
     				showDiv('div1');
     				sshowDiv('sdiv0');
     				
     			}
    		 }).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
		
		
		$scope.verifyremitter =function(details){
    		$scope.loader = true;
    		$http.post('verifyremitter', details).success(function(data) {
    			console.log(data);
    			$scope.loader = false; 
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    				showDiv("div1");
    				sshowDiv('sdiv1');
    				$scope.remDetails=data;
    				//$scope.remiid=data.REMID;
    				/*$scope.remitterDetails.remitter=data.MOBILENO;
    				$scope.remitterDetails.remitterid=data.REMID;*/
    				//$scope.viewdoopmebene();
     			}else{
     				$scope.showAlert("danger", data.message);
     				showDiv('div1');
     				sshowDiv('sdiv0');
     				
     			}
    		 }).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
	 
	 $scope.ValidateBeneficiaryEncore = function(details){
	 	
	 		$scope.loader = true;
	 		console.log(details);
	 		$http.post('ValidateBeneficiaryEncoreNew',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success",data.message);
	 				$scope.checkuserEncorenew(data);
	 				/*$scope.beneDetails=data;
	 				showDiv("div1");
	 				sshowDiv('sdiv5');*/
	 				
	  			}else{
	  				$scope.showAlert("danger",data.message);
	  				$scope.checkuserEncore(data);
	  				/*showDiv('div1');
	  				sshowDiv('sdiv2');*/
	  				
	  			}
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 $scope.yesBankVerifyBeneficiary = function(details){
		 details.id=details.id.toString();
	 		$scope.loader = true;
	 		console.log(details);
	 		$http.post('yesBankVerifyBeneficiary',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success", data.message);
	 				$scope.checkuserYesBank(data);
	  			}else{
	  				$scope.showAlert("danger", data.message);
	  				showDiv('div1');
	  				sshowDiv('sdiv2');
	  				
	  			}
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.remitterverify = function(details){
	 		$scope.loader = true;
	 		
	 		console.log(details);
	 		$http.post('OTPVERIFICATION',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success", data.message);
	 				$scope.checkuserEncorenew(data);
	  			}else{
	  				$scope.showAlert("danger", data.message);
	  				showDiv('div0');
	  				
	  				
	  			}
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 $scope.impsMoneyTransferEncore = function(details){
		 details.id=details.id.toString();
 		console.log(details);
 		
 		 var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
	 	 var format2 = /[0123456789]/;
	 	 var format4 = /[A-Z]/;
	 	 var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;

 		$scope.loader = true;
 		if(details.accountType === undefined || details.accountType === null || details.accountType === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please select Account Type!");
 			return false;
 		}
 		
 		
 		if(details.amount === undefined || details.amount === null || details.amount === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Enter Transfer Amount!");
 			return false;
 		}else{

	  			if(format.test(details.amount)){
	  				$scope.loader=false;
					$scope.showAlert("danger", "Special chracters present in Amount");
					return false;
	  			}else if(format4.test(details.amount)){
	  				$scope.loader=false;
					$scope.showAlert("danger", "chracters present in Amount");
					return false;
	  			}else if(format2.test(details.amount)){
	  				var amnt =parseInt(details.amount);	
	  				var limit =parseInt(details.limit);	
	  				if(amnt>limit){
		  				$scope.loader=false;
						$scope.showAlert("danger", "Amount is greater than limit");
						return false;
	  				}
	  				if(amnt<0){
		  				$scope.loader=false;
						$scope.showAlert("danger", "Amount should be grater than 0");
						return false;
	  				}
	  				
	  				if(details.custtype=='NON-KYC'){
	  				if(amnt>10000){
		  				$scope.loader=false;
						$scope.showAlert("danger", "Amount is greater than 10000");
						return false;
	  				}
	  				}else if(details.custtype=='KYC'){
	  					if(amnt>200000){
			  				$scope.loader=false;
							$scope.showAlert("danger", "Amount is greater than 200000");
							return false;
		  				}
	  				}
	  				
	  			}
	  			
	  		
 		}
 		
 		
 		
 		$http.post('impsMoneyTransferEncoreNew',details).success(function(data) {
 			$scope.loader = false;
 				if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				showDiv('div1');
	    				sshowDiv('sdiv2');
 				}else{
 					$scope.showAlert("danger", data.message);
 					showDiv('div1');
 					sshowDiv('sdiv2');
 				}
 			
 		});
 	}
	 
	 $scope.deleteBeneficiaryEncore = function(details,remmobile){
 		$scope.loader = true;
 		 details.id=details.id.toString();
 		console.log(details);
 		details.mobile=remmobile;
 		$http.post('deleteBeneficiaryEncoreNew',details).success(function(data) {
 			console.log(data) 
 			$scope.loader = false;
 			if(data.status == "1"){
				$scope.showAlert("success",data.message);
				$scope.checkuserEncorenew(data);
 				/*showDiv('div1');
 				sshowDiv('sdiv2');*/
				
				/*
				 *  $('#deleteotp').modal('show'); 
				  $scope.popsettlestatus=data;
				 * $scope.inputvar={"mobile":$scope.remimob};
 				$scope.checkuserDoopme($scope.inputvar);*/
			}else{
				$scope.showAlert("danger", data.message);
 				$scope.checkuserEncore(data);
			}
		
 			
 		});
 	}
	 $scope.VerifyDeleteBane = function(details){
		 details.id=details.id.toString();
	 		$scope.loader = true;
	 		console.log(details);
	 		$http.post('VerifyDeleteYesBane',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success", data.message);
	 				$scope.checkuserYesBank(data);
	 				$('#deleteotp').modal('hide');
	  			}else{
	  				$('#deleteotp').modal('hide');
	  				$scope.showAlert("danger", data.message);
	  				showDiv('div1');
	  				sshowDiv('sdiv2');
	  				
	  				
	  				
	  			}
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.checkImpsStatus = function(details){
		    details.id=details.id.toString();
		    details.amount=details.amount.toString();
		    details.charge=details.charge.toString();
		    details.op_bal=details.op_bal.toString();
		    details.cl_bal=details.cl_bal.toString();
	 		$scope.loader = true;
	 		console.log(details);
	 		$http.post('checkImpsStatus',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success", data.message);
	 				
	 				
	  			}else{
	  				
	  				
	  			}
	 			
	 			setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.REFUNDImpsStatus = function(details){
		    details.id=details.id.toString();
		    details.amount=details.amount.toString();
		    details.charge=details.charge.toString();
		    details.op_bal=details.op_bal.toString();
		    details.cl_bal=details.cl_bal.toString();
		    details.paidamnt=details.paidamnt.toString();
	 		$scope.loader = true;
	 		console.log(details);
	 		$http.post('REFUNDImpsStatus',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				$scope.showAlert("success", data.message);
	 				 $('#refundotp').modal('show'); 
	 				 $scope.poprefund=data;
	 				$scope.refunddetails=details;
	 				
	  			}else{
	  				
	  				
	  			}
	 			
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 			
	 			
	 		});
	 	}
	 
	 
	 $scope.refundOTP = function(refunddetails,poprefund){
		 
		 
		 
		 
		 
		 refunddetails.REQUESTNO=poprefund.REQUESTNO.toString();
		 refunddetails.OTP=poprefund.OTP;
		    $scope.loader = true;
	 		console.log(refunddetails);
	 		$http.post('refundOTP',refunddetails).success(function(data) {
	 			console.log(data);
	 			$scope.loader = false; 
	 			if(data.status == "1"){
	 				 $('#refundotp').modal('hide');
	 				$scope.showAlert("success", data.message);
	  			}else{
	  				 $('#refundotp').modal('hide');
	  				$scope.showAlert("danger", data.message);
	  				
	  			}
	 			
	 			setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);
	 		 }).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	
	 
	 $scope.doopmePaymentdetails = function(details,limit,custtype){
		    details.limit=limit;
		    details.custtype=custtype;
	 		$scope.bundlepayDetails=details;
	 		console.log($scope.bundlepayDetails);
	 		sshowDiv('sdiv6');
	 	}
	 $scope.fetchbank= function(){
			$scope.loader=true;	
			$http.post("fetchbank").success(function(data){
				$scope.loader=false;
				console.log(data);
				$scope.beneIFSCCode=data.ifsc;
				sshowDiv('sdiv4');
			});
		}
	 $scope.addBeneficiaryEncore = function(details){
 		$scope.loader = true;
 		console.log(details);
 		details.bene_name=details.bene_name.trim();
 		details.beneMobileNumber=details.beneMobileNumber.trim();
 		details.accountNumber=details.accountNumber.trim();
 		console.log(details);
 		var format = /[!@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
		var format2 = /[0123456789]/;
		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
	//	console.log(format.test(details.bene_name));
		/*console.log(format.test(exp));
		console.log(format.test(details.mobile));*/
		
		if(format.test(details.bene_name)){
			$scope.loader=false;
			$scope.showAlert("danger", "Special chracters present in Name");
			return false;
		
		}
			if(format2.test(details.bene_name)){
			$scope.loader=false;
			$scope.showAlert("danger", "Numbers present in Name");
			return false;
		
		}
			if(format3.test(details.bene_name)){
			$scope.loader=false;
			$scope.showAlert("danger", "Numbers present in Name");
			return false;
			}
			
			if(details.bene_name === undefined || details.bene_name === null || details.bene_name === "" ){
	 			$scope.loader=false;	
	 			$scope.showAlert("info", "Please Enter BeneFiciary Name!");
	 			return false;
	 		}
		
 		if(details.beneMobileNumber === undefined || details.beneMobileNumber === null || details.beneMobileNumber === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please select Mobile Number!");
 			return false;
 		}
 		
 		
 		if(details.beneMobileNumber.length<10  || details.beneMobileNumber.length>10 ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Mobile Number should be 10 digit");
 			return false;
 		}
 		
 		if(details.beneMobileNumber === undefined || details.beneMobileNumber === null || details.beneMobileNumber === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please BeneFiciary Name!");
 			return false;
 		}
 		
 		if(!format2.test(details.beneMobileNumber)){
			$scope.loader=false;
			$scope.showAlert("danger", "chracters present in Mobile Number");
			return false;
		
		}
		
		if(format3.test(details.beneMobileNumber)){
			$scope.loader=false;
			$scope.showAlert("danger", "chracters present in Mobile Number");
			return false;
		
		}
		if(format.test(details.beneMobileNumber)){
			$scope.loader=false;
			$scope.showAlert("danger", "Special chracters present in Mobile Number");
			return false;
		
		}
 		
 		if(details.accountNumber === undefined || details.accountNumber === null || details.accountNumber === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please Account Number!");
 			return false;
 		}
 		
 		
 		if(details.confirmaccountNumber === undefined || details.confirmaccountNumber === null || details.confirmaccountNumber === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please Account Number!");
 			return false;
 		}else{
 			if(details.accountNumber!=details.confirmaccountNumber){
 				$scope.loader=false;	
 	 			$scope.showAlert("info", "Account Number and confirm Account Number are different!");
 	 			return false;	
 			}
 		}
 		
 		if(format.test(details.accountNumber)){
			$scope.loader=false;
			$scope.showAlert("danger", "Special chracters present in Account Number");
			return false;
		
		}
 		
 		if(format.test(details.confirmaccountNumber)){
			$scope.loader=false;
			$scope.showAlert("danger", "Special chracters present in Account Number");
			return false;
		
		}
 		
 		if(details.acc_type === undefined || details.acc_type === null || details.acc_type === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please select Account Type!");
 			return false;
 		}
 		if(details.IFSC_CODE === undefined || details.IFSC_CODE === null || details.IFSC_CODE === "" ){
 			$scope.loader=false;	
 			$scope.showAlert("info", "Please select IFSC CODE!");
 			return false;
 		}
 		$http.post('addBeneficiaryEncoreNew', details).success(function(data) {
 			console.log(data);
 			$scope.loader = false; 
 			if(data.status == "1"){
 				$scope.showAlert("success", data.message);
 				$scope.checkuserEncorenew(data);
 				/*showDiv("div1");
 				sshowDiv('sdiv5');*/
 				//$scope.checkuserYesBank(data);
 			//	$scope.beneDetails=data.response;
 				
 				
 				
  			}else{
  				$scope.showAlert("danger", data.message);
  				showDiv('div1');
  				sshowDiv('sdiv2');
  				
  			}
 		 }).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
 	
	 $scope.getIfscCodeForBank = function(details){ 
			if(details === ""){
				$scope.bene.beneIFSCCode  = "";
				return false;					
			}		
			angular.forEach($scope.ifscCodeList, function(value, key) {
             if (value.id === parseInt(details)) {
                 $scope.bene.beneIFSCCode = $scope.ifscCodeList[key].ifscCode;                    
             }
         });
		};
	 $scope.viewdoopmebene = function(){
 		$scope.loader = true;
 		$http.post('viewdoopmebene').success(function(data) {
 			console.log(data.beneficiaryresponse.myArrayList);
 			$scope.loader = false;
 				if(data.status == "1"){
	    				$scope.benedetails=data.beneficiaryresponse.myArrayList;
	    				showDiv('div1');
	    				sshowDiv('sdiv2');
 				}else{
 					$scope.showAlert("danger", data.message);
 					showDiv('div1');
 					sshowDiv('sdiv2');
 				}
 			
 		});
 	}
	 $scope.getAEPSViewUser = function(){
	 		$scope.loader=true;
	 		$http.post('getAEPSViewUser').success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.aepsuser = data.aepslist;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.getRBLSETTLEMENTWALLETReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getRBLSETTLEMENTWALLETReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.settlementreport = data.settlementreport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 $scope.getRBLSETTLEMENTReport = function(details){
		$scope.loader=true;
		$http.post('getRBLSETTLEMENTReport',details).success(function(data) {
			console.log(data);
			$scope.loader=false;
			if(data.status == "1"){
				$scope.TotalSettleBalance = data.totalBalance;
				$scope.settlementreport = data.settlementreport;
				$scope.settletype = data.type;
				console.log($scope.settletype);
			} else{
				$scope.showAlert("danger", data.message);
			}
			/*setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);*/
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	 
	
	
	
	
	
	$scope.addsmsApi=function(details){

		$scope.loader=true;
		
		/*if(details.smsUsername === null || details.smsUsername === undefined || details.smsUsername === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter smsUsername");
  			return false;
  		}
		
		if(details.smsPassword === null || details.smsPassword === undefined || details.smsPassword === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter smsPassword");
  			return false;
  		}
		
		if(details.senderId === null || details.senderId === undefined || details.senderId === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter senderId");
  			return false;
  		}
		
		if(details.company === null || details.company === undefined || details.company === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter company");
  			return false;
  		}
		*/
		$http.post('addsmsApi',details).success(function(data) {
			if(data.status === "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger",data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	};
	
	
	
	$scope.addApi=function(details){

		$scope.loader=true;
		
		if(details.apiname === null || details.apiname === undefined || details.apiname === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter apiname");
  			return false;
  		}
		
		if(details.apiurl === null || details.apiurl === undefined || details.apiurl === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter apiurl");
  			return false;
  		}
		
		$http.post('addApi',details).success(function(data) {
			if(data.status === "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger",data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	};
	
	$scope.checkUniqueUser = function(details){
		$scope.inputJson = {"username": details};	
		$http.post('checkUniqueUser',$scope.inputJson).success(function(data) {
			if(data.status == "1"){
				$scope.showAlert("danger", data.message);
				$scope.addUserDetails.email = "";
				$scope.addUserDetails.mobile = "";
			}
			$scope.inputJson = {};
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	$scope._GetUpline = function(value,divName, modelName){		
		var divId = $parse(divName);
		if(value === '2' || value === '100' || value === '3'){
			$scope.addUserDetails.uplineId = $scope.userDetails.userId; 
			return false;
		} else {
			$scope.addUserDetails.uplineId = "";
			var inputJson = {userType: value, modelName: modelName};
			console.log(inputJson);
			$http.post('_GetUpline', inputJson).success(function(data) {
				divId.assign($scope,  $sce.trustAsHtml(data.message));			
			}).error(function(data){
				divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
			});
		}
	};
	$scope.addNewUser = function(details){
		$scope.loader=true;
		//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
		var pattern=/^[a-z0-9]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
		$scope.loader=true;
		if(details.name === undefined || details.name === null || details.name === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your name!");
			return false;
		}
		if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Firm Name!");
			return false;
		}
		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your valid Mobile Number!");
			return false;
		}
		if(details.address === undefined || details.address === null || details.address === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Address!");
			return false;
		}
		if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Pincode!");
			return false;
		}
		if(details.state === undefined || details.state === null || details.state === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your state!");
			return false;
		}
		if(details.city === undefined || details.city === null || details.city === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your city!");
			return false;
		}
		if(details.userType === undefined || details.userType === null || details.userType === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Usertype!");
			return false;
		}
		if(!pattern.test(details.email)){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your valid Email!");
			return false;
		}
		if(details.email === undefined || details.email === null || details.email === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Email!");
			return false;
		}
		$http.post('addUser', details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getUserByUserType = function(details, divName, modelName){	
		$scope.inputJson = {"userType": details, "modelName": modelName};		
		var divId = $parse(divName);	
		if(details == "0" || details === ""){
			divId.assign($scope,  $sce.trustAsHtml(""));
			return false;
		}
		$http.post('getUserByUserType',$scope.inputJson).success(function(data){
			divId.assign($scope,  $sce.trustAsHtml(data.message));			
		}).error(function(data){
			divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
		});
	};
	
	$scope.addBalanceByAdmin = function(details){
		$scope.loader=true;
		$http.post('addBalance',details).success(function(data){
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.filterValue = function($event){
		if(isNaN(String.fromCharCode($event.keyCode))){
			$event.preventDefault();
		}
	};
	
	$scope.changeStatus = function(item){	
		$scope.loader=true;
		$http.post('changeStatus',item).success(function(data){

			$scope.loader=false;
		angular.forEach($scope.viewUserDetails, function(value, key) {
		   if(value.userId === item.userId){
			   if(item.status == 0){
				   $scope.viewUserDetails[key].status = 1;
			   } else {
				   $scope.viewUserDetails[key].status = 0;
			   }
		   }
		});
		});
	};
	
	
	// REPORT
	$scope.tranReport = {};
	$scope.tranReport.startDate = $scope.date;
	$scope.tranReport.endDate = $scope.date;
	
	$scope.getTransactionReport = function(tranReport){	
		$scope.loader=true;
		$scope.data = [];
		$http.post('getTransactionReport',tranReport).success(function(data){	
			$scope.loader=false;
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewTransactioReportPagination = false;
					$scope.TransactioReport = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewTransactioReportPagination = true;
					$scope.TransactioReport = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.TransactioReport.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				if(data.status === '0'){					
					$scope.data = [];
					$scope.viewTransactioReportPagination = false;
					$scope.TransactioReport = [];
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	};
	
	$scope.getTransactionReportReportExcel = function(data){
		alasql('SELECT * INTO XLSX("TransactionReport.xls",{headers:true}) FROM ?',[data]);		
	};
	$scope.RechargeReports = [];
	$scope.rechargeReport = {};
	$scope.rechargeReport.startDate = $scope.date;
	$scope.rechargeReport.endDate = $scope.date;
	$scope.getRechargeReport = function(details){			
		$scope.loader = true;			
		$http.post('getRechargeReport',details).success(function(data){
			$scope.loader = false;
			if(data.status == "1"){				
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewRechargeReportsPagination = false;
					$scope.RechargeReports = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewRechargeReportsPagination = true;
					$scope.RechargeReports = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.RechargeReports.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewRechargeReportsPagination = false;
				$scope.RechargeReports = [];
				$scope.data = [];
			}
		});
	}
	
	$scope.getRechargeReportExcel = function(data){
		alasql('SELECT * INTO XLSX("RechargeReport.xls",{headers:true}) FROM ?',[data]);		
	};
	
	$scope.balReqReport = {};
	$scope.balReqReport.startDate = $scope.date;
	$scope.balReqReport.endDate = $scope.date;
	
	$scope.viewBalReqReport = function(details){	
		
	}
	
	$scope.balRevReport = {};
	$scope.balRevReport.startDate = $scope.date;
	$scope.balRevReport.endDate = $scope.date;
	
	$scope.viewBalRevReport = function(details){	
		$scope.loader=true;		
		$http.post('viewBalRevReport',details).success(function(data) {	
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewBalRevReportPagination = false;
					$scope.balRevTransactioReport = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewBalRevReportPagination = true;
					$scope.balRevTransactioReport = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.balRevTransactioReport.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				if(data.status === '0'){
					setTimeout(function(){
						if(data.nextPage != undefined){
							$window.location.href = data.nextPage;
						 }
					 },1000);
				}
				
			}	
			$scope.loader=false;
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.viewBalRevReportReportExcel = function(data){
		alasql('SELECT * INTO XLSX("RevertBalance.xls",{headers:true}) FROM ?',[data]);		
	};
	
	
	
	
	//-------------------------------
	
	$scope.getMyDiscount = function() {
        $scope.loader = true;
        $http.post('getMyDiscount', $scope.userDetails).success(function(data) {
            $scope.loader = false;
            if (data.status == "1") {
                $scope.myDiscount = data.commissionList;                
            } else {
                $scope.showAlert("danger", data.message);
            }
            setTimeout(function() {
                if (data.nextPage != undefined) {
                    $window.location.href = data.nextPage;
                }
            }, 1000);
        }).error(function(data) {
            $scope.loader = false;
            $scope.showAlert("danger", "Technical Error. Please try after sometime");
        });
    }
	
	$scope.getMyDefaultDiscount = function(){
		$scope.loader=true;		
		var inputJson = {"username": $scope.userDetails.userId};
		$http.post('getMyDefaultDiscount',inputJson).success(function(data) {
			$scope.loader=false;
			console.log(data);
			if(data.status == "1"){				
				$scope.defaultDiscount = data.commissionList;	
				$scope.myCommission = data.myComission;
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.setDefaultDiscount = function(discount){
		$scope.loader=true;
		var inputJson = {"discount": discount};
		$http.post('setDefaultDiscount',discount).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.getIndividualDiscount = function(details){
		$scope.loader=true;
		var inputJson = {"username": details};
		$http.post('getIndividualDiscount',inputJson).success(function(data) {
			console.log(data);
			$scope.loader=false;
			if(data.status == "1"){				
				$scope.individualDiscount = data.commissionList;
				$scope.myCommission = data.myComission
				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.setIndividualDiscount = function(discount){
		$scope.loader=true;
		var inputJson = {"discount": discount};
		$http.post('setIndividualDiscount',discount).success(function(data) {			
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
			$scope.loader=false;
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getDefaultChargeSetting = function(){
		$scope.loader=true;
		var inputJson = {"username": $scope.userDetails.userId};
		$http.post('getDefaultChargeSetting',inputJson).success(function(data) {
			$scope.loader=false;
			if(data.status == "1" && data.chargeList != undefined){					
				$scope.defaultCharge = data.chargeList;				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.setDefaultChargeSetting = function(charge){
		$scope.loader=true;
		var inputJson = {"charge": charge};
		$http.post('setDefaultChargeSetting',charge).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getIndividualCharge = function(details){
		$scope.loader=true;			
		$http.post('getIndividualCharge',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){				
				$scope.individualCharge = data.chargeList;				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.setIndividualCharge = function(charge){
		$scope.loader=true;
		var inputJson = {"discount": charge};		
		$http.post('setIndividualCharge',charge).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getViewUser = function(details){
		$scope.loader=true;
		$http.post('getViewUser',details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewUserPagination = true;
					$scope.viewUserDetails = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.viewUserDetails.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewUserPagination = false;
				$scope.viewUserDetails = [];
				$scope.data = [];
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	
	$scope.getViewInactiveUser = function(details){
		$scope.loader=true;
		$http.post('getViewInactiveUser',details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewUserPagination = true;
					$scope.viewUserDetails = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.viewUserDetails.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewUserPagination = false;
				$scope.viewUserDetails = [];
				$scope.data = [];
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.updateNews = function(details){
		$scope.loader=true;		
		$http.post('updateNews',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.insertBankDetails = function(bankDetails){
		$scope.loader=true;		
		$http.post('insertBankDetails',bankDetails).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.signInByAdmin = function(item){
		$scope.loader=true;		
		$http.post('signInByAdmin',item).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.viewBankDetail = function(){
		$scope.loader=true;		
		$http.post('viewBankDetails').success(function(data) {
			$scope.loader=false;				
			if(data.status == "1"){
				if(data.bankDetails === undefined || data.bankDetails.length <= 0){
					$scope.viewBankDetails = [];					
				}else{				
					$scope.viewBankDetails = data.bankDetails;		
				}
			}else{
				$scope.showAlert("danger", data.message);
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getAddBalanceModal = function(item){		
		$scope.loader=true;	
		if(item != null){
			$scope.userAddBal = {};
			$scope.userAddBal.userId = item.userId;
			$scope.userAddBal.name = item.name;
			$scope.userAddBal.amount = 0;
			$scope.userAddBal.remarks = "";
			$scope.loader=false;	
		} else {
			$scope.loader=false;	
			$scope.showAlert("danger", "Please try after sometime!");
		}
	};
	
	$scope.sendPassword = function(item){
		$scope.loader=true;		
		$http.post('sendPassword',item).success(function(data) {			
			$scope.loader=false;	
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.deleteUser = function(item){
		$scope.loader=true;	
		$http.post('deleteUser',item).success(function(data) {
			$scope.loader=false;	
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
				angular.forEach($scope.viewUserDetails, function(value, key) {
					if(value.userId === item.userId){						
						$scope.viewUserDetails.splice(key, 1);						
					}
				});
			}else{
				$scope.showAlert("danger", data.message);
			}
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getEditBankDetailsModal = function(item){
		$scope.loader=true;	
		$scope.bankDetails1 = item;
		$scope.loader=false;
	};
	
	$scope.updateBankDetails = function(details){		
		$scope.loader=true;	
		$http.post('updateBankDetails',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	 $scope.AdvancedSearchUser = function(details){
		 $scope.loader=true;		
			$http.post('advancedSearchUser', details).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewUserPagination = false;
						$scope.viewUserDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUserPagination = true;
						$scope.viewUserDetails = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUserDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
	 };
	 
	 $scope.AdvancedCustomerNo = function(details){
		 $scope.loader=true;
		 $http.post("advancedCustomerNo",details).success(function(data){
			 $scope.loader = false;
				if(data.status == "1"){					
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewRechargeReportsPagination = false;
						$scope.RechargeReports = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewRechargeReportsPagination = true;
						$scope.RechargeReports = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.RechargeReports.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewRechargeReportsPagination = false;
					$scope.RechargeReports = [];
					$scope.data = [];
				}
		 }).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
	 };
	 
	 $scope.deleteBankDetails = function(item){
			$scope.loader=true;	
			$http.post('deleteBankDetails',item).success(function(data) {
				$scope.loader=false;	
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
					angular.forEach($scope.viewBankDetails, function(value, key) {
						if(value.id === item.id){						
							$scope.viewBankDetails.splice(key, 1);						
						   }
						});
				}else{
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		$scope.revertUserBalance = function(details){
			$http.post('revertUserBalance',details).success(function(data){
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.apiSwitching = function(details){
			$scope.loader=true;			
			$http.post('apiSwitching',details).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewComplain = {};
		$scope.viewComplain.startDate = $scope.date;
		$scope.viewComplain.endDate = $scope.date;
		
		$scope.viewlatestComplain = function(details){
			$scope.loader=true;	
			$http.post("viewLatesComplain",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewPendingComplain = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingComplain",details).success(function(data){
				$scope.loader=false;				
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getComplainDetails = function(details){
			$scope.loader=true;	
			$http.post("viewComplain",details).success(function(data){
				$scope.loader=false;				
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateComplainDetails = function(details){			
			if(details.adminMessage === ""){
				$scope.showAlert("danger", "Enter your message!");
				angular.forEach($scope.viewComplainDetails, function(value, key) {
					if (value.id === details.id) {
						$scope.viewComplainDetails[key].status = "PENDING";		               
	                }
				});
				return false;
			}
			$http.post("updateComplainDetails",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.complain = $scope.notification.complain - 1;
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewComplainDetails, function(value, key) {
						if (value.id === details.id) {
							$scope.viewComplainDetails[key].status = "PENDING";		               
		                }
					});
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.setImpscharge = function(Impscharge){
			$scope.loader=true;
			$http.post('setImpscharge',Impscharge).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}

		$scope.userMappingFunc = function(userMapping,userMappingTo){		
			$scope.loader=true;
			var inputJson = {mapUserType:userMapping.mappuserType, mapUserId:userMapping.userId, mapToUserType : userMappingTo.userType, mapToUserId: userMappingTo.userId};
			$http.post("userMapping",inputJson).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.setUserLockedAmount = function(details){		
			$scope.loader=true;
			if(details.amount === undefined || details.amount === null || details.amount === ""){
				$scope.showAlert("danger", "Enter Amount!");
				$scope.loader=false;
				return false;				
			} 
			$http.post("setUserLockedAmount",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getUserDetailsForEdit = function(details){
			$scope.loader=true;
			$http.post("getUserDetailsForEdit",details).success(function(data){
				$scope.loader=false;if(data.status == "1"){	
					$scope.editUserProfile = {};
					$scope.userProfile = {};
					$scope.editUserProfile.status = data.status;
					$scope.userProfile = data.userProfile;
				} else{
					$scope.showAlert("danger", data.message);
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}
				
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.editProfileForUser = function(details){
			$scope.loader=true;
			if(details.password != details.cPassword){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Same Password");
				return false;
			}
			
			if(details.password === undefined||details.password === null ||details.password === ""|| 
					details.cPassword === undefined||details.cPassword === null ||details.cPassword === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Password and Confirm Password");
				return false;
			}
			
			$http.post('editProfileForUser',details).success(function(data) {
				$scope.loader=false;
				if (data.status == '1') {
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				 setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000)
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		} 
		
		$scope.viewBalanceRequest = {};
		$scope.viewBalanceRequest.startDate = $scope.date;
		$scope.viewBalanceRequest.endDate = $scope.date;
		
		$scope.viewPendingBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateBalanceRequest = function(details, status){
			$scope.loader=true;			
			details.status = status;
			$http.post("updateBalanceRequest",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.balRequest = $scope.notification.balRequest - 1;					
					angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {						
							$scope.viewBalanceRequestDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {
							$scope.viewBalanceRequestDetails[key].status = "PENDING";		               
		                }
					});
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewBalanceTransferReport = {};
		$scope.viewBalanceTransferReport.startDate = $scope.date;
		$scope.viewBalanceTransferReport.endDate = $scope.date;
		
		$scope.getBalanceTransferReport = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceTransferReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceTransfer === undefined || response.BalanceTransfer.length <= 0){
						$scope.viewBalanceTransferPagination = false;
						$scope.viewBalanceTransferDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceTransferPagination = true;
						$scope.viewBalanceTransferDetails = response.BalanceTransfer;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceTransferDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceTransferPagination = false;
					$scope.viewBalanceTransferDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewUtilityRequest = {};
		$scope.viewUtilityRequest.startDate = $scope.date;
		$scope.viewUtilityRequest.endDate = $scope.date;
		
		$scope.viewPendingUtilityRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingUtilityRequest",details).success(function(response){
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.utility === undefined || response.utility.length <= 0){
						$scope.viewUtilityPagination = false;
						$scope.viewUtilityDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUtilityPagination = true;
						$scope.viewUtilityDetails = response.utility;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUtilityDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUtilityPagination = false;
					$scope.viewUtilityDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewUtilityReport = function(details){			
			$scope.loader=true;				
			$http.post("viewUtilityReport",details).success(function(response){				
				$scope.loader=false;					
				if(response.status == "1"){
					if(response.utility === undefined || response.utility.length <= 0){
						$scope.viewUtilityPagination = false;
						$scope.viewUtilityDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUtilityPagination = true;
						$scope.viewUtilityDetails = response.utility;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUtilityDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUtilityPagination = false;
					$scope.viewUtilityDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.updateUtilityReport = function(details, status){
			$scope.loader=true;			
			details.status = status;			
			$http.post("updateUtilityReport",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.utility = $scope.notification.utility - 1;					
					angular.forEach($scope.viewUtilityDetails, function(value, key) {
						if (value.utilityId === details.utilityId) {						
							$scope.viewUtilityDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewUtilityDetails, function(value, key) {
						if (value.utilityId === details.utilityId) {
							$scope.viewUtilityDetails[key].status = "PENDING";		               
		                }
					});
				}
				
				if($scope.viewUtilityDetails.length == 0){
					$scope.viewUtilityPagination = true;
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewInsuranceRequest = {};
		$scope.viewInsuranceRequest.startDate = $scope.date;
		$scope.viewInsuranceRequest.endDate = $scope.date;
		
		$scope.viewPendingInsuranceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingInsuranceRequest",details).success(function(response){	
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.insurance === undefined || response.insurance.length <= 0){
						$scope.viewInsurancePagination = false;
						$scope.viewInsuranceDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewInsurancePagination = true;
						$scope.viewInsuranceDetails = response.insurance;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewInsuranceDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewInsurancePagination = false;
					$scope.viewInsuranceDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.viewInsuranceReport = function(details){			
			$scope.loader=true;				
			$http.post("viewInsuranceReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.insurance === undefined || response.insurance.length <= 0){
						$scope.viewInsurancePagination = false;
						$scope.viewInsuranceDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewInsurancePagination = true;
						$scope.viewInsuranceDetails = response.insurance;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewInsuranceDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewInsurancePagination = false;
					$scope.viewInsuranceDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateInsuranceReport = function(details, status){
			$scope.loader=true;			
			details.status = status;			
			$http.post("updateInsuranceReport",details).success(function(data){
				
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.insurance = $scope.notification.insurance - 1;					
					angular.forEach($scope.viewInsuranceDetails, function(value, key) {
						if (value.id === details.id) {						
							$scope.viewInsuranceDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewInsuranceDetails, function(value, key) {
						if (value.id === details.id) {
							$scope.viewInsuranceDetails[key].status = "PENDING";		               
		                }
					});
				}
				if($scope.viewInsuranceDetails.length == 0){
					$scope.viewInsurancePagination = true;
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		//========================
		
		$scope.getmodalSuccessRemark=  function(details,status){
			console.log(details);
			$scope.loader=true;	
			details.status = status;
			$scope.popremark = details;
			
			$scope.loader=false;
			
		}		
			
		

		
		
		
		
		$scope.updateRechargeReport = function(details){
			console.log(details);
			$scope.loader=true;			
			var status=details.status;			
			$http.post("updateRechargeReport",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);										
					angular.forEach($scope.RechargeReports, function(value, key) {
						
						if (value.id === details.id) {
							//alert(value.validation);
							$scope.RechargeReports[key].validation = status;
							//alert("successss..");
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.RechargeReports, function(value, key) {
						
						if (value.id === details.id) {
							//alert(value.validation);
							//$scope.RechargeReports[key].status = "PENDING";	
							$scope.RechargeReports[key].validation = status;	
							//alert("successss..");
		                }
					});
				}			
				
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getThemeName = function(themename){
			$scope.colorManage.theme = themename;
		}
		
		$scope.getExcelReport = function(data,fileName){
			var file = fileName+".xls";
			alasql("SELECT * INTO XLSX('"+file+"',{headers:true}) FROM ?",[data]);		
		};
		
		$scope.addIndex = function(details){
			$scope.loader = true;
			var blogimage = $scope.blogimage;			
			var fd = new FormData();
			fd.append('blogimage', blogimage);
			fd.append('addIndex',angular.toJson(details,true));			
			$http.post("addIndex", fd, {
				transformRequest : angular.identity,
				headers : {'Content-Type' : undefined }
			}).success(function(data) {
				$scope.loader=false;
				});
		}
		
		$scope.addResellerDetails = function(details) {
			$scope.loader = true;
			
			if(details.name === undefined || details.name === null || details.name === "" ){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Name Properly!");
				return false;
			}
			
			if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
				$scope.showAlert("danger", "Enter Firm Name Properly!");
				return false;
			}
			if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
				$scope.showAlert("danger", "Enter Mobile Number Properly!");
				return false;
			}
			if(details.email === undefined || details.email === null || details.email === "" ){
				$scope.showAlert("danger", "Enter Email Address Properly!");
				return false;
			}
			if(details.address === undefined || details.address === null || details.address === "" ){
				$scope.showAlert("danger", "Enter Address Properly!");
				return false;
			}
			if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
				$scope.showAlert("danger", "Enter Pincode Properly!");
				return false;
			}
			if(details.state === undefined || details.state === null || details.state === "" ){
				$scope.showAlert("danger", "Enter State Properly!");
				return false;
			}
			if(details.city === undefined || details.city === null || details.city === "" ){
				$scope.showAlert("danger", "Enter City Properly!");
				return false;
			}
			if(details.poweredBy === undefined || details.poweredBy === null || details.poweredBy === "" ){
				$scope.showAlert("danger", "Enter PoweredBy Properly!");
				return false;
			}
			if(details.poweredByLink === undefined || details.poweredByLink === null || details.poweredByLink === "" ){
				$scope.showAlert("danger", "Enter PoweredBy Link Properly!");
				return false;
			}
			if(details.pageTitle === undefined || details.pageTitle === null || details.pageTitle === "" ){
				$scope.showAlert("danger", "Enter Page Title Properly!");
				return false;
			}
			var file = $scope.myFile;			
			var fd = new FormData();
			fd.append('file', file);
			fd.append('addReseller',angular.toJson(details,true));			
			$http.post("addReseller", fd, {
				transformRequest : angular.identity,
				headers : {'Content-Type' : undefined }
			}).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data) {
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.viewResellerByAdmin = function(){
			$scope.loader=true;
			var inputJson = {"userType": "2"};	
			$http.post('getViewUser',inputJson).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewResellerPagination = false;
						$scope.viewResellerDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewResellerPagination = true;
						$scope.viewResellerDetails = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewResellerDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewResellerPagination = false;
					$scope.viewResellerDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getResellerDiscount = function(details){
			$scope.loader=true;
			if(details === undefined || details === null || details === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Choose user properly!");
				return false;
			}
			var inputJson = {"username": details};
			$http.post('getIndividualDiscount',inputJson).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){				
					$scope.resellerDiscount = data.commissionList;				
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getResellerlCharge = function(details){
			$scope.loader=true;
			if(details === undefined || details === null || details === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Choose user properly!");
				return false;
			}					
			$http.post('getIndividualCharge',details).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){				
					$scope.resellerCharge = data.chargeList;				
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		 $scope.getUserByUserType1 = function(details, divName, modelName) {
	            $scope.loader = true;
	            $scope.inputJson = {
	                "userType": details,
	                "modelName": modelName
	            };
	            var divId = $parse(divName);
	            if (details == "10" || details === "") {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml(""));
	                return false;
	            }
	            $http.post('getUserByUserType', $scope.inputJson).success(function(data) {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml(data.message));
	            }).error(function(data) {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
	            });
	        };
	        
	        $scope.setResellerTheme = function(details){
	        	$scope.loader = true;	
	        	if(details.userType != 10){
		        	if(details.userId === undefined || details.userId === null || details.userId === ""){
		        		$scope.loader=false;
		        		$scope.showAlert("danger", "Choose user properly!");
		        		return false;
		        	}
	        	}
	        	if(details.theme === undefined || details.theme === null || details.theme === ""){
	        		$scope.loader=false;
	        		$scope.showAlert("danger", "Choose Theme properly!");
	        		return false;
	        	}
	        	$http.post('setResellerTheme', details).success(function(data) {
					$scope.loader=false;			
					if(data.status == "1"){
						$scope.showAlert("success", data.message);
					}else{
						$scope.showAlert("danger", data.message);
					}
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}).error(function(data) {
					$scope.loader=false;
					$scope.showAlert("danger", "Technical Error. Please try after sometime");
				});
	        };
	        
	        $scope.getResellerDetails = function(details){
	        	console.log(details);
	        	$scope.loader=true;
	        	if(details.userType === undefined || details.userType === null || details.userType === ""){
	        		$scope.loader=false;
	        		$scope.showAlert("danger", "Choose user properly!");
	        		return false;
	        	}
	        	 if(details.userType != ""){
	        		 if(details.userId === undefined || details.userId === null || details.userId === ""){
	        			 $scope.loader=false;
	        			 $scope.showAlert("danger", "Choose user properly!");
	        			 return false;
	        		 }
	        	 }
	        	 
	        	 $http.post("getResellerDetails",details).success(function(data){
	        		 console.log(data);
	        		 $scope.loader=false;
	        		 if(data.status === "1"){
	        			 $scope.resellerDetails = data.details;
	        		 } else {
	        			 $scope.showAlert("danger", "Invalid Reseller!");
	        		 }
	        	 }).error(function(data){
	        		 $scope.loader=false;
	        		 $scope.showAlert("danger", "Technical Error. Please try after sometime");
	        	 });
	        };
	        
	        $scope.setResellerLogo = function(details) {
				$scope.loader = true;
				if(details.userType === undefined || details.userType === null ||details.userType === ""){
					$scope.loader=false;
					$scope.showAlert("danger", "Select User Properly!");
					return false;
				}
				if(details.userType != 10){
					if(details.userId === undefined || details.userId === null ||details.userId === ""){
						$scope.loader=false;
						$scope.showAlert("danger", "Select User Properly!");
						return false;
					}
				}
				var file = $scope.resLogo;			
				var fd = new FormData();
				fd.append('file', file);
				fd.append('resellerLogo',angular.toJson(details,true));			
				$http.post("setResellerLogo", fd, {
					transformRequest : angular.identity,
					headers : {'Content-Type' : undefined }
				}).success(function(data) {
					$scope.loader=false;			
					if(data.status == "1"){
						$scope.showAlert("success", data.message);
					}else{
						$scope.showAlert("danger", data.message);
					}
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}).error(function(data) {
					$scope.loader=false;
					$scope.showAlert("danger", "Technical Error. Please try after sometime");
				});
			}
	        
	        $scope.impsReports = [];
    		$scope.impsReport = {};
    		$scope.impsReport.startDate = $scope.date;
    		$scope.impsReport.endDate = $scope.date;
    		$scope.getImpsReport = function(details, divName){	
    			$scope.loader = true;	
    			$http.post('getImpsReport',details).success(function(data){
    				console.log(data);
    				$scope.loader = false;
    				if(data.status == "1"){				
    					if(data.list === undefined || data.list.length <= 0){
    						$scope.viewRechargeReportsPagination = false;
    						$scope.impsReports = [];
    						$scope.data = [];
    					}else{
    						$scope.data = [];
    						$scope.viewRechargeReportsPagination = true;
    						$scope.impsReports = data.list;
    						$scope.currentPage = 0;				   
    						for (var i=0; i<$scope.impsReports.length; i++) {
    					        $scope.data.push("Item "+i);
    					    }					
    					}
    				}else{
    					$scope.viewRechargeReportsPagination = false;
    					$scope.impsReports = [];
    					$scope.data = [];
    				}
    			});
    		}
	        
	        $scope.checkComission = function(defaultComm, myCom){
	        	if($scope.userDetails.roleId == 1){
	        		return false;
	        	} else {	        	
		        	var totalComm = parseFloat(defaultComm.distributor) + parseFloat(defaultComm.superDistributor) + parseFloat(defaultComm.retailer);
		        	if(totalComm >= myCom.commission){
		        		$scope.showAlert("info", "You Cannot Set Comission for "+myCom.serviceProvider +" more thann "+myCom.commission);
		        		angular.forEach($scope.defaultDiscount, function(value, key) {
							if(value.commissionId === defaultComm.commissionId){						
								$scope.defaultDiscount[key].distributor = 0;
								$scope.defaultDiscount[key].superDistributor = 0;
								$scope.defaultDiscount[key].retailer = 0;
							}
						});
		        	} else {
		        		return false;
		        	}
	        	}
	        	
	        };
	        
	        $scope.checkIndividualComission = function(individulaComm, myCom){
	        	if($scope.userDetails.roleId == 1){
	        		return false;
	        	} else {
		        	var totalComm = parseFloat(individulaComm.commission);
		        	if(totalComm >= myCom.commission){
		        		$scope.showAlert("info", "You Cannot Set Comission for "+myCom.serviceProvider +" more thann "+myCom.commission);
		        		angular.forEach($scope.individualDiscount, function(value, key) {
							if(value.commissionId === individulaComm.commissionId){						
								$scope.individualDiscount[key].commission = 0;							
							}
						});
		        	} else {
		        		return false;
		        	}
	        	}
	        };
	        
	        
	        $scope.refundReport = {};
	    	$scope.refundReport.startDate = $scope.date;
	    	$scope.refundReport.endDate = $scope.date;
	    	
	    	$scope.getRefundReport = function(details){	
	    		$scope.loader=true;
	    		$scope.data = [];
	    		$http.post('getRefundReport',details).success(function(data){	
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				if(data.report === undefined || data.report.length <= 0){
	    					$scope.viewRefundReportPagination = false;
	    					$scope.refundReportDetails = [];
	    					$scope.data = [];
	    				}else{
	    					$scope.data = [];
	    					$scope.viewRefundReportPagination = true;
	    					$scope.refundReportDetails = data.report;
	    					$scope.currentPage = 0;				   
	    					for (var i=0; i<$scope.refundReportDetails.length; i++) {
	    				        $scope.data.push("Item "+i);
	    				    }					
	    				}
	    			}else{
	    				if(data.status === '0'){					
	    					$scope.data = [];
	    					$scope.viewRefundReportPagination = false;
	    					$scope.refundReportDetails = [];
	    					setTimeout(function(){
	    						 if(data.nextPage != undefined){
	    							 $window.location.href = data.nextPage;
	    						 }
	    					 },1000);
	    				}
	    			}	
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};
	    	
	    	
	    	$scope.addOperator = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('addOperator',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});      
	    	} 
	    	
	    	$scope.assignPackage = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('assignPackage',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			 setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000)
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	
	    	}
	    	 $scope.myassignedPackage =function(){
		          	$scope.loader = true;
		          	$http.post('assignedPackage').success(function(data){
		          		     $scope.loader = false;
		          			 sshowDiv('sdiv51');
		          			 $scope.Assignedpackdetails = data.report;
		          	}).error(function(data) {
		                  $scope.loader = false;
		                  $scope.showAlert("danger", "Technical Error. Please try after sometime");
		              });
		          	
		          }
	    	
	    	$scope.assignEditPackage = function(details){
	    		console.log(details);
	    		//alert("entry");
	    		$scope.loader=true;
	    		$http.post('assignEditPackage',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			 setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000)
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.viewAssignPackage =function(){
	    		$scope.loader = true;
	          	$http.post('viewAssignPackage').success(function(data){
	          		$scope.loader = false;
	          		 sshowDiv('sdiv52');
	          		 $scope.ViewPackageDetail = data.report;
	          	}).error(function(data) {
	                $scope.loader = false;
	                $scope.showAlert("danger", "Technical Error. Please try after sometime");
	            });
	          	}
	    	
	    	$scope.editpk=function(details){
	    		console.log(details);
	    		$scope.loader = true;
	    		$scope.edpkg = details;
	    		$scope.loader=false;
	    		
	    	}
	    	
	    	 $scope.viewAssignedPackage =function(details){
	 	      	$scope.loader = true;
	 	      	$http.post('viewPackagewiseCommCharge',details).success(function(data){
	 	      		     $scope.loader = false;
	 	      		     showDiv('div53');
	 	      			 $scope.packdetails = data.packdetails;
	 	      	}).error(function(data) {
	 	              $scope.loader = false;
	 	              $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 	          });
	 	      	
	 	      }
	    	 

	    	 $scope.viewMyPackagechargeDetail =function(details){
		         	$scope.loader = true;
		         	console.log(details)
		         	$http.post('viewPackagewiseCommCharge',details).success(function(data){
		         		     $scope.loader = false;
		         		    console.log(data)
		         		     showDiv('div52');
		         		    $scope.servicetype = details.service_type;
		       			   $scope.MyPackageDetail = data.packdetails;
		         	}).error(function(data) {
		                 $scope.loader = false;
		                 $scope.showAlert("danger", "Technical Error. Please try after sometime");
		             });
		         	
		         }

$scope.DeleteMyPackageDetail =function(details){
    	$scope.loader = true;
    	$http.post('DeleteMyPackageDetail',details).success(function(data){
    		     $scope.loader = false;
    			 if(data.status == '1'){
    				$scope.showAlert("success", data.message); 
    				
    			 }
    	}).error(function(data) {
            $scope.loader = false;
            $scope.showAlert("danger", "Technical Error. Please try after sometime");
        });
    	
    }

$scope.packageCreate = function(details){
	console.log(details);
	$scope.loader=true;		
	$http.post('packageCreate',details).success(function(data) {
		$scope.loader=false;
		$scope.showAlert("success", data.message);
	}).error(function(data){
		$scope.loader=false;
		$scope.showAlert("danger", "Technical Error. Please try after sometime");
	});
};

$http.post('getPackagesDetails').success(function(data) {	
	if (data.status == '1') {
		$scope.packageDetails = data.packagelist;
		console.log(data);
	} else {
		
	}
});

$scope.viewMyPackage = function(){

		$scope.loader=true;
		$http.post('getPackagesDetails').success(function(data) {
			$scope.loader=false;
			if (data.status == '1') {
				sshowDiv('sdiv50');
 			$scope.packageDetail = data.packagelist;
 			console.log(data);
 		} else {
 			
 		}
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	}
 
$scope.updatemyPackage =function(details){
 	console.log(details);
 	$scope.loader = true;
 	$http.post('updatemyPackage',details).success(function(data){
 		     $scope.loader = false;
 		     if(data.status== '1'){
 		    	  $scope.showAlert("success", data.message);
              } else {
                  $scope.showAlert("danger", data.message);
              }
 	}).error(function(data) {
         $scope.loader = false;
         $scope.showAlert("danger", "Technical Error. Please try after sometime");
     });
 	
 }

	    	
	    	$scope.earningReportDetails = [];
	    	$scope.earningReport = {};
	    	$scope.earningReport.startDate = $scope.date;
	    	$scope.earningReport.endDate = $scope.date;
	    	
	    	$scope.getEarningReport = function(details){	
	    		$scope.loader=true;
	    		$scope.data = [];
	    		$http.post('getEarningReport',details).success(function(data){	
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				if(data.report === undefined || data.report.length <= 0){
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];
	    					$scope.data = [];
	    				}else{
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = true;
	    					$scope.earningReportDetails = data.report;
	    					$scope.currentPage = 0;				   
	    					for (var i=0; i<$scope.earningReportDetails.length; i++) {
	    				        $scope.data.push("Item "+i);
	    				    }					
	    				}
	    			}else{
	    				
	    				 $scope.viewRechargeReportsPagination = false;
	                     $scope.earningReportDetails = [];
	                     $scope.data = [];
	    			}
	    				/*if(data.status === '0'){					
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];	    					
	    				}
	    			}	
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");*/
	    		});
	    		
	    	};
	    	
	    	$scope.getIMPScharge = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('getIMPScharge',details).success(function(data) {
	    			$scope.loader=false;
	    			sshowDiv('sdiv90');
	    			$scope.viewIMPSchargeDetails = data.impscommission;
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};

	    	
	    	$scope.getMyCharge = function() {
	            $scope.loader = true;
	            $http.post('getMyCharge', $scope.userDetails).success(function(data) {
	                $scope.loader = false;
	                if (data.status == "1") {
	                    $scope.chargeList = data.chargeList;                
	                } else {
	                    $scope.showAlert("danger", data.message);
	                }
	                setTimeout(function() {
	                    if (data.nextPage != undefined) {
	                        $window.location.href = data.nextPage;
	                    }
	                }, 1000);
	            }).error(function(data) {
	                $scope.loader = false;
	                $scope.showAlert("danger", "Technical Error. Please try after sometime");
	            });
	        }
	    	
	    	$scope.viewWebEnquery = function(details){
	    		$scope.loader=true;
	    		$http.post('viewWebEnquery',details).success(function(data) {
	    			console.log(data);
	    			$scope.loader=false;
	    			$scope.viewEnqueryReport=data.report;
	    		});
	    	}
	    	
	    	$scope.fetchDomain = function(){
	    		$scope.loader=true;
	    		$http.post('fetchDomain').success(function(data) {
	    			console.log(data);
	    			$scope.loader=false;
	    			$scope.domainlist=data.domainlist;
	    		});
	    	}
	    	
	    	$scope.updateImpsReport = function(details){
    			console.log(details);
    			$scope.loader=true;			
    			var status=details.status;			
    			$http.post("updateImpsReport",details).success(function(data){
    				if(data.status === "1"){
    					$scope.showAlert("success", data.message);										
    					angular.forEach($scope.RechargeReports, function(value, key) {
    						
    						if (value.id === details.id) {
    							$scope.RechargeReports[key].validation = status;
    						}
    					});
    				} else {
    					$scope.showAlert("danger", data.message);
    					angular.forEach($scope.RechargeReports, function(value, key) {
    						if (value.id === details.id) {	
    							$scope.RechargeReports[key].validation = status;	
    		                }
    					});
    				}		
    				$scope.loader=false;
    			}).error(function(data){
    				$scope.loader=false;
    				$scope.showAlert("danger", "Technical Error. Please try after sometime");
    			});
    		};
    		
    		$scope.getmodalImpsRemark=  function(details,status){
    			console.log(details);
    			$scope.loader=true;	
    			details.status = status;
    			$scope.popremark = details;
    			$scope.loader=false;
    		}
    		
    		$scope.panReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanReport = function(details){			
				$scope.loader = true;
				$http.post('getpanReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						sshowDiv('sdiv19');
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panReports = [];
							$scope.data = [];
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panReports = data.report;
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			$scope.panCouponReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanCouponReport = function(details){			
				$scope.loader = true;
				$http.post('getpanCouponReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panCouponReports = [];
							$scope.data = [];
							sshowDiv('sdiv20');
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panCouponReports = data.report;
							sshowDiv('sdiv20');
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panCouponReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			
			 $scope.agentstatusmodal = function(details,status){
					$scope.loader=true;
					details.status = status;
						$scope.loader=false;
						$scope.popstatus=details;
					
				}
			 $scope.couponstatusmodal = function(details,status){
	    		 console.log(details);
					$scope.loader=true;
					details.status = status;
						$scope.loader=false;
						$scope.popcouponstatus=details;
					
				}
			 $scope.agentstatusupdate = function(details){
					$scope.loader=true;
					console.log(details);
					//details.status = status;
					$http.post('agentstatusupdate',details).success(function(data){
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("success", data.message);
						}else{
							$scope.showAlert("danger", data.message);
						}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				}
			 
			 $scope.couponstatusupdate = function(details){
					$scope.loader=true;
					console.log(details);
					//details.status = status;
					$http.post('couponstatusupdate',details).success(function(data){
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("success", data.message);
						}else{
							$scope.showAlert("danger", data.message);
						}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				}
	    		    	
	    	
			 $scope.getnsdlReport =function(details){
				 console.log(details);
	 		     	$scope.loader = true;
	 		     	$http.post('getnsdlReport',details).success(function(data){
	 		     		console.log(data);
	 		     		     $scope.loader = false;
	 		     			
	 		     			if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     			 
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.fetchnsdlpan =function(){
	 		     	$scope.loader = true;
	 		     	$http.post('fetchnsdlpan').success(function(data){
	 		     		     $scope.loader = false;
	 		     		     console.log(data);
	 		     			if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.getNSDLDetails = function(details,status){
				 console.log(details);
				 details.status=status;
				 $scope.nsdl=details;
				 //showDiv('div37');
				 
			 }
			 
			 $scope.updateNSDLReport = function(details){
				 console.log(details);
				 var ackslip = $scope.ackslip;
				 var fd = new FormData();
	 		     	fd.append('ackslip', ackslip);
	 		     	fd.append('NSDLReport',angular.toJson(details,true));	
				 $http.post('updateNSDLReport',fd,{
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }}).success(function(data){
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			 
			 $scope.updateNSDLReportFailed = function(details){
				 console.log(details);
				 $http.post('updateNSDLReportFailed',details).success(function(data){
	 					
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			 
			 $scope.updateNSDLHoldReport = function(details){
				 console.log(details);
				 $http.post('updateNSDLHoldReport',details).success(function(data){
	 					
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			/* 
			 $scope.getNSDLAttachmentDetails=function(details){
				 console.log(details);
				 $http.post('getNSDLAttachmentDetails',details).success(function(data){
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
			 }*/
			 
			 $scope.getNSDLAttachmentView = function(details){
				 $scope.viewnsdl=details;
				 console.log($scope.viewnsdl);
			 }
			
			 $scope.getNSDLAttachmentDetails = function(details){
					//console.log(details);
					$scope.loader=true;
				
					$http.post('getNSDLAttachmentDetails',details).success(function(data) {
						console.log(data);
						$scope.loader=false;
						if(data.status=="1"){
						$scope.documentdetail= data.documentlist[0];
						
						console.log($scope.documentdetail);
						if(data.documentlist[0].imagetype!=""){
							$scope.imagename=data.imagename;
							var base64String = $scope.Uint8ToBase64(data.documentlist[0].bytesImage);
							$scope.documentdetail.documentImage="data:"+data.imagetype+";base64," + base64String;
							var byteCharactersImage = atob(base64String);
							var byteNumbersImage = new Array(byteCharactersImage.length);
							for (var j = 0; j < byteCharactersImage.length; j++) {
								byteNumbersImage[j] = byteCharactersImage.charCodeAt(j);
							}
							var byteArrayImage = new Uint8Array(byteNumbersImage);
							  var fileImage = new Blob([ byteArrayImage ], {
				                    type : data.imagetype
				                });
				                var fileURLImage = URL.createObjectURL(fileImage);
				                $scope.documentdetail.fileurlImage = fileURLImage;
				                console.log($scope.documentdetail.fileurlImage);
						}
						if(data.documentlist[0].signaturetype!=""){
							$scope.signaturename=data.signaturename;
							var base64String2 = $scope.Uint8ToBase64(data.documentlist[0].bytesSignature);
							$scope.documentdetail.documentSignature="data:"+data.signaturetype+";base64," + base64String2;
							 var byteCharactersSignature = atob(base64String2);
								var byteNumbersSignature = new Array(byteCharactersSignature.length);
								for (var j = 0; j < byteCharactersSignature.length; j++) {
									byteNumbersSignature[j] = byteCharactersSignature.charCodeAt(j);
								}
								var byteArraySignature = new Uint8Array(byteNumbersSignature);
								  var fileSignature = new Blob([ byteArraySignature ], {
					                    type : data.signaturetype
					                });
					                var fileURLSignature = URL.createObjectURL(fileSignature);
					                $scope.documentdetail.fileurlSignature = fileURLSignature;
					                
						}
						if(data.documentlist[0].formfonttype!=""){
							$scope.Formfontname=data.Formfontname;
							var base64String3 = $scope.Uint8ToBase64(data.documentlist[0].bytesFormFont);
							$scope.documentdetail.documentFormFont="data:"+data.formfonttype+";base64," + base64String3;
							 var byteCharactersFormFont = atob(base64String3);
								var byteNumbersFormFont = new Array(byteCharactersFormFont.length);
								for (var j = 0; j < byteCharactersFormFont.length; j++) {
									byteNumbersFormFont[j] = byteCharactersFormFont.charCodeAt(j);
								}
								var byteArrayFormFont = new Uint8Array(byteNumbersFormFont);
								  var fileFormFont = new Blob([ byteArrayFormFont ], {
					                    type : data.formfonttype
					                });
					                var fileURLFormFont = URL.createObjectURL(fileFormFont);
					                $scope.documentdetail.fileurlFormFont = fileURLFormFont;
					              
						}
						if(data.documentlist[0].formbacktype!=""){
							$scope.Formbackname=data.Formbackname;
							var base64String4 = $scope.Uint8ToBase64(data.documentlist[0].bytesFormBack);
							$scope.documentdetail.documentFormBack="data:"+data.formbacktype+";base64," + base64String4;
							 var byteCharactersFormBack = atob(base64String4);
								var byteNumbersFormBack = new Array(byteCharactersFormBack.length);
								for (var j = 0; j < byteCharactersFormBack.length; j++) {
									byteNumbersFormBack[j] = byteCharactersFormBack.charCodeAt(j);
								}
								var byteArrayFormBack = new Uint8Array(byteNumbersFormBack);
								  var fileFormBack = new Blob([ byteArrayFormBack ], {
					                    type : data.formbacktype
					                });
					                var fileURLFormBack = URL.createObjectURL(fileFormBack);
					                $scope.documentdetail.fileurlFormBack = fileURLFormBack;
					             
						}
						if(data.documentlist[0].idprooftype!=""){
							$scope.Idproofname=data.Idproofname;
							var base64String5 = $scope.Uint8ToBase64(data.documentlist[0].bytesProofOfIdentity);
							$scope.documentdetail.documentProofOfIdentity="data:"+data.idprooftype+";base64," + base64String5;
							 var byteCharactersProofOfIdentity = atob(base64String5);
								var byteNumbersProofOfIdentity = new Array(byteCharactersProofOfIdentity.length);
								for (var j = 0; j < byteCharactersProofOfIdentity.length; j++) {
									byteNumbersProofOfIdentity[j] = byteCharactersProofOfIdentity.charCodeAt(j);
								}
								var byteArrayProofOfIdentity = new Uint8Array(byteNumbersProofOfIdentity);
								  var fileProofOfIdentity = new Blob([ byteArrayProofOfIdentity ], {
					                    type : data.idprooftype
					                });
					                var fileURLProofOfIdentity = URL.createObjectURL(fileProofOfIdentity);
					                $scope.documentdetail.fileurlProofOfIdentity = fileURLProofOfIdentity;
				
						}
					}else{
						$scope.showAlert("danger", data.message);
					}
						//sshowDiv('sdiv500');
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				};
				
				 $scope.getNSDLASKDetails = function(details){
					 console.log(details);
					 $http.post("getNSDLASKDetails",details).success(function(data){
						 console.log(data);
						 $scope.filename=data.acknm;
						 var base64String = $scope.Uint8ToBase64(data.list.bytesackno);
						// $scope.documentdetail.documentImage="data:"+data.imagetype+";base64," + base64String;
							var byteCharactersImage = atob(base64String);
							var byteNumbersImage = new Array(byteCharactersImage.length);
							for (var j = 0; j < byteCharactersImage.length; j++) {
								byteNumbersImage[j] = byteCharactersImage.charCodeAt(j);
							}
							var byteArrayImage = new Uint8Array(byteNumbersImage);
							  var fileImage = new Blob([ byteArrayImage ], {
				                    type : data.list.acktype
				                });
				                var fileURLImage = URL.createObjectURL(fileImage);
				                $scope.fileurlImage = fileURLImage;
				              
					 }).error(function(data) {
		 					$scope.loader=false;
		 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
		 				});
					 $scope.nsdl=details;
					 //showDiv('div37');
					 
				 }
				 
				 $scope.searchackno=function(details){
					 console.log(details);
					 $http.post('searchackno',details).success(function(data){
			     		     $scope.loader = false;
			     		     console.log(data);
			     			 if(data.status == '1'){
			     				$scope.nsdlReport = data.report;
			     				showDiv('div50');
			     				
			     			 }else{
	 	    					$scope.showAlert("danger", data.message);
	 	    				}
			     	}).error(function(data) {
			             $scope.loader = false;
			             $scope.showAlert("danger", "Technical Error. Please try after sometime");
			         });
				 }
				 
				 $scope.fetchnonpkguser=function(){
					
					 $http.post('fetchnonpkguser').success(function(data){
			     		     $scope.loader = false;
			     		     console.log(data);
			     			 if(data.status == '1'){
			     				$scope.viewUserDetails=data.listu;
			     				$scope.data = [];
								$scope.viewUserPagination = true;
								
								$scope.currentPage = 0;				   
								for (var i=0; i<$scope.viewUserDetails.length; i++) {
							        $scope.data.push("Item "+i);
							    }	
			     			 }else{
	 	    					$scope.showAlert("danger", data.message);
	 	    				}
			     	}).error(function(data) {
			             $scope.loader = false;
			             $scope.showAlert("danger", "Technical Error. Please try after sometime");
			         });
				 }
				 
				 
				 $scope.printdmrReport=function(details){
			       	  console.log(details);
			       	  var type;
			       	//  $scope.invoiceyesbankaeps=details;
			       	
			       	  var mywindow = window.open('' );
			     	    mywindow.document.write("<html><head><title>AEPS Invoice</title>");
			     	    mywindow.document.write("<link rel='stylesheet' href='assets/css/bootstrap.css' type='text/css'>");
			     	    mywindow.document.write("<link rel='stylesheet' href='assets/css/style.css' type='text/css'  />");
			     	    mywindow.document.write("</head><body style='background: #fff'>");
			     	    mywindow.document.write("<div class='invoice'><div class='row'>" +
			     	    		"<div class='col-lg-4 col-md-4 col-sm-4 col-xs-4'>" +
			     	    		"<img width = '150px' src='data:image/jpg;base64, "+$scope.logoimage+"' class='img-rounded logo'>" +
			     	    		"<address><strong>"+$scope.reseller.poweredBy +"</strong><br>"+$scope.reseller.supportEmail +"<br>"+$scope.reseller.supportNumber +"<br></address>" +
			     	    		"</div><div class='col-lg-8 col-md-8 col-sm-8 col-xs-8 well'>" +
			     	    		"<table class='invoice-head'>" +
			     	    		"<tbody>" +
			     	    		"<tr>" +
			     	    		"</tr>" +
			     	    		"<tr>" +
			     	    		"<td class='pull-right'><h5>username:</h5></td>" +
			     	    		"<td>"+details.uname +"</td>" +
			     	    		"</tr>" +
			     	    		"<tr>" +
			     	    		"<td class='pull-right'><h5>bene_name.:</h5></td>" +
			     	    		"<td>"+details.bene_name +"</td>" +
			     	    		"</tr>" +
			     	    		"<tr>" +
			     	    		"<td class='pull-right'><h5>bene_mobile.:</h5></td>" +
			     	    		"<td>"+details.bene_mobile +"</td>" +
			     	    		"</tr>" +
			     	    		"<tr>" +
			     	    		"<td class='pull-right'><h5>ReciptId.:</h5></td>" +
			     	    		"<td>"+details.recieptId+"</td>" +
			     	    		"</tr>" +
			     	    		"<tr>"+
			     	    		"<td class='pull-right'><h5>Status.:</h5></td>" +
			     	    		"<td>"+details.status+"</td>" +
			     	    		"</tr>" +
			     	    		"</tbody>" +
			     	    		"</table>" +
			     	    		"</div></div>" +
			     	    		"<div class='row'><div class='col-lg-12 col-md-12 col-sm-12 col-xs-12'>" +
			     	    		"<h3>Your Invoice</h3>" +
			     	    		"</div></div>" +
			     	    		"<div class='row'><div class='col-lg-12 col-md-12 col-sm-12 col-xs-12 invoice-body'>" +
			     	    		"<table class='table table-bordered'>" +
			     	    		"<thead>" +
			     	    		"<tr>" +
			     	    		"<th>Service Provider</th>" +
			     	    		"<th>TransactionId</th>" +
			     	    		"<th>Date</th>" +
			     	    		"<th>AccountNo</th>" +
			     	    		"<th>Amount</th>" +
			     	    		"<th>Charge</th>" +
			     	    		"</tr>" +
			     	    		"</thead>" +
			     	    		"<tbody>" +
			     	    		"<tr>" +
			     	    		"<td>DMR</td>" +
			     	    		"<td>"+details.banktransactionId +"</td>" +
			     	    		"<td>"+details.date + details.time+"</td>" +
			     	    		"<td>"+details.account_no +"</td>" +
			     	    		"<td>"+details.amount +"</td>" +
			     	    		"<td>"+details.charge +"</td>" +
			     	    		"</tr>" +
			     	    		"</tbody>" +
			     	    		"</table>" +
			     	    		"</div></div>" +
			     	    		"<div class='row footerHidden'>" +
			     	    		"<div class='col-lg-12 col-md-12 col-sm-12 col-xs-12 well invoice-thank'>" +
			     	    		"<center><button class = 'btn btn-success' onclick= 'window.print();'>Print</button></center>" +
			     	    		"</div></div></div>");
			     	    mywindow.document.write('</body></html>');
			     	    return true;
			       	  sshowDiv('sdiv162');	
			         }
					 
}]);



//==================
/*.controller('AdminListController',["$scope","$modal", function($scope,$modal ) {
    //code
	$scope.open = function ( ) {
	      alertModalInstance = $modal.open({
	        animation: $scope.animationsEnabled,
	        templateUrl: 'popup.html',
	        scope: $scope
	      });

    
};

}]);*/