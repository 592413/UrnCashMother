"use strict";

var app = angular.module('app', ['ngSanitize', 'ngCookies'])
.config(['$compileProvider', function ($compileProvider) {
	 $compileProvider.aHrefSanitizationWhitelist(/^\s*(http?|ftp|mailto|tel|file|blob|chrome-extension):/);
	  $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|tel|file|blob|chrome-extension):/);
}])
    .directive("alertMessage", function($compile) {
        return {
            restrict: "E",
            scope: {
                alert: "="
            },
            link: function(scope, element) {
                scope.$watch('alert', function() {
                    updateAlert();
                });
                scope.close = function() {
                    scope.alert = null;
                }

                function updateAlert() {
                    var html = "";
                    if (scope.alert) {
                        var icon = null;
                        switch (scope.alert.type) {
                            case 'success':
                                {
                                    icon = 'fa fa-check-circle';
                                }
                                break;
                            case 'warning':
                                {
                                    icon = 'fa fa-exclamation';
                                }
                                break;
                            case 'info':
                                {
                                    icon = 'fa fa-info';
                                }
                                break;
                            case 'danger':
                                {
                                    icon = 'fa fa-times';
                                }
                                break;
                        }
                        html = "<div class='pre-div' style='background-color: rgba(255, 255, 255, 0.6);'><div class='col-md-12 floatMessage'><div class='alert alert-" +
                            scope.alert.type +
                            "' role='alert'>";
                        if (scope.alert.closable) {
                            html += "<button type='button' class='close' data-dismiss='alert' ng-click='close()' aria-label='Close'><span aria-hidden='true'>&times;</span></button>";
                        }
                        if (icon) {
                            html += "<span><b>Message</b><hr></span>";
                            html += "<span style='padding-right: 5px;' i class='" + icon + "' aria-hidden='true'></span>";
                        }
                        html += scope.alert.text;
                        html += "</div></div></div>";
                    }
                    var newElement = angular.element(html);
                    var compiledElement = $compile(newElement)(scope);
                    element.html(compiledElement);
                    if (scope.alert && scope.alert.delay > 0) {
                        setTimeout(function() {
                            scope.alert = null;
                            scope.$apply();
                        }, scope.alert.delay * 1000);
                    }
                }
            }
        }
    })
    .directive('fileModel', ['$parse', function ($parse) {
    	return {
    		restrict: 'A',
    		link: function(scope, element, attrs) {
    			var model = $parse(attrs.fileModel);
    			var modelSetter = model.assign;
    			element.bind('change', function(){
    				scope.$apply(function(){
    					modelSetter(scope, element[0].files[0]);
    				});
    			});
    		}
    	};
    }])
    .directive('compileTemplate', function($compile, $parse) {
        return {
            link: function(scope, element, attr) {
                var parsed = $parse(attr.ngBindHtml);

                function getStringValue() {
                    return (parsed(scope) || '').toString();
                }

                // Recompile if the template changes
                scope.$watch(getStringValue, function() {
                    $compile(element, null, -9999)(scope); // The -9999 makes it skip directives so that we do not recompile ourselves
                });
            }
        }
    })
    .filter('startFrom', function() {
        return function(input, start) {
            if (!input || !input.length) {
                return;
            }
            start = +start; //parse to int
            return input.slice(start);
        }
    })
    .filter('sumOfValue', function() {
        return function(data, key) {
            if (angular.isUndefined(data) || angular.isUndefined(key))
                return 0;
            var sum = 0;

            angular.forEach(data, function(v, k) {
                sum = sum + parseInt(v[key]);
            });
            return sum;
        }
    })
    .filter('totalSuccess', function() {
        var status = 'status';
        return function(data, key) {
            if (angular.isUndefined(data) || angular.isUndefined(key))
                return 0;
            var sum = 0;
   
            angular.forEach(data, function(v, k) {
            	
          //   if (v[status] == 'SUCCESS') {
                    sum = sum + parseInt(v[key]);
                    
            //   }
            });
         //   alert(sum);
            return sum;
        }
    })
    .filter('totalCommission', function() {
	var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		//alert(data);
		angular.forEach(data, function(v, k) {
			//if(v[status] == 'SUCCESS') {
				sum = sum + v[key];
				//alert(sum);
			//}
		});
		return sum;
	}
})
    
    .controller('appController', ["$scope", "$http", "$window", "$parse", "$sce", "$cookieStore", "$filter", function($scope, $http, $window, $parse, $sce, $cookieStore, $filter) {

        $scope.currentPage = 0;
        $scope.pageSize = 10;
        $scope.data = [];
        $scope.numberOfPages = function() {
            return Math.ceil($scope.data.length / $scope.pageSize);
        }
        $scope.showAlert = function(alertType, alertText) {
            //alert(alertText + " "+alertType );
            $scope.alertMessage = {
                type: alertType,
                text: alertText,
                closable: true,
                delay: 2
            };
        };
        $scope.state = ['Andaman and Nicobar', 'Andhra Pradesh', 'Arunachal Pradesh', 'Assam', 'Bihar', 'Chandigarh',
            'Chhattisgarh', 'Daman and Diu', 'Delhi', 'Goa', 'Gujarat', 'Haryana', 'Himachal Pradesh', 'Jammu And Kashmir', 'Jharkhand',
            'Karnataka', 'Kerala', 'Lakshadweep', 'Madhya Pradesh', 'Maharashtra', 'Manipur', 'Meghalaya', 'Mizoram', 'Nagaland',
            'Orissa', 'Pondicherry', 'Punjab', 'Rajasthan', 'Sikkim', 'Tamilnadu', 'Tripura', 'Uttarakhand', 'Uttar Pradesh', 'West Bengal'
        ];
        $scope.userType = [{
            type: 4,
            role: "DISTRIBUTOR"
        }, {
            type: 5,
            role: "RETAILER"
        }];
        $scope.addUserDetails = {
    		name:"",
    		firmName:"",
            email: "",
            mobile: "",
            address: "",
            pinCode: "",
            state: "",
            city: ""
        }
        $scope.userDetails = {};
        $scope.changePass = {};
        $scope.packageDetails = {};
    	$scope.package = {};
        $scope.date = new Date();
        $scope.date = $filter('date')($scope.date, 'yyyy-MM-dd');
        $http.post('getDashBoardDetails').success(function(data) {
            console.log(data);
           $scope.loader = false;
            if (data.status == '1') {
                $scope.userDetails = data.userDetails;
                $scope.News = data.news;
                $scope.totalData = data.totalData;
               // $scope.dasboardReport = data.rechargeReport;
               // $scope.operator = data.operator;
                if (data.notification != undefined || data.notification != null) {
                    $scope.notification = data.notification;
                }
                if ($scope.userDetails.roleId == 3) {
                    document.title = "SUPER DISTRIBUTOR";
                } else if ($scope.userDetails.roleId == 4) {
                    document.title = "DISTRIBUTOR";
                } else if ($scope.userDetails.roleId == 5) {
                    document.title = "RETAILER";
                } else if ($scope.userDetails.roleId == 100) {
                    document.title = "API PANEL";
                }

                $scope.reseller = data.reseller;
    			
    			var base64String = $scope.Uint8ToBase64($scope.reseller.image);
    			$scope.logoimage = base64String;
    			document.getElementById("logo").src = "data:image/png;base64," + base64String;
    			
            } else {
                $scope.showAlert("danger", "Invalid Login details!");
            }            
        });
        $scope.Uint8ToBase64 = function(ab){
    		var dView = new Uint8Array(ab);   //Get a byte view    
    	    var arr = Array.prototype.slice.call(dView); //Create a normal array   
    	    var arr1 = arr.map(function(item){        
    	      return String.fromCharCode(item);    //Convert
    	    });

    	    return window.btoa(arr1.join('')); 
    	}

        $scope.addRBLBank = function(details){

        	console.log(details);
    		$scope.loader=true;
    		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your mobile!");
    			return false;
    		}
    		if(details.email === undefined || details.email === null || details.email === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter email!");
    			return false;
    		}
    		if(details.name === undefined || details.name === null || details.name === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter name!");
    			return false;
    		}
    		if(details.branch === undefined || details.branch === null || details.branch === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter branch name!");
    			return false;
    		}
    		if(details.account === undefined || details.account === null || details.account === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter account no!");
    			return false;
    		}
    		if(details.ifsc === undefined || details.ifsc === null || details.ifsc === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter ifsc code!");
    			return false;
    		}
    		
    		$http.post('addRBLBank',details).success(function(data) {
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	
        	
        }
        $scope.p2aimpsReports = [];
    	$scope.p2aReport = {};
    	
    	$scope.p2aReport.startDate = $scope.date;
    	$scope.p2aReport.endDate = $scope.date;
    	$scope.getMicroATMReport = function(details){			
    		$scope.loader = true;	
    		$http.post('getMicroATMReport',details).success(function(data){
    	console.log(data);
    	$scope.loader = false;
    	if(data.status == "1"){				
    	if(data.microReport === undefined || data.microReport.length <= 0){
    		$scope.viewmicroatmReportsPagination = false;
    		$scope.microatmReports = [];
    		$scope.data = [];
    	}else{
    		$scope.data = [];
    		$scope.viewmicroatmReportsPagination = true;
    		$scope.microatmReports= data.microReport;
    		$scope.currentPage = 0;				   
    		for (var i=0; i<$scope.microatmReports.length; i++) {
    	        $scope.data.push("Item "+i);
    				    }					
    				}
    			}else{
    				$scope.viewmicroatmReportsPagination = false;
    				$scope.microatmReports = [];
    				$scope.data = [];
    			}
    		});
    	}
    	 $scope.payWallet = function(details){
     		$scope.loader=true;
     		$http.post('payUWallet',details).success(function(data) {
     			console.log(data);
     			$scope.loader=false;
     			setTimeout(function(){
     				 if(data.nextPage != undefined){
     					 $window.location.href = data.nextPage;
     				 }
     			 },1000);
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     	}
        $scope.cardwalletrequest = function(details){

        	console.log(details);
    		$scope.loader=true;
    		if(details.carddetail === undefined || details.carddetail === null || details.carddetail === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your carddetail!");
    			return false;
    		}
    		if(details.amount === undefined || details.amount === null || details.amount === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter amount!");
    			return false;
    		}
    		$http.post('cardwalletrequest',details).success(function(data) {
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	
    		
        }
        
   	 $scope.p2aregistration = function(details){
 		console.log(details);
 		var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
 		var format2 = /[0123456789]/;
 		var format2 = /[0123456789]/;
			var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
 		if(!format2.test(details.RemMobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			
			if(format3.test(details.RemMobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "chracters present in Mobile Number");
				return false;
			
			}
			if(format.test(details.RemMobile)){
				$scope.loader=false;
				$scope.showAlert("danger", "Special chracters present in Mobile Number");
				return false;
			
			}
			if(details.RemMobile.length>10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number greater than 10 digits");
				return false;
			}
			if(details.RemMobile.length<10){
				$scope.loader=false;
				$scope.showAlert("danger", "Mobile number smaller than 10 digits");
				return false;
			}
	 		
 		$http.post('p2aregistration',details).success(function(data){
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == '1'){
 				$scope.showAlert("danger", data.message);
 			}else{
 				$scope.showAlert("danger", data.message);
 			}
 			
 		setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);
 			
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 		
 }
	 
        
        $scope.statuschangesbi=function(details){
        console.log(details);	
        $scope.sbidata=details;
        }
        
        $scope.statuschangecardwallet=function(details){
            console.log(details);	
            $scope.sbicardwallet=details;
            }
        $scope.printcardwallet=function(details){
        var content="Card Number (16)|Card Ref Number (12)||Amount in Rupees|Description|Mobile Number of Card Holder\n";	
        angular.forEach(details, function(value, key) {
        	console.log(value.cardnumber);
        	content=content+value.cardnumber+'|'+value.cardreferencenumber+'|'+value.actualwallet+'|'+'CARD LOAD'+'|'+value.applicantmobileno; 
        	content=content+'\n';
        	var blob = new Blob([ content ], { type : 'text/plain' });
        	$scope.sbiurl = (window.URL || window.webkitURL).createObjectURL( blob );
        	
        });
        console.log(content);
        }
        $scope.statuschangeforcard =function(details,newstatus){
    		console.log(details);
    	    $scope.loader=true;
    	    details.status = newstatus;
    		$http.post('statuschangeforcard',details).success(function(data) {
     			console.log(data);
     			$scope.loader=false;
     			if(data.status == "1"){
     				$scope.showAlert("success", data.message);
     			} else{
     				$scope.showAlert("danger", data.message);
     			}
     			angular.forEach($scope.WALLETReport, function(value, key) {
                    if (value.id === details.id) {
                    	$scope.WALLETReport[key].status=details.status;
                    	$scope.WALLETReport[key].remarks=details.remarks;
                    }
                });
     			
     			$('#walat').modal('hide'); 
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     	
    			
    	}
        
        $scope.statuschange =function(details,newstatus){
    		console.log(details);
    	    $scope.loader=true;
    	    details.status = newstatus;
    		$http.post('statuschange',details).success(function(data) {
     			console.log(data);
     			$scope.loader=false;
     			if(data.status == "1"){
     				$scope.showAlert("success", data.message);
     				
     			} else{
     				$scope.showAlert("danger", data.message);
     			}
     			angular.forEach($scope.appsReports, function(value,key) {
                    if (value.id === details.id) {
                    	$scope.appsReports[key].status=details.status;
                    	$scope.appsReports[key].remarks=details.remarks;
                    }
                });
     			$('#exampleModal').modal('hide'); 
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     	
    			
    	}
        
        $scope.mycardlist =function(){
    		
    	    $scope.loader=true;
    		$http.post('mycardlist').success(function(data) {
     			console.log(data);
     			$scope.loader=false;
     			if(data.status == "1"){
     				$scope.mycardlist=data.list;
     				
     				
     				
     			} else{
     				$scope.showAlert("danger", data.message);
     			}
     			setTimeout(function(){
     				 if(data.nextPage != undefined){
     					 $window.location.href = data.nextPage;
     				 }
     			 },1000);
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     	
    			
    	}
        $scope.applicationform = function(details){

        	console.log(details);
        	console.log(details.yearofmarriage);
    		$scope.loader=true;
    		var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
    		var format2 = /[0123456789]/;
    		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
    		if(details.firstname === undefined || details.firstname === null || details.firstname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your firstname!");
    			return false;
    		}
    		/*if(details.middlename === undefined || details.middlename === null || details.middlename === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter middlename!");
    			return false;
    		}*/
    		if(details.lastname === undefined || details.lastname === null || details.lastname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter lastname!");
    			return false;
    		}
    		if(details.address1 === undefined || details.address1=== null || details.address1 === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter address1!");
    			return false;
    		}
    		if(details.address2 === undefined || details.address2 === null || details.address2 === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter address2!");
    			return false;
    		}
    		if(details.city === undefined || details.city === null || details.city === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter city!");
    			return false;
    		}
    		if(details.state === undefined || details.state === null || details.state === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter state!");
    			return false;
    		}
    		if(details.pin === undefined || details.pin === null || details.pin === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter pin!");
    			return false;
    		}
    		if(details.applicantmobileno === undefined || details.applicantmobileno === null || details.applicantmobileno === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter applicant mobileno!");
    			return false;
    		}
    		if(details.applicantemail === undefined || details.applicantemail === null || details.applicantemail === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter applicant email!");
    			return false;
    		}
    		if(details.mothersname === undefined || details.mothersname === null || details.mothersname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter mothersname!");
    			return false;
    		}
    		if(details.mothersdateofbirth === undefined || details.mothersdateofbirth === null || details.mothersdateofbirth === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter mothers dateofbirth!");
    			return false;
    		}
    		
    		if(details.yearofpassingssc === undefined || details.yearofpassingssc === null || details.yearofpassingssc === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter year of passing ssc!");
    			return false;
    		}
    		if(details.referencenumber === undefined || details.referencenumber === null || details.referencenumber === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter referencenumber!");
    			return false;
    		}
    		if(details.cardreferencenumber === undefined || details.cardreferencenumber === null || details.cardreferencenumber === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter cardreferencenumber!");
    			return false;
    		}
    		if(details.cardnumber === undefined || details.cardnumber === null || details.cardnumber === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter cardnumber!");
    			return false;
    		}
    		if(details.cardvalidtill === undefined || details.cardvalidtill === null || details.cardvalidtill === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter cardvalidtill!");
    			return false;
    		}
    		if(details.officialname === undefined || details.officialname === null || details.officialname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter officialname!");
    			return false;
    		}
    		
    		if(!format2.test(details.applicantmobileno)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "chracters present in Mobile Number");
    			return false;
    		
    		}
    		if(format3.test(details.applicantmobileno)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "chracters present in Mobile Number");
    			return false;
    		
    		}
    		if(format.test(details.applicantmobileno)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Special chracters present in Mobile Number");
    			return false;
    		
    		}
    		if(details.applicantmobileno.length<10 || details.applicantmobileno.length>10){
     			$scope.loader=false;
      			$scope.showAlert("danger","Mobile Number should be 10 digit");
      			return false;
     		}
    		
    		if(details.cardnumber.length<16 || details.cardnumber.length>16){
    			$scope.loader=false;
    			$scope.showAlert("danger", "cardnumber should be in 16 digit");
    			return false;
    		
    		}
    		
    		if(details.cardreferencenumber.length<12 || details.cardreferencenumber.length>12){
    			$scope.loader=false;
    			$scope.showAlert("danger", "cardreferencenumber should be in 12 digit");
    			return false;
    		
    		}
    		
    		if(details.yearofmarriage===undefined || details.yearofmarriage===null || details.yearofmarriage==="" ){
    			
    		}else{
             console.log(details.yearofmarriage);
    			if(format3.test(details.yearofmarriage)){
        			$scope.loader=false;
        			$scope.showAlert("danger", "chracters present in yearofmarriage");
        			return false;
        		
        		}
    			
    			if(format.test(details.yearofmarriage)){
        			$scope.loader=false;
        			$scope.showAlert("danger", "Special chracters present in yearofmarriage");
        			return false;
        		
        		}
        		if(details.yearofmarriage.length!=4 ){
         			$scope.loader=false;
          			$scope.showAlert("danger","YEAR should be 4 digit");
          			return false;
         		}
    			
    		}
    		
    		
    		
    		if(!format2.test(details.yearofpassingssc)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "chracters present in yearofpassingssc");
    			return false;
    		
    		}
    		if(format3.test(details.yearofpassingssc)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "chracters present in yearofpassingssc");
    			return false;
    		
    		}
    		if(format.test(details.yearofpassingssc)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Special chracters present in yearofpassingssc");
    			return false;
    		
    		}
    		if(details.yearofpassingssc.length!=4 ){
     			$scope.loader=false;
      			$scope.showAlert("danger","YEAR should be 4 digit");
      			return false;
     		}
    		
    		
    		if(!format2.test(details.cardnumber)){
    			$scope.loader=false;
    			$scope.showAlert("danger", "chracters present in cardnumber");
    			return false;
    		
    		}
    		
    		 var panfile=$scope.panfile;
    		 var photofile=$scope.photofile;
    		 var aadharfile=$scope.aadharfile;
    		 var voterfile=$scope.voterfile;
    		 var fd=new FormData();
    		 fd.append("panfile",panfile);
    		 fd.append("photofile",photofile);
    		 fd.append("aadharfile",aadharfile);
    		 fd.append("voterfile",voterfile);
    		 fd.append("applicationdetails",angular.toJson(details,true));
    		
    		 $http.post("applicationform", fd, {
 				transformRequest : angular.identity,
 				headers : {'Content-Type' : undefined }
 			}).success(function(data) {
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	
        	
        }
        /*$scope.applicationform = function(details){

        	console.log(details);
        	console.log(details.yearofmarriage);
    		$scope.loader=true;
    		var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
    		var format2 = /[0123456789]/;
    		var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
    		if(details.firstname === undefined || details.firstname === null || details.firstname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your firstname!");
    			return false;
    		}
    		if(details.middlename === undefined || details.middlename === null || details.middlename === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter middlename!");
    			return false;
    		}
    		if(details.lastname === undefined || details.lastname === null || details.lastname === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter lastname!");
    			return false;
    		}
    		if(details.address1 === undefined || details.address1=== null || details.address1 === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter address1!");
    			return false;
    		}
    		if(details.address2 === undefined || details.address2 === null || details.address2 === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter address2!");
    			return false;
    		}
    		if(details.city === undefined || details.city === null || details.city === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter city!");
    			return false;
    		}*/
        
        
        $scope.p2amoneytransfer = function(details){
     		console.log(details);
     		$scope.loader=true;	
     		if(details.amount === undefined || details.amount === null ||details.amount === ""){
 				$scope.loader=false;
 				$scope.showAlert("danger", "Enter Amount!");
 				return false;
 			}
     		$http.post('p2amoneytransfer',details).success(function(data) {
     			$scope.loader=false;
     			$scope.showAlert("success", data.message);
     			setTimeout(function(){
   				 if(data.nextPage != undefined){
   					 $window.location.href = data.nextPage;
   				 }
   			 },1000)
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     		
     	};
    	
        
        $scope.p2aimpsReports = [];
        $scope.impsReport = {};
        /*$scope.p2aReport.startDate = $scope.date;
        $scope.p2aReport.endDate = $scope.date;*/
        $scope.getp2aReport = function(details){			
        	$scope.loader = true;	
        	$http.post('getp2aReport',details).success(function(data){
        console.log(data);
        $scope.loader = false;
        if(data.status == "1"){				
        if(data.report === undefined || data.report.length <= 0){
        	$scope.viewP2AReportsPagination = false;
        	$scope.p2aimpsReports = [];
        	$scope.data = [];
        }else{
        	$scope.data = [];
        	$scope.viewP2AReportsPagination = true;
        	$scope.p2aimpsReports = data.report;
        	$scope.currentPage = 0;				   
        	for (var i=0; i<$scope.p2aimpsReports.length; i++) {
                $scope.data.push("Item "+i);
        			    }					
        			}
        		}else{
        			$scope.viewP2AReportsPagination = false;
        			$scope.p2aimpsReports = [];
        			$scope.data = [];
        		}
        	});
        }
        
        
        $scope.getAPPReport = function(details){			
        	$scope.loader = true;	
        	$http.post('getAPPReport',details).success(function(data){
        console.log(data);
        $scope.loader = false;
        if(data.status == "1"){				
        if(data.report === undefined || data.report.length <= 0){
        	$scope.viewP2AReportsPagination = false;
        	$scope.appsReports = [];
        	$scope.data = [];
        }else{
        	$scope.data = [];
        	$scope.viewP2AReportsPagination = true;
        	$scope.appsReports = data.report;
        	$scope.currentPage = 0;				   
        	for (var i=0; i<$scope.appsReports.length; i++) {
                $scope.data.push("Item "+i);
        			    }					
        			}
        		}else{
        			$scope.viewP2AReportsPagination = false;
        			$scope.p2aimpsReports = [];
        			$scope.data = [];
        		}
        	});
        }
       /* $scope.getWALLETReport = function(details){			
        	$scope.loader = true;	
        	$http.post('getWALLETReport',details).success(function(data){
        console.log(data);
        $scope.loader = false;
        if(data.status == "1"){				
        if(data.report === undefined || data.report.length <= 0){
        	$scope.viewP2AReportsPagination = false;
        	$scope.WALLETReport = [];
        	$scope.data = [];
        }else{
        	$scope.data = [];
        	$scope.viewP2AReportsPagination = true;
        	$scope.WALLETReports = data.report;
        	$scope.currentPage = 0;				   
        	for (var i=0; i<$scope.WALLETReports.length; i++) {
                $scope.data.push("Item "+i);
        			    }					
        			}
        		}else{
        			$scope.viewP2AReportsPagination = false;
        			$scope.p2aimpsReports = [];
        			$scope.data = [];
        		}
        	});
        }*/
        
        $scope.printForm=function(details){
        	$scope.appformdata=details;
        	$("#div903").show();
        	$("#div900").hide();
        	
        }
        $scope.getRBLAEPSReport = function(details){
    		$scope.loader=true;
    		$http.post('getRBLAEPSReport',details).success(function(data) {
    			console.log(data);
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.rblReport = data.rblReport;
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			/*setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);*/
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
        
    	$scope.getRBLSETTLEMENTReport = function(details){
    		$scope.loader=true;
    		$http.post('getRBLSETTLEMENTReport',details).success(function(data) {
    			console.log(data);
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.settlementreport = data.settlementreport;
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			/*setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);*/
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
        
        
        $scope.settlement= {};
        $scope.getSettlementBalance = function(){
    		$scope.loader=true;
    		$http.post('getSettlementBalance').success(function(data) {
    			$scope.loader=false;
    			console.log(data);
    			if(data.status=='1'){
    		    $scope.settlement.totalamount=data.settlementbalance; 
    		    $scope.settlement.eligiblewallet=data.eligiblewallet; 
    		    $scope.settlement.eligiblebank=data.eligiblebank;
    		    sshowDiv('sdiv150');
    			}else{
    				
    			}
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
        
        $scope.getYesBankAEPSReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getYesBankAEPSReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.rblReport = data.rblReport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
        
        $scope.settlerequest = function(details){
        	console.log(details);
    		$scope.loader=true;
    		if(details.amount === undefined || details.amount === null || details.amount === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your amount!");
    			return false;
    		}else{
    			if(details.amount<=0){
    				$scope.loader=false;	
        			$scope.showAlert("info", "Amount can't be negative or zero");
        			return false;
    			}	
    			if(details.type=='Settle to Wallet'){
    			if(details.amount>details.eligiblewallet){
    				$scope.loader=false;	
        			$scope.showAlert("info", "Settlement amount is greater than eligible amount!");
        			return false;
    			}	
    			
    		}else if(details.type=='Settle to Bank'){

    			if(details.amount>details.eligiblebank){
    				$scope.loader=false;	
        			$scope.showAlert("info", "Settlement amount is greater than eligible amount!");
        			return false;
    			}
    			
    			if(details.amount<5000){
    				$scope.loader=false;	
        			$scope.showAlert("info", "Amount For Settle to Bank should be minimum 5000");
        			return false;
    			}
    		}
    		}
    		if(details.type === undefined || details.type === null || details.type === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter Settlement Type!");
    			return false;
    		}
    		$http.post('settlerequest',details).success(function(data) {
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
        
        
        $scope.fetchOperator = function(){
        	//alert("hi");
        	$http.post("fetchOperator").success(function(data){
        		$scope.loader = false;
        		if(data.status == "1"){
        			$scope.operator = data.operator;
        		}
        	}).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        
        $scope.changeSettlementtype = function(type){
    		$scope.loader=true;
    		if(type=='Settle to Wallet'){
    			$scope.loader=false;
    			$("#div152").show();
    			$("#div154").show();
    			if($("#div153").is(':visible')){
    				$("#div153").hide();	
    			}
    		}else{
    			$scope.loader=false;
    			if($("#div152").is(':visible')){
    				$("#div152").hide();	
    			}
    			$("#div154").show();
    			$("#div153").show();
    			/*sshowDiv('sdiv153');	*/
    		}
    		
    	}
        
        $scope.editProfile = function() {
            $scope.loader = true;
            $http.post('editProfile', $scope.userDetails).success(function(data) {
                $scope.loader = false;
                if (data.status == '1') {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000)
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        }
        
        $scope.setImpscharge = function(Impscharge){
    		$scope.loader=true;
    		$http.post('setImpscharge',Impscharge).success(function(data) {
    			$scope.loader=false;
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			} else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	}
        
        $scope.packageCreate = function(details){
        	console.log(details);
        	if(details.name === undefined || details.name === null ||details.name === ""){
        		$scope.loader=false;
        		$scope.showAlert("danger", "Insert Package Name!");
        		return false;
        	}
        	if(details.type=='0'){
        		$scope.loader=false;
        		$scope.showAlert("danger", "Select Package Type!");
        		return false;
        	}
        	$scope.loader=true;		
        	$http.post('packageCreate',details).success(function(data) {
        		$scope.loader=false;
        		$scope.showAlert("success", data.message);
        	}).error(function(data){
        		$scope.loader=false;
        		$scope.showAlert("danger", "Technical Error. Please try after sometime");
        	});
        };

        $http.post('getPackagesDetails').success(function(data) {	
        	if (data.status == '1') {
        		$scope.packageDetails = data.packagelist;
        		console.log(data);
        	} else {
        		
        	}
        });
        
        $scope.assignPackage = function(details){
    		console.log(details);
    		$scope.loader=true;
    		$http.post('assignPackage',details).success(function(data) {
    			$scope.loader=false;
    			if (data.status == '1') {
    				$scope.showAlert("success", data.message);
    			}else{
    				$scope.showAlert("danger", data.message);
    			}
    			 setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000)
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	
    	}
        
        $scope.viewMyPackage = function(){

     		$scope.loader=true;
     		$http.post('getPackagesDetails').success(function(data) {
     			$scope.loader=false;
     			if (data.status == '1') {
     				sshowDiv('sdiv50');
         			$scope.packageDetail = data.packagelist;
         			console.log(data);
         		} else {
         			
         		}
     			
     		}).error(function(data){
     			$scope.loader=false;
     			$scope.showAlert("danger", "Technical Error. Please try after sometime");
     		});
     	}
        
        $scope.viewAssignedPackage =function(details){
 	      	$scope.loader = true;
 	      	$http.post('viewPackagewiseCommCharge',details).success(function(data){
 	      		     console.log(data);
 	      		     $scope.loader = false;
 	      		     showDiv('div25');
 	      			 $scope.packdetails = data.packdetails;
 	      	}).error(function(data) {
 	              $scope.loader = false;
 	              $scope.showAlert("danger", "Technical Error. Please try after sometime");
 	          });
 	      	
 	      }
        
        $scope.viewMyPackagechargeDetail =function(details){
         	$scope.loader = true;
         	$http.post('viewPackagewiseCommCharge',details).success(function(data){
         		     $scope.loader = false;
         		     showDiv('div27');
         			 $scope.MyPackageDetail = data.packdetails;
         	}).error(function(data) {
                 $scope.loader = false;
                 $scope.showAlert("danger", "Technical Error. Please try after sometime");
             });
         	
         }
        $scope.updatemyPackage =function(details){
         	console.log(details);
         	$scope.loader = true;
         	$http.post('updatemyPackage',details).success(function(data){
         		     $scope.loader = false;
         		     if(data.status== '1'){
         		    	  $scope.showAlert("success", data.message);
                      } else {
                          $scope.showAlert("danger", data.message);
                      }
         	}).error(function(data) {
                 $scope.loader = false;
                 $scope.showAlert("danger", "Technical Error. Please try after sometime");
             });
         	
         }
        
   	 $scope.myassignedPackage =function(){
      	$scope.loader = true;
      	$http.post('assignedPackage').success(function(data){
      		     $scope.loader = false;
      			 sshowDiv('sdiv51');
      			 $scope.Assignedpackdetails = data.report;
      	}).error(function(data) {
              $scope.loader = false;
              $scope.showAlert("danger", "Technical Error. Please try after sometime");
          });
      	
      }
   	 
   	$scope.viewAssignPackage =function(){
		$scope.loader = true;
      	$http.post('viewAssignPackage').success(function(data){
      		$scope.loader = false;
      		 sshowDiv('sdiv52');
      		 $scope.ViewPackageDetail = data.report;
      	}).error(function(data) {
            $scope.loader = false;
            $scope.showAlert("danger", "Technical Error. Please try after sometime");
        });
      	}
	$scope.editpk=function(details){
		console.log(details);
		$scope.loader = true;
		$scope.edpkg = details;
		$scope.loader=false;
		
	}
	
	$scope.assignEditPackage = function(details){
		console.log(details);
		$scope.loader=true;
		$http.post('assignEditPackage',details).success(function(data) {
			$scope.loader=false;
			if (data.status == '1') {
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	}

        $scope.changePassWord = function() {
            $scope.loader = true;
            $scope.changePass.userId = $scope.userDetails.userId;
            if ($scope.changePass.oldPassword == undefined || $scope.changePass.oldPassword === null ||
                $scope.changePass.oldPassword === "") {
                $scope.loader = false;
                $scope.showAlert("danger", "Please Enter Old Password!");
                return false;
            }
            if ($scope.changePass.newPassword == undefined || $scope.changePass.newPassword === null ||
                $scope.changePass.newPassword === "") {
                $scope.loader = false;
                $scope.showAlert("danger", "Please Enter New Password!");
                return false;
            }

            if ($scope.changePass.cnfrmPassword == undefined || $scope.changePass.cnfrmPassword === null ||
                $scope.changePass.cnfrmPassword === "") {
                $scope.loader = false;
                $scope.showAlert("danger", "Please Enter Confirm Password!");
                return false;
            }

            if ($scope.changePass.newPassword != $scope.changePass.cnfrmPassword) {
                $scope.loader = false;
                $scope.showAlert("danger", "Confirm password and New Password must be same!");
                return false;
            }
            $http.post('changePassWord', $scope.changePass).success(function(data) {
                $scope.loader = false;
                if (data.status == '1') {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000)
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        $scope.checkUniqueUser = function(details) {
            $scope.inputJson = {
                "username": details
            };
            $http.post('checkUniqueUser', $scope.inputJson).success(function(data) {
                if (data.status == "1") {
                    $scope.showAlert("danger", data.message);
                    $scope.addUserDetails.email = "";
                    $scope.addUserDetails.mobile = "";
                }
                $scope.inputJson = {};
            });
        };

        $scope.addNewUser = function(details) {
    		$scope.loader=true;
    		//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
    		var pattern=/^[a-z0-9]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
    		$scope.loader=true;
    		if(details.name === undefined || details.name === null || details.name === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your name!");
    			return false;
    		}
    		if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Firm Name!");
    			return false;
    		}
    		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your valid Mobile Number!");
    			return false;
    		}
    		if(details.address === undefined || details.address === null || details.address === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Address!");
    			return false;
    		}
    		if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Pincode!");
    			return false;
    		}
    		if(details.state === undefined || details.state === null || details.state === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your state!");
    			return false;
    		}
    		if(details.city === undefined || details.city === null || details.city === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your city!");
    			return false;
    		}
    		
    		if(!pattern.test(details.email)){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your valid Email!");
    			return false;
    		}
    		if(details.email === undefined || details.email === null || details.email === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Email!");
    			return false;
    		}
    		$http.post('addUser', details).success(function(data) {
    			$scope.loader=false;			
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			}else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	};
    	
     /*   $scope.addNewUser = function(details) {
    		$scope.loader=true;
    		//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
    		var pattern=/^[a-z0-9]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
    		$scope.loader=true;
    		if(details.name === undefined || details.name === null || details.name === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your name!");
    			return false;
    		}
    		if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Firm Name!");
    			return false;
    		}
    		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your valid Mobile Number!");
    			return false;
    		}
    		if(details.address === undefined || details.address === null || details.address === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Address!");
    			return false;
    		}
    		if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Pincode!");
    			return false;
    		}
    		if(details.state === undefined || details.state === null || details.state === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your state!");
    			return false;
    		}
    		if(details.city === undefined || details.city === null || details.city === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your city!");
    			return false;
    		}
    		
    		if(!pattern.test(details.email)){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your valid Email!");
    			return false;
    		}
    		if(details.email === undefined || details.email === null || details.email === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your Email!");
    			return false;
    		}
    		$http.post('addUser', details).success(function(data) {
    			$scope.loader=false;			
    			if(data.status == "1"){
    				$scope.showAlert("success", data.message);
    			}else{
    				$scope.showAlert("danger", data.message);
    			}
    			setTimeout(function(){
    				 if(data.nextPage != undefined){
    					 $window.location.href = data.nextPage;
    				 }
    			 },1000);
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    	};*/
        $scope.viewUser = {};
        $scope.getViewUser = function() {
            $scope.viewUser.userId = $scope.userDetails.userId;
            console.log($scope.viewUser);
            $scope.loader = true;
            $http.post('getViewUser', $scope.viewUser).success(function(data) {
                if (data.status == "1") {
                    if (data.report === undefined || data.report.length <= 0) {
                        $scope.viewUserPagination = false;
                        $scope.viewUserDetails = [];
                        $scope.data = [];
                    } else {
                        $scope.data = [];
                        $scope.viewUserPagination = true;
                        $scope.viewUserDetails = data.report;
                        $scope.currentPage = 0;
                        for (var i = 0; i < $scope.viewUserDetails.length; i++) {
                            $scope.data.push("Item " + i);
                        }
                    }
                } else {
                    $scope.viewUserPagination = false;
                    $scope.viewUserDetails = [];
                    $scope.data = [];
                    setTimeout(function() {
                        if (data.nextPage != undefined) {
                            $window.location.href = data.nextPage;
                        }
                    }, 1000);
                }
                $scope.loader = false;
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });

        };


        $scope.getUserByUserType = function(details, divName, modelName) {
            $scope.loader = true;
            $scope.inputJson = {
                "userType": details,
                "modelName": modelName
            };
            var divId = $parse(divName);
            if (details == "0") {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml(""));
                return false;
            }
            $http.post('getUserByUserType', $scope.inputJson).success(function(data) {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml(data.message));
            }).error(function(data) {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
            });
        };

        $scope.getUserByUserType1 = function(details, divName, modelName) {
            $scope.loader = true;
            $scope.inputJson = {
                "userType": details,
                "modelName": modelName
            };
            var divId = $parse(divName);
            if (details == "0" || details == "10") {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml(""));
                return false;
            }
            $http.post('getUserByUserType1', $scope.inputJson).success(function(data) {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml(data.message));
            }).error(function(data) {
                $scope.loader = false;
                divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
            });
        };
        
       /* $scope.getBundlePayDetails = function(details){
			console.log(details)
			$scope.bundlepayDetails = {};
			sshowDiv('sdiv4');
			$scope.bundlepayDetails =details;
		};*/

        $scope.addBalanceByUser = function(details) {        	
            $scope.loader = true;
            if(details.remarks === undefined || details.remarks === null || details.remarks === "" ){
    			$scope.loader=false;	
    			$scope.showAlert("info", "Enter your remarks!");
    			return false;
    		}
            $http.post('addBalance', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };

        $scope.filterValue = function($event) {
            if (isNaN(String.fromCharCode($event.keyCode))) {
                $event.preventDefault();
            }
        };
        
     

        $scope.getMyDiscount = function() {
            $scope.loader = true;
            $http.post('getMyDiscount', $scope.userDetails).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.myDiscount = data.commissionList;
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        }

        $scope.getMyDefaultDiscount = function() {
            $scope.loader = true;
            var inputJson = {
                "username": $scope.userDetails.userId
            };
            $http.post('getMyDefaultDiscount', inputJson).success(function(data) {
            	console.log(data);
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.defaultDiscount = data.commissionList;
                    $scope.myCommission = data.myComission
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };

        $scope.setDefaultDiscount = function(discount) {
            $scope.loader = true;
            var inputJson = {
                "discount": discount
            };
            $http.post('setDefaultDiscount', discount).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        }

        $scope.getIndividualDiscount = function(details) {
            $scope.loader = true;
            var inputJson = {
                "username": details
            };
            $http.post('getIndividualDiscount', inputJson).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.individualDiscount = data.commissionList;
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        }

        $scope.setIndividualDiscount = function(discount) {
            $scope.loader = true;
            var inputJson = {
                "discount": discount
            };
            $http.post('setIndividualDiscount', discount).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        
        $scope.checkAmount = function(value,amount){
        	//alert(amount);
        	if(amount<value)
        		{
        		$scope.showAlert("danger","Amount is bigger than balance");
        		$scope.mobileRecharge.amount = "";
        		}
        	};
        	


        $scope.mobileWebRecharge = function(details) {
            $scope.loader = true;
            if (details.mobile === "" || details.mobile === null || details.mobile === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Mobile Number");
                return false;
            }
            if (details.operator === "" || details.operator === null || details.operator === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Select Operator");
                return false;
            }
            if (details.amount === "" || details.amount === null || details.amount === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Amount");
                return false;
            }
            $http.post('webRecharge', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };


        $scope.dthWebRecharge = function(details) {
            $scope.loader = true;
            if (details.mobile === "" || details.mobile === null || details.mobile === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Subscriber Id");
                return false;
            }
            if (details.operator === "" || details.operator === null || details.operator === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Select Operator");
                return false;
            }
            if (details.amount === "" || details.amount === null || details.amount === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Amount");
                return false;
            }
            $http.post('webRecharge', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };


        $scope.dataCardWebRecharge = function(details) {
            $scope.loader = true;
            if (details.mobile === "" || details.mobile === null || details.mobile === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter  Number");
                return false;
            }
            if (details.operator === "" || details.operator === null || details.operator === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Select Operator");
                return false;
            }
            if (details.amount === "" || details.amount === null || details.amount === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Amount");
                return false;
            }
            $http.post('webRecharge', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };

        $scope.postPaidWebRecharge = function(details) {
            $scope.loader = true;
            if (details.mobile === "" || details.mobile === null || details.mobile === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Mobile Number");
                return false;
            }
            if (details.operator === "" || details.operator === null || details.operator === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Select Operator");
                return false;
            }
            if (details.amount === "" || details.amount === null || details.amount === undefined) {
                $scope.loader = false;
                $scope.showAlert("danger", "Enter Amount");
                return false;
            }
            $http.post('webRecharge', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };
        $scope.responseUrlSetting = {};
        $scope.getResponseUrl = function() {
            $scope.loader = true;
            $http.post('getResponseUrl').success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.responseUrlSetting = data.ApiSetting;
                } else {
                    $scope.responseUrlSetting.id = 0;
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };

        $scope.updateResponseUrl = function(details) {
            $scope.loader = true;
            $http.post('updateResponseUrl', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
            });
        };

        // REPORT 
        $scope.rechargeReport = {};
        $scope.rechargeReport.startDate = $scope.date;
        $scope.rechargeReport.endDate = $scope.date;
        $scope.getRechargeReport = function(details) {        	
            $scope.loader = true;
            $http.post('getRechargeReport', details).success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    if (data.report === undefined || data.report.length <= 0) {
                        $scope.viewRechargeReportsPagination = false;
                        $scope.RechargeReports = [];
                        $scope.data = [];
                    } else {
                        $scope.data = [];
                        $scope.viewRechargeReportsPagination = true;
                        $scope.RechargeReports = data.report;
                        $scope.currentPage = 0;
                        for (var i = 0; i < $scope.RechargeReports.length; i++) {
                            $scope.data.push("Item " + i);
                        }
                    }
                } else {
                    $scope.viewRechargeReportsPagination = false;
                    $scope.RechargeReports = [];
                    $scope.data = [];
                }
            });
        }

        $scope.getRechargeReportExcel = function(data) {
            alasql('SELECT * INTO XLSX("RechargeReport.xls",{headers:true}) FROM ?', [data]);
        };

        $scope.tranReport = {};
        $scope.tranReport.startDate = $scope.date;
        $scope.tranReport.endDate = $scope.date;

        $scope.getTransactionReport = function(tranReport) {  
        	console.log(tranReport);
        	 $scope.loader = true;
            $http.post('getTransactionReport', tranReport).success(function(data) {
            	 $scope.loader = false;
                if (data.status == "1") {
                    if (data.report === undefined || data.report.length <= 0) {
                        $scope.viewTransactioReportPagination = false;
                        $scope.TransactioReport = [];
                        $scope.data = [];
                    } else {
                        $scope.data = [];
                        $scope.viewTransactioReportPagination = true;
                        $scope.TransactioReport = data.report;
                        $scope.currentPage = 0;
                        for (var i = 0; i < $scope.TransactioReport.length; i++) {
                            $scope.data.push("Item " + i);
                        }
                    }
                } else {
                    if (data.status === '0') {
                        $scope.data = [];
                        $scope.viewTransactioReportPagination = false;
                        $scope.TransactioReport = [];
                        setTimeout(function() {
                            if (data.nextPage != undefined) {
                                $window.location.href = data.nextPage;
                            }
                        }, 1000);
                    }
                }
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });

        };
        
        

        $scope.getTransactionReportReportExcel = function(data) {
            alasql('SELECT * INTO XLSX("TransactionReport.xls",{headers:true}) FROM ?', [data]);
        };
        

        $scope.getTransactionReportDetails = function(){
        	
        	//$scope.loader = true;	
        $http.post('getTransactionReportDetails').success(function(data) {
        	$scope.loader = false;
        	console.log(data);
       		$scope.latestTransactionReport = data.rechargeReport;
        });
        }
        

        //==========

        $scope.viewBankDetail = function() {
            $scope.loader = true;
            $http.post('viewBankDetails').success(function(data) {
                $scope.loader = false;
                if (data.status == "1") {
                    if (data.bankDetails === undefined || data.bankDetails.length <= 0) {
                        $scope.viewBankDetails = [];
                    } else {
                        $scope.viewBankDetails = data.bankDetails;
                    }
                } else {
                    $scope.showAlert("danger", data.message);
                }
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        $scope.balBank = {};
        $scope.getBankDetails = function(id) {
            if (id === "" || id === null || id === undefined) {
                $scope.balBank = {};
                $scope.balBank.paymentDate = $scope.date;
                return false;
            }
            angular.forEach($scope.viewBankDetails, function(value, key) {
                if (value.id === parseInt(id)) {
                    $scope.balBank = $scope.viewBankDetails[key];
                    $scope.balBank.paymentDate = $scope.date;
                }
            });
        };

        $scope.getRechargeComplainDetails = function(transactionId) {
            $scope.loader = true;
            var inputJson = {
                'subject': transactionId
            };
            $http.post('getComplainDetails', inputJson).success(function(data) {
                $scope.loader = false;
                if (data.status == '1') {
                    $scope.rechargeComplain = data.complain;
                } else {
                    $scope.showAlert("danger", data.message);
                }
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        $scope.submitBundledPaymentDetails = function(details,divName){
			console.log(details)
			details.consumerID = $scope.remitterDetails.consumerId;
			var divId = $parse(divName);
			console.log(details);
			$scope.loader=true;	
		    if(details.amount === undefined || details.amount === null ||details.amount === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Amount Properly");
				return false;
			}
		    if(details.remark === undefined || details.remark === null ||details.remark === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Remark Properly");
				return false;
			}
		    if(details.ipin === undefined || details.ipin === null ||details.ipin === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Ipin Properly");
				return false;
			}
			$http.post("BundledPaymentDetails",details).success(function(data){				
				$scope.loader=false;
				var htmldata = data.message
				swal({
					  title: '',
					  text: "",
					  type: 'success',
					  showCancelButton: true,
					  confirmButtonColor: '#337ab7',
					  cancelButtonColor: '#337ab7',
					  confirmButtonText: 'Pay Again',
					  cancelButtonText: 'View IMPS Report',
					  confirmButtonClass: 'btn btn-primary',
					  cancelButtonClass: 'btn btn-primary',
					  showCloseButton: true,
					  buttonsStyling: false,
					  reverseButtons: true,
					  html: htmldata
					}).then((result) => {
					  if (result.value) {
						  showDiv('div22');
						  sshowDiv('sdiv2');
						  
						  
					  // result.dismiss can be 'cancel', 'overlay',
					  // 'close', and 'timer'
					  } else if (result.dismiss === 'cancel') {
						  showDiv('div33');
					  }
					});
				/*divId.assign($scope,  $sce.trustAsHtml(data.message));*/
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		$scope.verifiedBeneficiary=function(details){
			
			console.log(details);
			$scope.loader=true;	
			$http.post("verifiedBeneficiary",details).success(function(data){
				console.log(details);
				$scope.loader=false;
				if(data.status=="1"){
					$scope.showAlert("success", data.message);
					$scope.bankdetails=data.impsbank;
					sshowDiv('sdiv502');
					/*$scope.remitterDetails.mobile = details.remitter
					$scope.checkRemitterNumber(data.checkRemitterMobile);*/
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
			
		}
		
		$scope.cancelback = function(){
			$http.post("cancelback").success(function(data){
			$scope.remitterDetails.mobile =data.checkRemitterMobile;
			$scope.checkRemitterNumber($scope.remitterDetails);
			});
		}
		
$scope.Deletebeneficiary=function(details){
			
			console.log(details);
			$scope.loader=true;	
			$http.post("Deletebeneficiary",details).success(function(data){
				console.log(details);
				$scope.loader=false;
				if(data.status=="1"){
					$scope.showAlert("success", data.message);
					sshowDiv('sdiv504');
					$scope.dbene=details;
					//$dbene.remitter=data.checkRemitterMobile;
				}
				else{
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
			
		}
$scope.deleteVerifybane = function(details){
	$scope.loader=true;	
	$http.post("deleteVerifybane",details).success(function(data){
		$scope.loader=false;
		if(data.status=="1"){
			$scope.showAlert("success", data.message);
		}
		else
			{
			$scope.showAlert("danger", data.message);
			}
	}).error(function(data){
		$scope.loader=false;
		$scope.showAlert("danger", "Technical Error. Please try after sometime");	
	});
}


		
		$scope.accountverification = function(details){
			$scope.loader=true;	
			$http.post("accountverification",details).success(function(data){
				$scope.loader=false;
				if(data.status=="1"){
					$scope.showAlert("success", data.message);
					//sshowDiv('sdiv2');
					$scope.remitterDetails.mobile = data.checkRemitterMobile;
					$scope.checkRemitterNumber($scope.remitterDetails);
				}else{
					$scope.showAlert("danger", data.message);
				}
			});
		}
		
		$scope.confirmVerification=function(details){
			console.log(details);
			$scope.loader=true;	
			$http.post("confirmVerification",details).success(function(data){
				$scope.loader=false;
				$scope.showAlert("info", "SUCCESS");	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
			
		}
		
		$scope.updatepin= function(){
			$scope.loader=true;	
			$http.post("resendpin").success(function(data){
			$scope.loader=false;
			if(data.status=="1"){
				$scope.showAlert("success", data.message);
				sshowDiv('sdiv2');
			}else{
				$scope.showAlert("danger", data.message);
			}
			});
		}
		
		$scope.fetchbank= function(){
			$scope.loader=true;	
			$http.post("fetchbank").success(function(data){
				$scope.loader=false;
				console.log(data);
				$scope.bankdetails=data.impsbank;
				sshowDiv('sdiv3');
			});
		}
		
		$scope.resendpin= function(){
			$scope.loader=true;	
			$http.post("resendpin").success(function(data){
			$scope.loader=false;
			if(data.status=="1"){
				$scope.showAlert("success", data.message);
				sshowDiv('sdiv2');
			}else{
				$scope.showAlert("danger", data.message);
			}
			});
		}
		$scope.impsReport = function(details){
			console.log(details);
			$scope.loader=true;
			$http.post("impsReport",details).success(function(data){
				$scope.loader=false;
				$scope.dmrreport=data.impsreport;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.impsReports = [];
		$scope.impsReport = {};
		$scope.impsReport.startDate = $scope.date;
		$scope.impsReport.endDate = $scope.date;
		$scope.getImpsReport = function(details, divName){	
			$scope.loader = true;	
			$http.post('getImpsReport',details).success(function(data){
				console.log(data);
				$scope.loader = false;
				if(data.status == "1"){				
					if(data.list === undefined || data.list.length <= 0){
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewRechargeReportsPagination = true;
						$scope.impsReports = data.list;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.impsReports.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewRechargeReportsPagination = false;
					$scope.impsReports = [];
					$scope.data = [];
				}
			});
		}
		$scope.resetIpin = function(){
			
		/*	var divId = $parse(divName);*/
			 $scope.inputJson = {
		                "consumerId": $scope.remitterDetails.consumerId
		            };
			 $http.post("resetIpin", $scope.inputJson).success(function(data){
				 
				 	
					$scope.loader=false;
					/*$scope.ImpsPayment.message=data.message;*/
					
					
					$scope.showAlert("danger", data.message);
				 
					/*divId.assign($scope,$sce.trustAsHtml(data.message));*/
				}).error(function(data){
					$scope.loader=false;
					$scope.showAlert("danger", "Technical Error. Please try after sometime");
				});
			
		}

        $scope.updateRechargeComplains = function(details) {
            $scope.loader = true;
            $http.post('updateRechargeComplains', details).success(function(data) {
                $scope.loader = false;
                if (data.status == '1') {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                    setTimeout(function() {
                        if (data.nextPage != undefined) {
                            $window.location.href = data.nextPage;
                        }
                    }, 1000);
                }
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        
        $scope.balBank = {};
        $scope.balBank1 = {};
        $scope.balBank.paymentDate = $scope.date;
        $scope.balBank1.paymentDate = $scope.date;
        $scope.balanceRequest = function(details,type) {
        	$scope.loader = true;
        	details.type = type;
            if (details.bankName === undefined || details.bankName === null || details.bankName === "") {
                $scope.showAlert("danger", "Select Bank Name properly");
                return false;
            }
            
            if (details.branchName === undefined || details.branchName === null || details.branchName === "") {
                $scope.showAlert("danger", "Enter Branch name properly");
                return false;
            }
            
            if (details.accName === undefined || details.accName === null || details.accName === "") {
                $scope.showAlert("danger", "Enter Account Name properly");
                return false;
            }
            
            if (details.accNo === undefined || details.accNo === null || details.accNo === "") {
                $scope.showAlert("danger", "Enter Account No. properly");
                return false;
            }
            
            if (details.ifscCode === undefined || details.ifscCode === null || details.ifscCode === "") {
                $scope.showAlert("danger", "Enter IFSC CODE properly");
                return false;
            }

            if (details.paymentMode === undefined || details.paymentMode === null || details.paymentMode === "") {
                $scope.showAlert("danger", "Select payment mode properly");
                return false;
            }

            if (details.transactionId === undefined || details.transactionId === null || details.transactionId === "") {
                $scope.showAlert("danger", "Enter Transaction Id properly");
                return false;
            }

            if (details.amount === undefined || details.amount === null || details.amount === "") {
                $scope.showAlert("danger", "Enter Amount properly");
                return false;
            }

            if (details.remarks === undefined || details.remarks === null || details.remarks === "") {
                $scope.showAlert("danger", "Enter Remark properly");
                return false;
            }            
            $http.post('balanceRequest', details).success(function(data) {    
            	console.log(details);
            	$scope.loader = false;
                 if (data.status == "1") {
                     $scope.showAlert("success", data.message);
                 } else {
                     $scope.showAlert("danger", data.message);
                 }
                /* setTimeout(function() {
                     if (data.nextPage != undefined) {
                         $window.location.href = data.nextPage;
                     }
                 }, 1000);*/
            }).error(function(data) {
                $scope.loader = false;
                $scope.showAlert("danger", "Technical Error. Please try after sometime");
            });
        };
        //Wallet Refill
       
        $scope.walletRefillRequest = function(details){
			$scope.loader=true;			
			$http.post("walletRefillRequest",details).success(function(data){
				$scope.loader=false;
				if(data.status === "1"){
					/*showDiv("div135");*/
					$scope.showAlert("success", data.message);
				} else {
					$scope.showAlert("danger", data.message);
				}
				 setTimeout(function() {
                     if (data.nextPage != undefined) {
                         $window.location.href = data.nextPage;
                     }
                 }, 1000);
				
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		// Wallet refill end
        $scope.AdvancedCustomerNo = function(details){
        	$scope.loader=true;
        	$http.post("advancedCustomerNo",details).success(function(data){
        		$scope.loader = false;
				if(data.status == "1"){					
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewRechargeReportsPagination = false;
						$scope.RechargeReports = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewRechargeReportsPagination = true;
						$scope.RechargeReports = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.RechargeReports.length; i++) {
							$scope.data.push("Item "+i);
						}					
					}
				}else{
					$scope.viewRechargeReportsPagination = false;
					$scope.RechargeReports = [];
					$scope.data = [];
				}
        	}).error(function(data){
   				$scope.loader=false;
   				$scope.showAlert("danger", "Technical Error. Please try after sometime");
   			});
        };
        
        $scope.AdvancedSearchUser = function(details){
        	$scope.loader=true;		
   			$http.post('advancedSearchUser', details).success(function(data) {
                if (data.status == "1") {
                    if (data.report === undefined || data.report.length <= 0) {
                        $scope.viewUserPagination = false;
                        $scope.viewUserDetails = [];
                        $scope.data = [];
                    } else {
                        $scope.data = [];
                        $scope.viewUserPagination = true;
                        $scope.viewUserDetails = data.report;
                        $scope.currentPage = 0;
                        for (var i = 0; i < $scope.viewUserDetails.length; i++) {
                            $scope.data.push("Item " + i);
                        }
                    }
                } else {
                    $scope.viewUserPagination = false;
                    $scope.viewUserDetails = [];
                    $scope.data = [];
                    setTimeout(function() {
                        if (data.nextPage != undefined) {
                            $window.location.href = data.nextPage;
                        }
                    }, 1000);
                }
                $scope.loader = false;
            }).error(function(data){
   				$scope.loader=false;
   				$scope.showAlert("danger", "Technical Error. Please try after sometime");
   			});
        };
        
        $scope.viewBalanceRequest = {};
		$scope.viewBalanceRequest.startDate = $scope.date;
		$scope.viewBalanceRequest.endDate = $scope.date;
		
		$scope.viewPendingBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateBalanceRequest = function(details, status){
			$scope.loader=true;			
			details.status = status;
			$http.post("updateBalanceRequest",details).success(function(data){
				$scope.loader=false;
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					/*$scope.notification.balRequest = $scope.notification.balRequest - 1;					
					angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {						
							$scope.viewBalanceRequestDetails.splice(key, 1);						
						}
					});*/
				} else {
					$scope.showAlert("danger", data.message);
					/*angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {
							$scope.viewBalanceRequestDetails[key].status = "PENDING";		               
		                }
					});*/
				}
				 setTimeout(function() {
                     if (data.nextPage != undefined) {
                         $window.location.href = data.nextPage;
                     }
                 }, 1000);
				
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewPurchaseReport = {};
		$scope.viewPurchaseReport.startDate = $scope.date;
		$scope.viewPurchaseReport.endDate = $scope.date;
		
		$scope.getPurchaseReport = function(details){				
			$scope.loader=true;				
			$http.post("viewPurchaseReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.PurchaseReport === undefined || response.PurchaseReport.length <= 0){
						$scope.viewPurchaseReportPagination = false;
						$scope.viewPurchaseReportDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewPurchaseReportPagination = true;
						$scope.viewPurchaseReportDetails = response.PurchaseReport;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewPurchaseReportDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewPurchaseReportPagination = false;
					$scope.viewPurchaseReportDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.viewBalanceTransferReport = {};
		$scope.viewBalanceTransferReport.startDate = $scope.date;
		$scope.viewBalanceTransferReport.endDate = $scope.date;
		
		$scope.getBalanceTransferReport = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceTransferReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceTransfer === undefined || response.BalanceTransfer.length <= 0){
						$scope.viewBalanceTransferPagination = false;
						$scope.viewBalanceTransferDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceTransferPagination = true;
						$scope.viewBalanceTransferDetails = response.BalanceTransfer;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceTransferDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceTransferPagination = false;
					$scope.viewBalanceTransferDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewComplain = {};
		$scope.viewComplain.startDate = $scope.date;
		$scope.viewComplain.endDate = $scope.date;
		
		$scope.viewlatestComplain = function(details){
			$scope.loader=true;	
			$http.post("viewLatesComplain",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getComplainDetails = function(details){
			$scope.loader=true;	
			$http.post("viewComplain",details).success(function(data){
				$scope.loader=false;				
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.addComplains = function(details){
			$scope.loader=true;	
			if(details.complainType === undefined || details.complainType === null || details.complainType == "0"){
				$scope.loader=false;
				$scope.showAlert("info", "Select Complain type Properly");
				return false;
			}
			
			if(details.subject === undefined || details.subject === null || details.subject == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Complain Subject Properly!");
				return false;
			}
			
			if(details.complain === undefined || details.complain === null || details.complain == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter your Complain Message!");
				return false;
			}
			
			$http.post("addComplains",details).success(function(data){            	
            	$scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                    if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
           }).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.billFetchelectric = function(details) {
            $scope.loader = true;
             
            $http.post('billFetch', details).success(function(data) {
                $scope.loader = false;
                console.log(data);
                if (data.status == "1") {
                	$('#mdModal').modal('show');
               	 $scope.billpaymentFirstdata=data;
      
               
                    $scope.showAlert("success", data.message);
                }else if(data.status == "2"){
                	$('#mdModal1').modal('show');
                   	 $scope.billpaymentmanualdata=data;
                } else {
                    $scope.showAlert("danger", data.message);
                }
              
            });
        };
        
        
		$scope.eBillPaymentPostPaid = function(details){
			$scope.loader=true;	
			
			$http.post("eBillPaymentPostPaid",details).success(function(data){
				$scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                	if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
			
		};
		
		$scope.eBillFetch = function(details){
			$scope.loader=true;	
			if(details.consumerNumber === undefined || details.consumerNumber === null || details.consumerNumber == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Consumer Number Properly");
				return false;
			}
			if(details.consumerMobile === undefined || details.consumerMobile === null || details.consumerMobile == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter consumer Mobile Properly");
				return false;
			}
			$http.post("eBillFetch",details).success(function(data){
				$scope.loader = false;
                if (data.status == "1") {
                	console.log(data);
                	$scope.billpaymentFirstdata = data;
                  //  $scope.showAlert("success", data.message);
                    $('#mdModal').modal('show');
                } else {
                    $scope.showAlert("danger", data.message);
                }
                
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
			
		}
		
		$scope.eBillPayment = function(details){
			$scope.loader=true;	
			
			$http.post("eBillPayment",details).success(function(data){
				$scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                	if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
			
		};
		
		 $scope.eBillPaymentmanual = function(details){
 			$scope.loader=true;	
 			if(details.consumerNumber === undefined || details.consumerNumber === null || details.consumerNumber == ""){
 				$scope.loader=false;
 				$scope.showAlert("info", "Enter Consumer Number Properly");
 				return false;
 			}
 			if(details.CUSTNAME === undefined || details.CUSTNAME === null || details.CUSTNAME == ""){
 				$scope.loader=false;
 				$scope.showAlert("info", "Enter Consumer Name Properly");
 				return false;
 			}
 			if(details.consumerMobile === undefined || details.consumerMobile === null || details.consumerMobile == ""){
 				$scope.loader=false;
 				$scope.showAlert("info", "Enter Consumer Mobile Properly");
 				return false;
 			}
 			if(details.Dueamount === undefined || details.Dueamount === null || details.Dueamount == ""){
 				$scope.loader=false;
 				$scope.showAlert("info", "Enter Amount Properly");
 				return false;
 			}
 		
 			if(details.BILLDATE === undefined || details.BILLDATE === null || details.BILLDATE == ""){
 				$scope.loader=false;
 				$scope.showAlert("info", "Enter BILLDATE ");
 				return false;
 			}
 			$http.post("eBillPayment",details).success(function(data){
 				$scope.loader = false;
                 if (data.status == "1") {
                     $scope.showAlert("success", data.message);
                 } else {
                     $scope.showAlert("danger", data.message);
                 }
                 setTimeout(function() {
                 	if (data.nextPage != undefined) {
                         $window.location.href = data.nextPage;
                     }
                 }, 1000);
 			}).error(function(data){
 				$scope.loader=false;
 				$scope.showAlert("danger", "Technical Error. Please try after sometime");
 			});
 			
 		};
		
		
		$scope.gasBillPayment = function(details){
			$scope.loader=true;	
			if(details.consumerNumber === undefined || details.consumerNumber === null || details.consumerNumber == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Consumer Number Properly");
				return false;
			}
			if(details.consumerName === undefined || details.consumerName === null || details.consumerName == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Consumer Name Properly");
				return false;
			}
			if(details.consumerMobile === undefined || details.consumerMobile === null || details.consumerMobile == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Consumer Mobile Properly");
				return false;
			}
			if(details.amount === undefined || details.amount === null || details.amount == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Amount Properly");
				return false;
			}
			if(details.operator === undefined || details.operator === null || details.amount == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Select Operator properly");
				return false;
			}
			if(details.dueDate === undefined || details.dueDate === null || details.dueDate == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Amount Properly");
				return false;
			}
			
			$http.post("gasBillPayment",details).success(function(data){
				$scope.loader = false;
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                	if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
			
		};
		
		$scope.insuranceBillPayment = function(details){
			$scope.loader = true;	
			if(details.policyNumber === undefined || details.policyNumber === null || details.policyNumber == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Policy Number Properly");
				return false;
			}
			if(details.policyHolderName === undefined || details.policyHolderName === null || details.policyHolderName == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Policy Holder Name Properly");
				return false;
			}
			if(details.custNumber === undefined || details.custNumber === null || details.custNumber == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Mobile number Properly");
				return false;
			}
			if(details.amount === undefined || details.amount === null || details.amount == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Amount Properly");
				return false;
			}
			if(details.operator === undefined || details.operator === null || details.amount == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Select Operator properly");
				return false;
			}
			if(details.dob === undefined || details.dob === null || details.dob == ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Date Of Birth Properly");
				return false;
			}
			
			$http.post("insuranceBillPayment",details).success(function(data){				
                if (data.status == "1") {
                    $scope.showAlert("success", data.message);
                } else {
                    $scope.showAlert("danger", data.message);
                }
                setTimeout(function() {
                	if (data.nextPage != undefined) {
                        $window.location.href = data.nextPage;
                    }
                }, 1000);
                $scope.loader = false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
			
		};
		
		$scope.viewUtilityRequest = {};
		$scope.viewUtilityRequest.startDate = $scope.date;
		$scope.viewUtilityRequest.endDate = $scope.date;
		
		$scope.viewUtilityReport = function(details){			
			$scope.loader=true;				
			$http.post("viewUtilityReport",details).success(function(response){				
				$scope.loader=false;					
				if(response.status == "1"){
					if(response.utility === undefined || response.utility.length <= 0){
						$scope.viewUtilityPagination = false;
						$scope.viewUtilityDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUtilityPagination = true;
						$scope.viewUtilityDetails = response.utility;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUtilityDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUtilityPagination = false;
					$scope.viewUtilityDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewInsuranceRequest = {};
		$scope.viewInsuranceRequest.startDate = $scope.date;
		$scope.viewInsuranceRequest.endDate = $scope.date;
		
		$scope.viewInsuranceReport = function(details){			
			$scope.loader=true;				
			$http.post("viewInsuranceReport",details).success(function(response){		
				console.log(response);
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.insurance === undefined || response.insurance.length <= 0){
						$scope.viewInsurancePagination = false;
						$scope.viewInsuranceDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewInsurancePagination = true;
						$scope.viewInsuranceDetails = response.insurance;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewInsuranceDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewInsurancePagination = false;
					$scope.viewInsuranceDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getExcelReport = function(data,fileName){
			var file = fileName+".xls";
			alasql("SELECT * INTO XLSX('"+file+"',{headers:true}) FROM ?",[data]);		
		};
		
		$scope.resend = function(details){
			
			console.log(details);
			$http.post("resend",details).success(function(data){
				$scope.loader=false;
			});
		}
		
		$scope.remitter = {};
		$scope.remitterDetails = {};
		$scope.beneficiaryList = [];
		$scope.ifscCodeList = [];
		$scope.bene = {};
		$scope.checkRemitterNumber = function(details){
			$scope.loader=true;
			if(details.mobile === undefined || details.mobile === null || details.mobile === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Remitter Number Properly");
				return false;
			}
			$http.post("checkRemitterNumber",details).success(function(data){
				console.log(data.beneficiaryresponse.myArrayList);
				$scope.loader=false;
				if(data.status === "1"){
					showDiv("div22");	
					//sshowDiv('sdiv502');
					if(data.message === "2001"){
						//$scope.remitterDetails=details;
						sshowDiv('sdiv501');
						
					} else {
						
						sshowDiv('sdiv2');	
						$scope.remitterDetails=data.remitterresponse.map;
						$scope.benedetails=data.beneficiaryresponse.myArrayList;
						/*$scope.beneficiaryList = data.BeneficiaryDetails;							
						$scope.remitterDetails.limit = data.limit;
						$scope.remitterDetails.dob = data.dob;
						$scope.ifscCodeList = data.ifscCodeList;*/
					}					
					$scope.remitterDetails.remitter = data.remitter;
					$scope.remitterDetails.consumerId = data.consumerId;
				} else {
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			})
		};
		
		$scope.getBundlePayDetails = function(details){
			console.log(details);
			$scope.bundlepayDetails = {};
			$http.post("getBundlePayDetails").success(function(data){
				console.log(data);
				if(data.status === "1"){
					sshowDiv('sdiv4');
					$scope.bundlepayDetails =details;
					$scope.bundlepayDetails.map.reference =data.referenceno;
				}
			});
			
		};
		
		$scope.getstatus = function(details){
			console.log(details);
			$scope.loader=true;	
			$scope.bundlepayDetails = {};
			$http.post("getstatus",details).success(function(data){
				$scope.loader=false;	
				console.log(data);
				if(data.status === "1"){
					sshowDiv('sdiv4');
					$scope.bundlepayDetails =details;
					$scope.bundlepayDetails.map.reference =data.referenceno;
				}
			});
			
		};
		
		$scope.submitRemitterRegistration = function(details){
			console.log(details);
			$scope.loader=true;	
			
			$http.post("remitterRegistration",details).success(function(data){				
				$scope.loader=false;
				if(data.status === "1"){
					if(data.message === "2000"){
					$scope.remitterDetails.mobile = details.remitter
					$scope.checkRemitterNumber($scope.remitterDetails);
					}
				} else {
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		$scope.submitBundledPaymentDetails = function(details,divName){
			console.log(details);
			$scope.loader=true;	
		    if(details.amount === undefined || details.amount === null ||details.amount === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Amount Properly");
				return false;
			}
			$http.post("BundledPaymentDetails",details).success(function(data){				
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
					$scope.remitterDetails.mobile = data.checkRemitterMobile;
					$scope.checkRemitterNumber($scope.remitterDetails);
				}else{
					$scope.showAlert("danger", data.message);
				}
					
				/*divId.assign($scope,  $sce.trustAsHtml(data.message));*/
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getmoneyback = function(details){
			console.log(details);
			$scope.loader=true;	
			$http.post("getmoneyback",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
					$scope.moneyre=details;
					sshowDiv('sdiv503');
				}else{
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
		}
		
		$scope.claimrefund = function(details){
			console.log(details);
			$scope.loader=true;	
			$http.post("claimrefund",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
					
				}else{
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
		}
		
		$scope.confirmVerification=function(details){
			console.log(details);
			$scope.loader=true;	
			$http.post("confirmVerification",details).success(function(data){
				$scope.loader=false;
				$scope.showAlert("info", "SUCCESS");	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");	
			});
			
		}
		$scope.getIfscCodeForBank = function(details){ 
			if(details === ""){
				$scope.bene.beneIFSCCode  = "";
				return false;					
			}		
			angular.forEach($scope.ifscCodeList, function(value, key) {
                if (value.id === parseInt(details)) {
                    $scope.bene.beneIFSCCode = $scope.ifscCodeList[key].ifscCode;                    
                }
            });
		};
		
		$scope.newBeneficiary = function(details){
			$scope.loader=true;	
			
			if(details.bene_name === undefined || details.bene_name === null || details.bene_name === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Beneficiary name Properly");
				return false;
			}
			
			if(details.accountNumber === undefined || details.accountNumber === null || details.accountNumber === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Enter Account Number Properly");
				return false;
			}
			
			if(details.Bank_id === undefined || details.Bank_id === null || details.Bank_id === ""){
				$scope.loader=false;
				$scope.showAlert("info", "Select Bank Number");
				return false;
			}
			//console.log(details);
			details.consumerId = $scope.remitterDetails.consumerId;
			$http.post("newBeneficiary",details).success(function(data){				
				$scope.loader=false;
				if(data.message === "2000"){	
					$scope.showAlert("success", data.msg);
					sshowDiv('sdiv1');
					console.log(data.bene);
					$scope.remitterDetails=data.bene;
				} else {
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.checkComission = function(defaultComm, myCom){
        	var totalComm = parseFloat(defaultComm.distributor) + parseFloat(defaultComm.superDistributor) + parseFloat(defaultComm.retailer);
        	if(totalComm >= myCom.commission){
        		$scope.showAlert("info", "You Cannot Set Comission for "+myCom.serviceProvider +" more thann "+myCom.commission);
        		angular.forEach($scope.defaultDiscount, function(value, key) {
					if(value.commissionId === defaultComm.commissionId){						
						$scope.defaultDiscount[key].distributor = 0;
						$scope.defaultDiscount[key].superDistributor = 0;
						$scope.defaultDiscount[key].retailer = 0;
					}
				});
        	} else {
        		return false;
        	}
        }
		
		$scope.refundReport = {};
    	$scope.refundReport.startDate = $scope.date;
    	$scope.refundReport.endDate = $scope.date;
    	
    	$scope.getRefundReport = function(details){    				
    		$scope.loader=true;
    		$scope.data = [];
    		$http.post('getRefundReport',details).success(function(data){	
    			$scope.loader=false;
    			if(data.status == "1"){
    				if(data.report === undefined || data.report.length <= 0){
    					$scope.viewRefundReportPagination = false;
    					$scope.refundReportDetails = [];
    					$scope.data = [];
    				}else{
    					$scope.data = [];
    					$scope.viewRefundReportPagination = true;
    					$scope.refundReportDetails = data.report;
    					$scope.currentPage = 0;				   
    					for (var i=0; i<$scope.refundReportDetails.length; i++) {
    				        $scope.data.push("Item "+i);
    				    }					
    				}
    			}else{
    				if(data.status === '0'){					
    					$scope.data = [];
    					$scope.viewRefundReportPagination = false;
    					$scope.refundReportDetails = [];
    					setTimeout(function(){
    						 if(data.nextPage != undefined){
    							 $window.location.href = data.nextPage;
    						 }
    					 },1000);
    				}
    			}	
    		}).error(function(data){
    			$scope.loader=false;
    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
    		});
    		
    	};
    	
    	$scope.invoiceForRecharge = {};
    	$scope.getInvoiceForRecharge = function(details){
    		console.log(details);
    		$scope.invoiceForRecharge = details;
    	}
    	
    	
    	 $scope.printRecharegeDetails = function(details) {
    		console.log(details);    		
    	    var mywindow = window.open('' );
    	    mywindow.document.write("<html><head><title>Recharge Invoice</title>");
    	    mywindow.document.write("<link rel='stylesheet' href='assets/css/bootstrap.css' type='text/css'>");
    	    mywindow.document.write("<link rel='stylesheet' href='assets/css/style.css' type='text/css'  />");
    	    mywindow.document.write("</head><body style='background: #fff'>");
    	    mywindow.document.write("<div class='invoice'><div class='row'>" +
    	    		"<div class='col-lg-4 col-md-4 col-sm-4 col-xs-4'>" +
    	    		"<img width = '150px' src='data:image/jpg;base64, "+$scope.logoimage+"' class='img-rounded logo'>" +
    	    		"<address><strong>"+$scope.reseller.poweredBy +"</strong><br>"+$scope.reseller.supportEmail +"<br>"+$scope.reseller.supportNumber +"<br></address>" +
    	    		"</div><div class='col-lg-8 col-md-8 col-sm-8 col-xs-8 well'>" +
    	    		"<table class='invoice-head'>" +
    	    		"<tbody>" +
    	    		"<tr>" +
    	    		"<td class='pull-right'><h5>Invoice: </h5></td>" +
    	    		"<td>"+details.tid +"</td>" +
    	    		"</tr>" +
    	    		"<tr>" +
    	    		"<td class='pull-right'><h5>Customer Name:</h5></td>" +
    	    		"<td>"+$scope.userDetails.name +"</td>" +
    	    		"</tr>" +
    	    		"<tr>" +
    	    		"<td class='pull-right'><h5>Email:</h5></td>" +
    	    		"<td>"+$scope.userDetails.email +"</td>" +
    	    		"</tr>" +
    	    		"<tr>" +
    	    		"<td class='pull-right'><h5>Mobile No.:</h5></td>" +
    	    		"<td>"+$scope.userDetails.mobile +"</td>" +
    	    		"</tr>" +
    	    		"</tbody>" +
    	    		"</table>" +
    	    		"</div></div>" +
    	    		"<div class='row'><div class='col-lg-12 col-md-12 col-sm-12 col-xs-12'>" +
    	    		"<h3>Your Invoice</h3>" +
    	    		"</div></div>" +
    	    		"<div class='row'><div class='col-lg-12 col-md-12 col-sm-12 col-xs-12 invoice-body'>" +
    	    		"<table class='table table-bordered'>" +
    	    		"<thead>" +
    	    		"<tr>" +
    	    		"<th>Service Provider</th>" +
    	    		"<th>Customer Number</th>" +
    	    		"<th>Date</th>" +
    	    		"<th>Amount</th>" +
    	    		"</tr>" +
    	    		"</thead>" +
    	    		"<tbody>" +
    	    		"<tr>" +
    	    		"<td>"+details.serviceProvider +"</td>" +
    	    		"<td>"+details.mobile +"</td>" +
    	    		"<td>"+details.date + details.time+"</td>" +
    	    		"<td>"+details.amount +"</td>" +
    	    		"</tr>" +
    	    		"</tbody>" +
    	    		"</table>" +
    	    		"</div></div>" +
    	    		"<div class='row footerHidden'>" +
    	    		"<div class='col-lg-12 col-md-12 col-sm-12 col-xs-12 well invoice-thank'>" +
    	    		"<center><button class = 'btn btn-success' onclick= 'window.print();'>Print</button></center>" +
    	    		"</div></div></div>");
    	    mywindow.document.write('</body></html>');
    	    return true;
    	}
    	 
    	 $scope.earningReportDetails = [];
    	 $scope.earningReport = {};
	    	$scope.earningReport.startDate = $scope.date;
	    	$scope.earningReport.endDate = $scope.date;
	    	
	    	$scope.getEarningReport = function(details){	
	    		$scope.loader=true;
	    		$scope.data = [];
	    		$http.post('getEarningReport',details).success(function(data){	
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				if(data.report === undefined || data.report.length <= 0){
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];
	    					$scope.data = [];
	    				}else{
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = true;
	    					$scope.earningReportDetails = data.report;
	    					$scope.currentPage = 0;				   
	    					for (var i=0; i<$scope.earningReportDetails.length; i++) {
	    				        $scope.data.push("Item "+i);
	    				    }					
	    				}
	    			}else{
	    				if(data.status === '0'){					
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];	    					
	    				}
	    			}	
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};
	    	
	    	$scope.getMyCharge = function() {
	            $scope.loader = true;
	            $http.post('getMyCharge', $scope.userDetails).success(function(data) {
	                $scope.loader = false;
	                if (data.status == "1") {
	                    $scope.chargeList = data.chargeList;                
	                } else {
	                    $scope.showAlert("danger", data.message);
	                }
	                setTimeout(function() {
	                    if (data.nextPage != undefined) {
	                        $window.location.href = data.nextPage;
	                    }
	                }, 1000);
	            }).error(function(data) {
	                $scope.loader = false;
	                $scope.showAlert("danger", "Technical Error. Please try after sometime");
	            });
	        }
	    	
	    	$scope.getIndividualCharge = function(details){
	    		$scope.loader=true;			
	    		$http.post('getIndividualCharge',details).success(function(data) {
	    			$scope.loader=false;
	    			if(data.status == "1"){				
	    				$scope.individualCharge = data.chargeList;				
	    			} else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000);
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.setIndividualCharge = function(charge){
	    		$scope.loader=true;
	    		var inputJson = {"discount": charge};		
	    		$http.post('setIndividualCharge',charge).success(function(data) {
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    			} else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000);
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	};
	    	
	    	$scope.getIMPScharge = function(details){
	    		$scope.loader=true;
	    		$http.post('getIMPScharge',details).success(function(data) {
	    			$scope.loader=false;
	    			sshowDiv('sdiv90');
	    			$scope.viewIMPSchargeDetails = data.impscommission;
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};
	    	
	    	$scope.setImpscharge = function(Impscharge){
	    		$scope.loader=true;
	    		$http.post('setImpscharge',Impscharge).success(function(data) {
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    			} else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000);
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	   	 $scope.printUtilityDetails = function(details) {
	      		console.log(details);    		
	      	    var mywindow = window.open('' );
	      	  mywindow.document.write("<html><head><title>Recharge Invoice</title>");
	   	    mywindow.document.write("<link rel='stylesheet' href='assets/css/bootstrap.css' type='text/css'>");
	   	    mywindow.document.write("<link rel='stylesheet' href='assets/css/style.css' type='text/css'  />");
	   	    mywindow.document.write("<style>body{font-size: 10px;}.receipt-text { font-size: 9pt;	}.receipt-text_legal-text {font-size: 8pt;}.receipt-text_title { font-size: 11pt;}br{margin-top: 10px;}</style></head><body style='background: #fff'>");
	   	    mywindow.document.write("<div class='invoice'><div class='row'>" +
	   	    		"<div class='col-lg-12 col-md-12 col-sm-12 col-xs-12'>" +
	   	    		"<center><address><strong>"+$scope.reseller.poweredBy +"</strong><br>"+$scope.reseller.supportEmail +"<br>"+$scope.reseller.supportNumber +"<br></address></center>" +
	   	    		"</div></div>" +
	   	    		"<div class='row'>" +
	   	    		"<div class='col-xs-12 col-md-12 col-sm-12'>" +
						"<table class='table table-striped table-bordered' style='font-size: 10px;'><tbody>" +
						"<tr>" +
						"<td><strong>Customer Name :</strong></td><td class='text-center'><strong>"+details.customerName +"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Customer No:</strong></td><td class='text-center'><strong>"+details.accountNo +"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Submit Date:</strong></td><td class='text-center'><strong>"+details.submitDate +"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Transaction Id:</strong></td><td class='text-center'><strong>"+details.transactionId +"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Time:</strong></td><td class='text-center'><strong>"+details.submitTime+"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Operator Name:</strong></td><td class='text-center'><strong>"+details.serviceName +"</strong></td>" +
						"</tr>" +
						"<tr>" +
						"<td><strong>Amount:</strong></td><td class='text-center'><strong>Rs."+details.amount+"/-</strong></td>" +
						"</tr></tbody></table>" +
						"</div>" +
						"</div>"+
	   	    		"<div class='row footerHidden'>" +
	   	    		"<div class='col-lg-12 col-md-12 col-sm-12 col-xs-12 well invoice-thank'>" +
	   	    		"<center><button class = 'btn btn-success' onclick= 'window.print();'>Print</button></center>" +
	   	    		"</div></div></div>");
	   	    mywindow.document.write('</body></html>');
	   	    return true;
	    	 }
	   	 
	     //DOOPME IMPS-----------------------------------------------------------------------------------
	   //Check Remitter
	    	$scope.checkuserDoopme = function(details){
	    		$scope.loader = true;
	    		$http.post('checkuserDoopme', details).success(function(data) {
	    			
	    			$scope.loader = false; 
	    			if(data.status == "1"){
	    				
	    			//	$scope.showAlert("success", data.message);
	    			/*	showDiv("div1");
	    				sshowDiv('sdiv2');*/
	    				$scope.remitterDetails=data;
	    				/*$scope.remitterDetails.remitter=data.MOBILENO;
	    				$scope.remitterDetails.remitterid=data.REMID;*/
	    				$scope.viewdoopmebene();
	    				$scope.remiid=data.REMID;
	    				$scope.remimob=details.mobile;
	     			}else{
	     				$scope.showAlert("danger", data.message);
	     				$scope.remitter.customermobile=details.mobile;
	     				showDiv('div1');
	     				sshowDiv('sdiv0');
	     				
	     			}
	    		 }).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	};
	    	//Register Remitter
	    	$scope.doopmeRemitterRegister =function(details){
	    		$scope.loader = true;
	    		$http.post('doopmeRemitterRegister', details).success(function(data) {
	    			console.log(data);
	    			$scope.loader = false; 
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				showDiv("div1");
	    				sshowDiv('sdiv2');
	    				$scope.remitterDetails=data;
	    				$scope.remiid=data.REMID;
	    				/*$scope.remitterDetails.remitter=data.MOBILENO;
	    				$scope.remitterDetails.remitterid=data.REMID;*/
	    				$scope.viewdoopmebene();
	     			}else{
	     				$scope.showAlert("danger", data.message);
	     				showDiv('div1');
	     				sshowDiv('sdiv0');
	     				
	     			}
	    		 }).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	//new beneficiary
	    	$scope.doopmeNewBeneficiary = function(details){
	    		details.remitterid=$scope.remiid;
	    		$scope.loader = true;
	    		console.log(details);
	    		$http.post('doopmeNewBeneficiary', details).success(function(data) {
	    			console.log(data);
	    			$scope.loader = false; 
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				$scope.beneDetails=data.response;
	    				showDiv("div1");
	    				sshowDiv('sdiv5');
	    				
	    				
	     			}else{
	     				$scope.showAlert("danger", data.message);
	     				showDiv('div1');
	     				sshowDiv('sdiv2');
	     				
	     			}
	    		 }).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.doopmeValidateBeneficiary = function(details){
	    		details.remitterid=$scope.remiid;
	    		$scope.loader = true;
	    		console.log(details);
	    		$http.post('doopmeValidateBeneficiary', details).success(function(data) {
	    			console.log(data);
	    			$scope.loader = false; 
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				$scope.beneDetails=data.response;
	    				$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);
	    				
	    				
	     			}else{
	     				$scope.showAlert("danger", data.message);
	     				$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);
	     				
	     			}
	    		 }).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	//verify beneficiary
	    	$scope.doopmeVerifyBeneficiary = function(details){
	    		console.log(details);
	    		$scope.loader = true;
	    		$http.post('doopmeVerifyBeneficiary', details).success(function(data) {
	    			$scope.loader = false;
	    				if(data.status == "1"){
	    					$scope.showAlert("success", data.message);
	    					$scope.inputvar={"mobile":$scope.remimob};
		    				$scope.checkuserDoopme($scope.inputvar);
	    				}else{
	    					$scope.showAlert("danger", data.message);
	    					$scope.inputvar={"mobile":$scope.remimob};
		    				$scope.checkuserDoopme($scope.inputvar);
	    				}
	    			
	    		});
	    	}
	    	
	    	$scope.fetchbank= function(){
	    		$http.post('fetchbank').success(function(data) {
	    			sshowDiv('sdiv4');
	    			$scope.beneIFSCCode=data.ifsc;
	    			console.log($scope.beneIFSCCode);
	    		});
	    	}
	    	//viewdoopmebeneficiary
	    	$scope.viewdoopmebene = function(){
	    		$scope.loader = true;
	    		$http.post('viewdoopmebene').success(function(data) {
	    			console.log(data.beneficiaryresponse.myArrayList);
	    			$scope.loader = false;
	    				if(data.status == "1"){
		    				$scope.benedetails=data.beneficiaryresponse.myArrayList;
		    				showDiv('div1');
		    				sshowDiv('sdiv2');
	    				}else{
	    					$scope.showAlert("danger", data.message);
	    					showDiv('div1');
	    					sshowDiv('sdiv2');
	    				}
	    			
	    		});
	    	}
	    	
	    	$scope.deletedoopmebene = function(details){
	    		$scope.loader = true;
	    		details.remitterid=$scope.remiid;
	    		console.log(details);
	    		$http.post('deletedoopmebene',details).success(function(data) {
	    			
	    			$scope.loader = false;
	    			if(data.status == "1"){
					$scope.showAlert("success", data.message);
	    				/*showDiv('div1');
	    				sshowDiv('sdiv2');*/
					 $('#deleteotp').modal('show'); 
					$scope.popsettlestatus=details;
					/*$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);*/
				}else{
					$scope.showAlert("danger", data.message);
					$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);
				}
			
	    			
	    		});
	    	}
	    	
	    	$scope.VerifyDeleteBane = function(details){
	    		$scope.loader = true;
	    		details.remitterid=$scope.remiid;
	    		console.log(details);
	    		$http.post('VerifyDeleteBane',details).success(function(data) {
	    			
	    			$scope.loader = false;
	    			if(data.status == "1"){
					$scope.showAlert("success", data.message);
	    			
					$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);
				}else{
					$scope.showAlert("danger", data.message);
					$scope.inputvar={"mobile":$scope.remimob};
	    				$scope.checkuserDoopme($scope.inputvar);
				}
			
	    			
	    		});
	    	}
	    	
	    	
	    	$scope.doopmePaymentdetails = function(details){
	    		$scope.bundlepayDetails=details;
	    		sshowDiv('sdiv6');
	    	}
	    	
	    	$scope.doopmeMoneytransfer = function(details){
	    		console.log(details);
	    		$scope.loader = true;
	    		if(details.accountType === undefined || details.accountType === null || details.accountType === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Please select Account Type!");
	    			return false;
	    		}if(details.amount === undefined || details.amount === null || details.amount === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter Transfer Amount!");
	    			return false;
	    		}if(details.transfertype === undefined || details.transfertype === null || details.transfertype === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Please Select Transfer Type!");
	    			return false;
	    		}
	    		$http.post('doopmeMoneytransfer',details).success(function(data) {
	    			$scope.loader = false;
	    				if(data.status == "1"){
		    				$scope.showAlert("success", data.message);
		    				showDiv('div1');
		    				sshowDiv('sdiv2');
	    				}else{
	    					$scope.showAlert("danger", data.message);
	    					showDiv('div1');
	    					sshowDiv('sdiv2');
	    				}
	    			
	    		});
	    	}
	    	
	    	$scope.doopmecancel = function(){
	    		showDiv('div1');
				sshowDiv('sdiv2');
	    	}
	    	
	    	//PAn Api
	    	$scope.agencyrequest = function(details){
	    		$scope.loader = true;
	    		if(details.psaname === undefined || details.psaname === null || details.psaname === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your PS name!");
	    			return false;
	    		}
	    		if(details.location === undefined || details.location === null || details.location === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Location!");
	    			return false;
	    		}
	    		if(details.pincode === undefined || details.pincode === null || details.pincode === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Pincode!");
	    			return false;
	    		}
	    		if(details.district === undefined || details.district === null || details.district === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your District!");
	    			return false;
	    		}
	    		if(details.state === undefined || details.state === null || details.state === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your State!");
	    			return false;
	    		}
	    		if(details.phone1 === undefined || details.phone1 === null || details.phone1 === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Mobile Number!");
	    			return false;
	    		}
	    		if(details.phone2 === undefined || details.phone2 === null || details.phone2 === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Alternate Mobile Number!");
	    			return false;
	    		}
	    		if(details.emailid === undefined || details.emailid === null || details.emailid === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Email ID!");
	    			return false;
	    		}
	    		if(details.pan === undefined || details.pan === null || details.pan === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Pan Number!");
	    			return false;
	    		}
	    		if(details.dob === undefined || details.dob === null || details.dob === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your dob!");
	    			return false;
	    		}
	    		if(details.aadhaar === undefined || details.aadhaar === null || details.aadhaar === "" ){
	    			$scope.loader=false;	
	    			$scope.showAlert("info", "Enter your Adhaar Number!");
	    			return false;
	    		}
	    		$http.post('agencyrequest',details).success(function(data) {
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				
    				}else{
    					$scope.showAlert("danger", data.message);
    				
    				}
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.couponrequest = function(details){
	    		$scope.loader = true;
	    		$http.post('couponrequest',details).success(function(data) {
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				$scope.showAlert("success", data.message);
	    				
    				}else{
    					$scope.showAlert("danger", data.message);
    				
    				}
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.panReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanReport = function(details){			
				$scope.loader = true;
				$http.post('getpanReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						sshowDiv('sdiv19');
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panReports = [];
							$scope.data = [];
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panReports = data.report;
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			$scope.panCouponReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanCouponReport = function(details){			
				$scope.loader = true;
				$http.post('getpanCouponReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panCouponReports = [];
							$scope.data = [];
							sshowDiv('sdiv20');
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panCouponReports = data.report;
							sshowDiv('sdiv20');
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panCouponReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			 $scope.DeleteMyPackageDetail =function(details){
 		     	$scope.loader = true;
 		     	$http.post('DeleteMyPackageDetail',details).success(function(data){
 		     		     $scope.loader = false;
 		     			 if(data.status == '1'){
 		     				$scope.showAlert("success", data.message); 
 		     				
 		     			 }
 		     	}).error(function(data) {
 		             $scope.loader = false;
 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
 		         });
 		     	
 		     }
			 

			 $scope.nsdlNumber =function(details){
				 if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Customer mobile!");
		    			return false;
		    		}else{
		    			$scope.nsdl=details;
		    			sshowDiv('sdiv125');
		    		}
 		     	
 		     	
 		     }

			 $scope.nsdladd =function(details){
	 		     	$scope.loader = true;
	 		     //	console.log(details.fathernamem);
	 		     	if(details.fathernamem === undefined){
	 		     		details.fathernamem="0";
	 		     	}if(details.fathernamef === undefined){
	 		     		details.fathernamef="0";
	 		     	}if(details.fathernamel === undefined){
	 		     		details.fathernamel="0";
	 		     	}if(details.custonamel === undefined){
	 		     		details.custonamel="0";
	 		     	}if(details.custonamef === undefined){
	 		     		details.custonamef="0";
	 		     	}if(details.custonamem === undefined){
	 		     		details.custonamem="0";
	 		     	}
	 		     	console.log(details);
		    		if(details.email === undefined || details.email === null || details.email === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Customer EmailId!");
		    			return false;
		    		}
		    		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Customer mobile!");
		    			return false;
		    		}
		    		if(details.dob === undefined || details.dob === null || details.dob === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Date Of Birth!");
		    			return false;
		    		}
		    		
		    		if(details.add1 === undefined || details.add1 === null || details.add1 === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Address!");
		    			return false;
		    		}
		    		/*if(details.add2 === undefined || details.add2 === null || details.add2 === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Address!");
		    			return false;
		    		}*/
		    		if(details.state === undefined || details.state === null || details.state === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter State!");
		    			return false;
		    		}
		    		if(details.pincode === undefined || details.pincode === null || details.pincode === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter PinCode!");
		    			return false;
		    		}
		    		if(details.idproof === undefined || details.idproof === null || details.idproof === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Select ID Types!");
		    			return false;
		    		}
		    		if(details.idno === undefined || details.idno === null || details.idno === "" ){
		    			$scope.loader=false;	
		    			$scope.showAlert("info", "Enter Id No!");
		    			return false;
		    		}
		    		
	 		     	$http.post('nsdlPanadd',details).success(function(data){
	 		     		console.log(data);
	 		     		     $scope.loader = false;
	 		     			 if(data.status == '1'){
	 		     				$scope.showAlert("success", data.message);
	 		     				showDiv('div37');
	 		     				$scope.nsdl=data.nlist[0];
	 		     				/*setTimeout(function(){
	 			    				 if(data.nextPage != undefined){
	 			    					 $window.location.href = data.nextPage;
	 			    				 }
	 			    			 },1000);*/
	 		     			 }else{
	 	    					$scope.showAlert("danger", data.message);
	 	    				}
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
 
			 $scope.getnsdlReport =function(details){
	 		     	$scope.loader = true;
	 		     	$http.post('getnsdlReport',details).success(function(data){
	 		     		     $scope.loader = false;
	 		     		   if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.fetchnsdlpan =function(){
	 		     	$scope.loader = true;
	 		     	$http.post('fetchnsdlpan').success(function(data){
	 		     		     $scope.loader = false;
	 		     		     console.log(data);
	 		     			if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.getNSDLDetails = function(details){
				 console.log(details);
				 $scope.nsdl=details;
				 showDiv('div37');
				 
			 }
			 $scope.getNSDLASKDetails = function(details){
				 console.log(details);
				 $http.post("getNSDLASKDetails",details).success(function(data){
					 console.log(data);
					 $scope.filename=data.acknm;
					 var base64String = $scope.Uint8ToBase64(data.list.bytesackno);
					// $scope.documentdetail.documentImage="data:"+data.imagetype+";base64," + base64String;
						var byteCharactersImage = atob(base64String);
						var byteNumbersImage = new Array(byteCharactersImage.length);
						for (var j = 0; j < byteCharactersImage.length; j++) {
							byteNumbersImage[j] = byteCharactersImage.charCodeAt(j);
						}
						var byteArrayImage = new Uint8Array(byteNumbersImage);
						  var fileImage = new Blob([ byteArrayImage ], {
			                    type : data.list.acktype
			                });
			                var fileURLImage = URL.createObjectURL(fileImage);
			                $scope.fileurlImage = fileURLImage;
			              
				 }).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
				 $scope.nsdl=details;
				// showDiv('div37');
				 
			 }
			 
			 $scope.nsdlEdit =function(details){
	 		     	$scope.loader = true;
	 		     	var CustomerImage = $scope.CustomerImage;
	 		     	var CustomerSignature = $scope.CustomerSignature;
	 		     	var CustomerFormFront = $scope.CustomerFormFront;
	 		     	var CustomerFormBack = $scope.CustomerFormBack;
	 		     	var ProofOfIdentity = $scope.ProofOfIdentity;
	 		     	var fd = new FormData();
	 		     	fd.append('CustomerImage', CustomerImage);
	 		     	fd.append('CustomerSignature', CustomerSignature);
	 		     	fd.append('CustomerFormFront', CustomerFormFront);
	 		     	fd.append('CustomerFormBack', CustomerFormBack);
	 		     	fd.append('ProofOfIdentity', ProofOfIdentity);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("nsdlEdit", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.showAlert("success", data.message);
	 					}else{
	 						$scope.showAlert("danger", data.message);
	 					}
	 					setTimeout(function(){
	 						 if(data.nextPage != undefined){
	 							 $window.location.href = data.nextPage;
	 						 }
	 					 },1000);
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.updateimage =function(details){
	 		     	$scope.loader = true;
	 		     	var CustomerImage = $scope.CustomerImage;
	 		     	var fd = new FormData();
	 		     	fd.append('CustomerImage', CustomerImage);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("updateimage", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.imagemsg=data.message;
	 						$scope.imageclr="green";
	 					}else{
	 						$scope.imagemsg=data.message;
	 						$scope.imageclr="red";
	 					}
	 					
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.updatesignature =function(details){
	 		     	$scope.loader = true;
	 		     	var CustomerSignature = $scope.CustomerSignature;
	 		     	var fd = new FormData();
	 		     	fd.append('CustomerSignature', CustomerSignature);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("updatesignature", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.Signaturemsg=data.message;
	 						$scope.Signatureclr="green";
	 					}else{
	 						$scope.Signaturemsg=data.message;
	 						$scope.Signatureclr="red";
	 					}
	 					
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.updateformfront =function(details){
	 		     	$scope.loader = true;
	 		     	var CustomerFormFront = $scope.CustomerFormFront;
	 		     	var fd = new FormData();
	 		     	fd.append('CustomerFormFront', CustomerFormFront);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("updateformfront", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.FormFrontmsg=data.message;
	 						$scope.FormFrontclr="green";
	 					}else{
	 						$scope.FormFrontmsg=data.message;
	 						$scope.FormFrontclr="red";
	 					}
	 					
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.updateformback =function(details){
	 		     	$scope.loader = true;
	 		     	var CustomerFormBack = $scope.CustomerFormBack;
	 		     	var fd = new FormData();
	 		     	fd.append('CustomerFormBack', CustomerFormBack);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("updateformback", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.FormBackmsg=data.message;
	 						$scope.FormBackclr="green";
	 					}else{
	 						$scope.FormBackmsg=data.message;
	 						$scope.FormBackclr="red";
	 					}
	 					
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.updateidproof =function(details){
	 		     	$scope.loader = true;
	 		     	var ProofOfIdentity = $scope.ProofOfIdentity;
	 		     	var fd = new FormData();
	 		     	fd.append('ProofOfIdentity', ProofOfIdentity);
	 		     	fd.append('addnsdlEdit',angular.toJson(details,true));	
	 		     	$http.post("updateidproof", fd, {
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }
	 				}).success(function(data) {
	 					$scope.loader=false;			
	 					if(data.status == "1"){
	 						$scope.Identitymsg=data.message;
	 						$scope.Identityclr="green";
	 					}else{
	 						$scope.Identitymsg=data.message;
	 						$scope.Identityclr="red";
	 					}
	 					
	 				}).error(function(data) {
	 					$scope.loader=false;
	 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 				});
	 			}
			 
			 $scope.editnsdlpandt =function(details){
	 		     	$scope.loader = true;
	 		     	$http.post('editnsdlpandt',details).success(function(data){
	 		     		     $scope.loader = false;
	 		     		   if(data.status == "1"){
		 						$scope.showAlert("success", data.message);
		 						$scope.fetchnsdlpan();
		 						showDiv('div36');
		 					}else{
		 						$scope.showAlert("danger", data.message);
		 					}
	 		               
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 
			 $scope.getapplication =function(details,divName){
	 		     	$scope.loader = true;
	 		   	var divId = $parse(divName);
	    		
	 		     	$http.post('getapplication',details).success(function(data){
	 		     		     $scope.loader = false;
	 		     		     console.log(data);
	 		     		   divId.assign($scope, $sce.trustAsHtml(data.message));
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		            divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'>" +
								"<div class='span8'>" +
								"<div class='control-group'>" +
								"<label class='control-label'>Name: </label>" +
								"<div class='controls'>" +
								"<div class='input-prepend'>" +
								"<h5 style='color:red;'>Error! No Data Found.</h5>" +
								"</div>" +
								"</div>" +
								"</div>" +
								"</div>" +
								"</div>"));
	 		         });
	 		     	
	 		     }
			 
			 $scope.fetchaepsbankdt = function(){
					$scope.loader=true;
					$http.post('fetchaepsbankdt').success(function(data) {
						console.log(data);
						$scope.loader=false;
						if(data.status == "1"){
							$scope.bankdt = data.list;
							
						} else{
							$scope.showAlert("danger", data.message);
						}
						/*
						 * setTimeout(function(){
						 * if(data.nextPage != undefined){
						 * $window.location.href =
						 * data.nextPage; } },1000);
						 */
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				}
			 
			 
			 //--------------------
			 $scope.selecttransaction = function(details){
				 if(details==='BALANCEINFO'){
					 document.getElementById("transamnt").disabled = true; 
				 }else if(details==='WITHDRAWAL'){
					 document.getElementById("transamnt").disabled = false;  
				 }
			 }
			 
			 
			 $scope.aepstransaction = function(details){
				    console.log(details);
					 if(details === null || details === undefined || details === ""){
				  			$scope.loader=false;
				  			$scope.showAlert("danger","Please Enter Mobile");
				  			return false;
				  		}
					console.log(details);
					var exp = 'PAYEL';
					var format = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
					var format2 = /[0123456789]/;
					var format3 = /((^[0-9]+[a-z]+)|(^[a-z]+[0-9]+))+[0-9a-z]+$/i;
					console.log(format3.test(details.mobile));
					/*console.log(format.test(exp));
					console.log(format.test(details.mobile));*/
					if(!format2.test(details.mobile)){
						$scope.loader=false;
						$scope.showAlert("danger", "chracters present in Mobile Number");
						return false;
					
					}
					
					if(format3.test(details.mobile)){
						$scope.loader=false;
						$scope.showAlert("danger", "chracters present in Mobile Number");
						return false;
					
					}
					if(format.test(details.mobile)){
						$scope.loader=false;
						$scope.showAlert("danger", "Special chracters present in Mobile Number");
						return false;
					
					}
					if(details.mobile.length>10){
						$scope.loader=false;
						$scope.showAlert("danger", "Mobile number greater than 10 digits");
						return false;
					}
					if(details.mobile.length<10){
						$scope.loader=false;
						$scope.showAlert("danger", "Mobile number smaller than 10 digits");
						return false;
					}
			 		$scope.loader=true;
			 	$http.post('aepstransaction',details).success(function(data) {
			 			console.log(data);
			 			$scope.loader=false;
			 			if(data.status=="1"){
			 				/*setTimeout(function(){
			    				 if(data.nextPage != undefined){*/
			    					 $window.location.href = data.nextPage;
			    				/* }
			    			 },1000);*/
			 			}else{
			 				$scope.showAlert("danger", data.message);
			 			}
			 		
			 		}).error(function(data){
			 			$scope.loader=false;
			 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
			 		});
			 	}
			 
			 
				$scope.getaepslogreport = function(details){
					console.log(details);
					$http.post('getaepslogreport',details).success(function(data){
						console.log(data);
						$scope.loader=false;
						if(data.status == '1'){
							$scope.aepslogreport = data.aepslogreport;
						}else{
							$scope.showAlert("danger", data.message);
							setTimeout(function(){
								 if(data.nextPage != undefined){
									 $window.location.href = data.nextPage;
								 }
							 },1000)
						}
						
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
					
			}
				
				$scope.aepsstatuscheck = function(details){
					console.log(details);
					var id = details.id;
					details.id = id.toString();
					console.log(details);
					$scope.loader=true;
					$http.post('aepsstatuscheck',details).success(function(data){
						console.log(data);
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("danger", data.message);
						}else{
							$scope.showAlert("danger", data.message);
							
						}
					
						
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
					
			}
				
				
				//---------------------------------------FLIGHT-MARKUP----------------------------------------------------
				$scope.SaveMarkUpData = function(details){
				  	 console.log(details);
				  	 $scope.loader = true;
				  	 $http.post('saveMarkUpData',details).success(function(data){
				  		 $scope.loader = false;
				  		 $scope.showAlert("success", data.message); 
				  		 
				  	 }).error(function(data){
				  		 $scope.loader=false;
				  		 $scope.showAlert("danger", "Technical Error. Please try after sometime");
				  	 });
				  	 
				   };
				   
				   $scope.showAllDomesticMarkup = function(){
				  	 $scope.loader = true;
				  	 $http.post('showAllDomesticMarkup').success(function(data){
				  		 if(data.message==null){
				  			 $scope.loader = false;
				  			 sshowDiv('sdiv601');
				  			 console.log(data);
				  			$scope.DomesticMarkuplist = data.DomesticMarkup;
				  		 }else{
				  			 $scope.loader = false;
				  			 $scope.showAlert("danger", data.message);  
				  		 }
				  	 }).error(function(data){
				  		    $scope.loader=false;
				   			$scope.showAlert("danger", "Technical Error. Please try after sometime"); 
				  	 });
				  	 
				   };
				   
				   

				 	$scope.iciciaepsReport = {};
					$scope.iciciaepsReport.startDate = $scope.date;
					$scope.iciciaepsReport.endDate = $scope.date;
				 $scope.getICICIBankAEPSReport = function(details){
				 		$scope.loader=true;
				 		$http.post('getICICIBankAEPSReport',details).success(function(data) {
				 			console.log(data);
				 			$scope.loader=false;
				 			if(data.status == "1"){
				 				$scope.fingeraepsReport = data.fingeraepsReport;
				 			} else{
				 				$scope.showAlert("danger", data.message);
				 			}
				 			/*setTimeout(function(){
				 				 if(data.nextPage != undefined){
				 					 $window.location.href = data.nextPage;
				 				 }
				 			 },1000);*/
				 		}).error(function(data){
				 			$scope.loader=false;
				 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
				 		});
				 	}
				   
				   $scope.insurancegiblBillPaymentRegi = function(details){
						$scope.loader = true;	
						if(details.firstname === undefined || details.firstname === null || details.firstname == ""){
							$scope.loader=false;
							$scope.showAlert("info", "Enter First Name");
							return false;
						}
						if(details.lastName === undefined || details.lastName === null || details.lastName == ""){
							$scope.loader=false;
							$scope.showAlert("info", "Enter Last Name");
							return false;
						}
						
						
						
						$http.post("insurancegiblBillPaymentRegi",details).success(function(data){				
			                if (data.status == "1") {
			                	$scope.showAlert("success", data.message);
			                } else {
			                    $scope.showAlert("danger", data.message);
			                }
			                setTimeout(function() {
			                	if (data.nextPage != undefined) {
			                        $window.location.href = data.nextPage;
			                    }
			                }, 1000);
			                $scope.loader = false;
						}).error(function(data){
							$scope.loader=false;
							$scope.showAlert("danger", "Technical Error. Please try after sometime");
						});
						
					};
					
					
					 $scope.insurancegiblBillPayment = function(details){
						
							$http.post("insurancegiblBillPayment",details).success(function(data){				
				                if (data.status == "1") {
				                	//$window.location.href = data.url;
				                	$window.open(data.url,'_blank');
				                } else {
				                    $scope.showAlert("danger", data.message);
				                }
				               
				                $scope.loader = false;
							}).error(function(data){
								$scope.loader=false;
								$scope.showAlert("danger", "Technical Error. Please try after sometime");
							});
							
						};
	 
			 
	 		     
    }]);





function showDiv(divId) {
	var div = "#" + divId;
	$('div[id^=div]').hide();
	$(div).slideToggle(600).show();
}

function sshowDiv(divId) {
	var div = "#" + divId;
	$('div[id^=sdiv]').hide();
	$(div).slideToggle(600).show();
}