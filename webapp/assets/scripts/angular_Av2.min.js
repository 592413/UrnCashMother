"use strict";

var app = angular.module('app',['ngSanitize','ngCookies','angularUtils.directives.dirPagination'])
//var app = angular.module('app',['ngSanitize','ngCookies'])
.filter('startFrom', function() {
    return function(input, start) {
    	 if (!input || !input.length) { return; }
        start = +start; //parse to int
        return input.slice(start);
    }
})
.config(['$compileProvider', function ($compileProvider) {
	
	//$compileProvider.aHrefSanitizationWhitelist(/^\s*(spotify|http|itms):/);
	// $compileProvider.imgSrcSanitizationWhitelist(/^\s*(http?|ftp|mailto|chrome-extension):/);
   // $compileProvider.aHrefSanitizationWhitelist(/^\s*(http?|ftp|mailto|chrome-extension):/);
    $compileProvider.aHrefSanitizationWhitelist(/^\s*(http?|ftp|mailto|chrome-extension):/);
  //  $compileProvider.aHrefSanitizationWhitelist(/^\s*(|blob|):/);
}])

.directive("alertMessage",function($compile) {
	return {
		restrict : "E",
		scope : {
			alert : "="
		},
		link : function(scope, element) {
			scope.$watch('alert', function() {
				updateAlert();
			});
			scope.close = function() {
				scope.alert = null;
			}
			function updateAlert() {
				var html = "";
				if (scope.alert) {
					var icon = null;
					switch (scope.alert.type) {
					case 'success': {
						icon = 'fa fa-check-circle';
					}
						break;
					case 'warning': {
						icon = 'fa fa-exclamation';
					}
						break;
					case 'info': {
						icon = 'fa fa-info';
					}
						break;
					case 'danger': {
						icon = 'fa fa-times';
					}
						break;
					}
					html = "<div class='loader'><div class='pre-div' style='background-color: rgba(255, 255, 255, 0.6);'><div class='col-md-12 floatMessage'><div class='alert alert-"+ scope.alert.type + "' role='alert'>";
					if (scope.alert.closable) {
						html += "<button type='button' class='close' data-dismiss='alert' ng-click='close()' aria-label='Close'><span aria-hidden='true'>&times;</span></button>";
					}
					if (icon) {
						html +="<span><b>Message</b><hr></span>";
						html += "<span style='padding-right: 5px;' i class='"+icon+"' aria-hidden='true'></span>";
					}
					html += scope.alert.text;
					html += "</div></div></div></div>";
				}
				var newElement = angular.element(html);
				var compiledElement = $compile(newElement)(scope);
				element.html(compiledElement);
				if (scope.alert && scope.alert.delay > 0) {
					setTimeout(function() {
						scope.alert = null;
						scope.$apply();
						}, scope.alert.delay * 1000);
				}
			}
		}
	}
})
.directive('fileModel', ['$parse', function ($parse) {
	return {
		restrict: 'A',
		link: function(scope, element, attrs) {
			var model = $parse(attrs.fileModel);
			var modelSetter = model.assign;
			element.bind('change', function(){
				scope.$apply(function(){
					modelSetter(scope, element[0].files[0]);
				});
			});
		}
	};
}])
.directive('compileTemplate', function($compile, $parse){
    return {
        link: function(scope, element, attr){
            var parsed = $parse(attr.ngBindHtml);
            function getStringValue() {
                return (parsed(scope) || '').toString();
            }

            // Recompile if the template changes
            scope.$watch(getStringValue, function() {
                $compile(element, null, -9999)(scope);  // The -9999 makes it skip directives so that we do not recompile ourselves
            });
        }
    }
})
.filter('sumOfValue', function() {
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;

		angular.forEach(data, function(v, k) {
			sum = sum + parseInt(v[key]);
		});
		return sum;
	}
})
.filter('totalSuccess', function() {
	var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		//alert(data);
		angular.forEach(data, function(v, k) {
			if(v[status] == 'SUCCESS') {
				//alert(v[status]);
				//alert(v[key]);
				sum = sum + parseInt(v[key]);
			}
		});
		return sum;
	}
})
.filter('totalgross', function() {
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		//alert(data);
		angular.forEach(data, function(v, k) {
			
				sum = sum + v[key];
			
		});
		return sum;
	}
})
.filter('totalCommission', function() {
	var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var sum = 0;
		
		angular.forEach(data, function(v, k) {
		//	if(v[status] == 'SUCCESS') {
				//alert(v[status]);
			//	alert(v[key]);
				sum = sum + v[key];
				//alert(sum);
			//}
		});
		return sum;
	}
})

.filter('reportOID', function() {
	//var status = 'status';
	return function(data, key) {		
		if (angular.isUndefined(data) || angular.isUndefined(key))
			return 0;
		var oid =v[key];
		
		return oid;
	}
})

.controller('appController', ["$scope", "$http", "$window","$parse","$sce", "$cookieStore", "$filter",function($scope, $http, $window,$parse,$sce, $cookieStore, $filter) {
	$scope.date = new Date();
	$scope.date =   $filter('date')($scope.date, 'yyyy-MM-dd');	
	$scope.currentPage = 0;
    $scope.pageSize = 10;
    $scope.rowlimit = 10;
    $scope.data = [];
    $scope.numberOfPages=function(){    	
        return Math.ceil($scope.data.length/$scope.pageSize);                
    }
	$scope.showAlert = function(alertType, alertText) {		
		$scope.alertMessage = {
			type : alertType,
			text : alertText,
			closable : true,
			delay : 5
		};
	};
	
	$scope.state = ['Andaman and Nicobar','Andhra Pradesh','Arunachal Pradesh','Assam','Bihar','Chandigarh','Chhattisgarh','Daman and Diu', 'Delhi','Goa','Gujarat',
		'Haryana','Himachal Pradesh','Jammu And Kashmir','Jharkhand','Karnataka','Kerala','Lakshadweep','Madhya Pradesh','Maharashtra','Manipur','Meghalaya','Mizoram',
		'Nagaland','Orissa','Pondicherry','Punjab','Rajasthan','Sikkim','Tamilnadu','Tripura','Uttarakhand','Uttar Pradesh','West Bengal'];
	$scope.userType = [{type: 2,role: "WHITE LABLE"},{type: 3,role: "SUPER DISTRIBUTOR"},{type: 4,role: "DISTRIBUTOR"},{type: 5,role: "RETAILER"}, {type: 100,role: "API USER"}];	
	$scope.userDetails = {};
	$scope.changePass = {};
	$scope.searchUser = {};
	$scope.colorManage = {};
	$scope.packageDetails = {};
	$scope.package = {};
//	$scope.popremark= {};
			
	$scope.addUserDetails = {"name":"","firmName":"","email":"", "mobile":"", "address": "", "pinCode":"", "state":"","city": "", "userType":"",} 
	$http.post('getDashBoardDetails').success(function(data) {		
		console.log(data);
		if (data.status == '1') {
			$scope.userDetails = data.userDetails;	
			$scope.News = data.news;
			$scope.totalData = data.totalData;
			$scope.dasboardReport = data.rechargeReport;
			
			
			if(data.operator != undefined || data.operator != null){
				$scope.operator = data.operator;
			}			
			if(data.api != undefined || data.api != null){
				$scope.api = data.api;
			}
			
			if(data.notification != undefined || data.notification != null){
				$scope.notification = data.notification;
			}
			$scope.reseller = data.reseller;
			$scope.colorManage.theme = data.reseller.theme;
			var base64String = $scope.Uint8ToBase64($scope.reseller.image);
			//document.getElementById("logo").src = "data:image/png;base64," + base64String;
			//document.getElementById("logo1").src = "data:image/png;base64," + base64String;
			//document.getElementById("logo2").src = "data:image/png;base64," + base64String;
			//document.getElementById("logo3").src = "data:image/png;base64," + base64String;
		} else {
			$scope.showAlert("danger", "Invalid Login details!");
		}		
	});
	$scope.Uint8ToBase64 = function(ab){
		var dView = new Uint8Array(ab);   //Get a byte view    
	    var arr = Array.prototype.slice.call(dView); //Create a normal array   
	    var arr1 = arr.map(function(item){        
	      return String.fromCharCode(item);    //Convert
	    });

	    return window.btoa(arr1.join('')); 
	}
	$scope.getaepslogreport = function(details){
		console.log(details);
		$http.post('getaepslogreport',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.aepslogreport = data.aepslogreport;
			}else{
				$scope.showAlert("danger", data.message);
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000)
			}
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}
	
	$scope.p2aimpsReports = [];
	$scope.p2aReport = {};
	$scope.p2aReport.startDate = $scope.date;
	$scope.p2aReport.endDate = $scope.date;
	$scope.getp2aReport = function(details){			
		$scope.loader = true;	
		$http.post('getp2aReport',details).success(function(data){
	console.log(data);
	$scope.loader = false;
	if(data.status == "1"){				
	if(data.report === undefined || data.report.length <= 0){
		$scope.viewP2AReportsPagination = false;
		$scope.p2aimpsReports = [];
		$scope.data = [];
	}else{
		$scope.data = [];
		$scope.viewP2AReportsPagination = true;
		$scope.p2aimpsReports = data.report;
		$scope.currentPage = 0;				   
		for (var i=0; i<$scope.p2aimpsReports.length; i++) {
	        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewP2AReportsPagination = false;
				$scope.p2aimpsReports = [];
				$scope.data = [];
			}
		});
	}
	
	$scope.addmicroatmusernew = function(details){
		console.log(details);
		$scope.loader=true;
		//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
		var pattern=/^[a-z]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
		$scope.loader=true;
		if(details.microuser === undefined || details.microuser === null || details.microuser === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your microuser!");
			return false;
		}
		if(details.micropassword === undefined || details.micropassword === null || details.micropassword === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your micropassword!");
			return false;
		}
		/*if(details.mid === undefined || details.mid === null || details.mid === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your mid!");
			return false;
		}*/
	$http.post('addmicroatmusernew',details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	$scope.p2aimpsReports = [];
	$scope.p2aReport = {};
	
	$scope.p2aReport.startDate = $scope.date;
	$scope.p2aReport.endDate = $scope.date;
	$scope.getMicroATMReport = function(details){			
		$scope.loader = true;	
		$http.post('getMicroATMReport',details).success(function(data){
	console.log(data);
	$scope.loader = false;
	if(data.status == "1"){				
	if(data.microReport === undefined || data.microReport.length <= 0){
		$scope.viewmicroatmReportsPagination = false;
		$scope.microatmReports = [];
		$scope.data = [];
	}else{
		$scope.data = [];
		$scope.viewmicroatmReportsPagination = true;
		$scope.microatmReports= data.microReport;
		$scope.currentPage = 0;				   
		for (var i=0; i<$scope.microatmReports.length; i++) {
	        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewmicroatmReportsPagination = false;
				$scope.microatmReports = [];
				$scope.data = [];
			}
		});
	}
	
	
	$scope.aepsstatuscheck = function(details){
		console.log(details);
		var id = details.id;
		details.id = id.toString();
		console.log(details);
		$scope.loader=true;
		$http.post('aepsstatuscheck',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("danger", data.message);
			}else{
				$scope.showAlert("danger", data.message);
				
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}
	
	$scope.getAEPSViewUser = function(){
 		$scope.loader=true;
 		$http.post('getAEPSViewUser').success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				$scope.aepsuser = data.aepslist;
 			} else{
 				$scope.showAlert("danger", data.message);
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
	
	$scope.getP2AViewUser = function(){
 		$scope.loader=true;
 		$http.post('getP2AViewUser').success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				$scope.p2auserlist = data.p2auserlist;
 			} else{
 				$scope.showAlert("danger", data.message);
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
	$scope.statuschange =function(details,newstatus){
		console.log(details);
	    $scope.loader=true;
	    details.status = newstatus;
		$http.post('statuschange').success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				
 			} else{
 				
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	
			
	}
	$scope.settlestatusmodal = function(details,status){
		
	    console.log(details);
	    $scope.loader=true;
	    details.newstatus = status;
		$scope.loader=false;
		 $('#rblSetStatus').modal('show'); 
		$scope.popsettlestatus=details;
		 console.log($scope.popsettlestatus);
	
	}
	
	$scope.aepsSettleToBank = function(details){
		console.log(details);
		$http.post('aepsSettleToBank',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
}

	$scope.editProfile = function(details){
		$scope.loader=true;
		$http.post('editProfile',details).success(function(data) {
			$scope.loader=false;
			if (data.status == '1') {
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	} 
	
	$scope.getRBLSETTLEMENTReport = function(details){
 		$scope.loader=true;
 		$http.post('getRBLSETTLEMENTReport',details).success(function(data) {
 			console.log(data);
 			$scope.loader=false;
 			if(data.status == "1"){
 				if(data.settlementreport === undefined || data.settlementreport.length <= 0){
					$scope.viewSettlementReportsPagination = false;
					$scope.settlementreport = [];
					$scope.data = [];
				}else{
				$scope.data = [];
				$scope.viewSettlementReportsPagination = true;	
 				$scope.TotalSettleBalance = data.totalBalance;
 				$scope.settlementreport = data.settlementreport;
 				$scope.settletype = data.type;
 				console.log($scope.settletype);
 				$scope.currentPage = 0;				   
				for (var i=0; i<$scope.settlementreport.length; i++) {
			        $scope.data.push("Item "+i);
			    }	
				}
 			} else{
 				$scope.showAlert("danger", data.message);
 			}
 			/*setTimeout(function(){
 				 if(data.nextPage != undefined){
 					 $window.location.href = data.nextPage;
 				 }
 			 },1000);*/
 		}).error(function(data){
 			$scope.loader=false;
 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
 		});
 	}
	
	$scope.aepsUseradd = function(details){
		$http.post('aepsUseradd',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	}
	
	$scope.addRailUser = function(details){
		$http.post('addRailUser',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	}
	
	$scope.addECommerceUser = function(details){
		$http.post('addECommerceUser',details).success(function(data){
			console.log(data);
			$scope.loader=false;
			if(data.status == '1'){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	}
	
	$scope.changePassWord = function(){
		$scope.loader=true;
		$scope.changePass.userId = $scope.userDetails.userId;
		if($scope.changePass.oldPassword == undefined || $scope.changePass.oldPassword === null ||
				$scope.changePass.oldPassword === ""){
			$scope.loader=false;
			$scope.showAlert("danger","Please Enter Old Password!");
			return false;
		}
		if($scope.changePass.newPassword == undefined || $scope.changePass.newPassword === null ||
				$scope.changePass.newPassword === ""){
			$scope.loader=false;
			$scope.showAlert("danger","Please Enter New Password!");
			return false;
		}
		
		if($scope.changePass.cnfrmPassword == undefined || $scope.changePass.cnfrmPassword === null ||
				$scope.changePass.cnfrmPassword === ""){
			$scope.loader=false;
			$scope.showAlert("danger","Please Enter Confirm Password!");
			return false;
		}
		
		if($scope.changePass.newPassword != $scope.changePass.cnfrmPassword) {
			$scope.loader=false;
			$scope.showAlert("danger","Confirm password and New Password must be same!");
			return false;
		}
		$http.post('changePassWord',$scope.changePass).success(function(data) {
			$scope.loader=false;
			if (data.status == '1') {
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getNamebyUserId = function(userId, divName){
		if(userId == ""){
			$scope.addUserDetails.status = "0";
			return false;
		}
		$scope.inputJson = {"userId": userId};		
		$http.post('getNamebyUserId',$scope.inputJson).success(function(data) {
			if(data.status === "2"){
				$scope.showAlert("danger", data.message);
				return false;
			}
			$scope.addUserDetails.uplineName = data.name;
			$scope.addUserDetails.status = data.status;
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	 $scope.getRBLAEPSReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getRBLAEPSReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.rblReport = data.rblReport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.getYesBankAEPSReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getYesBankAEPSReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.rblReport = data.rblReport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 	$scope.iciciaepsReport = {};
		$scope.iciciaepsReport.startDate = $scope.date;
		$scope.iciciaepsReport.endDate = $scope.date;
	 $scope.getICICIBankAEPSReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getICICIBankAEPSReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.fingeraepsReport = data.fingeraepsReport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.getAEPSViewUser = function(){
	 		$scope.loader=true;
	 		$http.post('getAEPSViewUser').success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.aepsuser = data.aepslist;
	 				$scope.data = [];
					$scope.viewSaepsuserPagination = true;	
	 				$scope.currentPage = 0;				   
					for (var i=0; i<$scope.aepsuser.length; i++) {
				        $scope.data.push("Item "+i);
				    }	
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 
	 $scope.getRBLSETTLEMENTWALLETReport = function(details){
	 		$scope.loader=true;
	 		$http.post('getRBLSETTLEMENTWALLETReport',details).success(function(data) {
	 			console.log(data);
	 			$scope.loader=false;
	 			if(data.status == "1"){
	 				$scope.settlementreport = data.settlementreport;
	 			} else{
	 				$scope.showAlert("danger", data.message);
	 			}
	 			/*setTimeout(function(){
	 				 if(data.nextPage != undefined){
	 					 $window.location.href = data.nextPage;
	 				 }
	 			 },1000);*/
	 		}).error(function(data){
	 			$scope.loader=false;
	 			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		});
	 	}
	 
	 $scope.getRBLSETTLEMENTReport = function(details){
		$scope.loader=true;
		$http.post('getRBLSETTLEMENTReport',details).success(function(data) {
			console.log(data);
			$scope.loader=false;
			if(data.status == "1"){
				$scope.TotalSettleBalance = data.totalBalance;
				$scope.settlementreport = data.settlementreport;
				$scope.settletype = data.type;
				console.log($scope.settletype);
			} else{
				$scope.showAlert("danger", data.message);
			}
			/*setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);*/
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	 
	
	$scope.addApiParameters=function(details){
		$scope.loader=true;
		var parameterslength;
		var parametervalueslength;
		if(details.apiId === null || details.apiId === undefined || details.apiId === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter apiname");
  			return false;
  		}
		
		if(details.service === null || details.service === undefined || details.service === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter service");
  			return false;
  		}
		
		if(details.apiparameternames === null || details.apiparameternames === undefined || details.apiparameternames === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter Parameter names separated with Comma");
  			return false;
  		}
		if(details.apiparametervalues === null || details.apiparametervalues === undefined || details.apiparametervalues === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter Corresponding Parameter Values separated with Comma");
  			return false;
  		}
		if(details.apiparameternames.includes(",")){
			parameterslength = (details.apiparameternames.match(/,/g) || []).length;
			if(details.apiparametervalues.includes(",")){
				parametervalueslength=(details.apiparametervalues.match(/,/g) || []).length;
			}else{
				parametervalueslength=0;
			}
			if(parameterslength!=parametervalueslength){
				$scope.loader=false;
				$scope.showAlert("danger", "Parameter Names and Parameter values length are not same");
				return false;
			}
		}else{
			if(details.apiparametervalues.includes(",")){
				parametervalueslength=(details.apiparametervalues.match(/,/g) || []).length;
			}else{
				parametervalueslength=0;
			}
			if(parameterslength!=parametervalueslength){
				$scope.loader=false;
				$scope.showAlert("danger", "Parameter Names and Parameter values length are not same");
				return false;
			}
		}
		if(details.number === null || details.number === undefined || details.number === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter number Parameter name");
  			return false;
  		}
		if(details.opcode === null || details.opcode === undefined || details.opcode === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter opcode Parameter name");
  			return false;
  		}
		if(details.amount === null || details.amount === undefined || details.amount === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter amount Parameter name");
  			return false;
  		}
		if(details.request_id === null || details.request_id === undefined || details.request_id === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter request_id Parameter name");
  			return false;
  		}
		$http.post('addApiParameters',details).success(function(data) {
			$scope.loader=false;
			if(data.status === "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger",data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	   $scope.microatmUser = function(details) {
	$scope.loader=true;
	//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
	var pattern=/^[a-z0-9]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
	$scope.loader=true;
	if(details.microuser === undefined || details.microuser === null || details.microuser === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter microuser!");
		return false;
	}
	if(details.micropassword === undefined || details.micropassword === null || details.micropassword === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter micropassword!");
		return false;
	}
	if(details.company === undefined || details.company === null || details.company === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter company!");
		return false;
	}
	if(details.mid === undefined || details.mid === null || details.mid === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter your mid!");
		return false;
	}
	if(details.tid === undefined || details.tid === null || details.tid === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter your tid!");
		return false;
	}
	/*if(details.userId === undefined || details.userId === null || details.userId === "" ){
		$scope.loader=false;	
		$scope.showAlert("info", "Enter your userId!");
		return false;
	}*/
	
	$http.post('microatmUser', details).success(function(data) {
		$scope.loader=false;			
		if(data.status == "1"){
			$scope.showAlert("success", data.message);
		}else{
			$scope.showAlert("danger", data.message);
		}
		setTimeout(function(){
			 if(data.nextPage != undefined){
				 $window.location.href = data.nextPage;
			 }
		 },1000);
	}).error(function(data){
		$scope.loader=false;
		$scope.showAlert("danger", "Technical Error. Please try after sometime");
	});
};
	
	
	$scope.addsmsApi=function(details){

		$scope.loader=true;
		
		/*if(details.smsUsername === null || details.smsUsername === undefined || details.smsUsername === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter smsUsername");
  			return false;
  		}
		
		if(details.smsPassword === null || details.smsPassword === undefined || details.smsPassword === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter smsPassword");
  			return false;
  		}
		
		if(details.senderId === null || details.senderId === undefined || details.senderId === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter senderId");
  			return false;
  		}
		
		if(details.company === null || details.company === undefined || details.company === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter company");
  			return false;
  		}
		*/
		$http.post('addsmsApi',details).success(function(data) {
			if(data.status === "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger",data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	};
	
	
	
	$scope.addApi=function(details){

		$scope.loader=true;
		
		if(details.apiname === null || details.apiname === undefined || details.apiname === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter apiname");
  			return false;
  		}
		
		if(details.apiurl === null || details.apiurl === undefined || details.apiurl === ""){
  			$scope.loader=false;
  			$scope.showAlert("danger","Enter apiurl");
  			return false;
  		}
		
		$http.post('addApi',details).success(function(data) {
			if(data.status === "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger",data.message);
			}
			 setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000)
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	};
	
	$scope.checkUniqueUser = function(details){
		$scope.inputJson = {"username": details};	
		$http.post('checkUniqueUser',$scope.inputJson).success(function(data) {
			if(data.status == "1"){
				$scope.showAlert("danger", data.message);
				$scope.addUserDetails.email = "";
				$scope.addUserDetails.mobile = "";
			}
			$scope.inputJson = {};
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	$scope._GetUpline = function(value,divName, modelName){		
		var divId = $parse(divName);
		if(value === '2' || value === '100' || value === '3'){
			$scope.addUserDetails.uplineId = $scope.userDetails.userId; 
			return false;
		} else {
			$scope.addUserDetails.uplineId = "";
			var inputJson = {userType: value, modelName: modelName};
			console.log(inputJson);
			$http.post('_GetUpline', inputJson).success(function(data) {
				divId.assign($scope,  $sce.trustAsHtml(data.message));			
			}).error(function(data){
				divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
			});
		}
	};
	$scope.addNewUser = function(details){
		$scope.loader=true;
		//var pattern=/^\w+@[a-zA-Z_]+?\.[a-zA-Z]{2,3}$/;
		var pattern=/^[a-z0-9]+[a-z0-9._]+@[a-z]+\.[a-z.]{2,5}$/;
		$scope.loader=true;
		if(details.name === undefined || details.name === null || details.name === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your name!");
			return false;
		}
		if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Firm Name!");
			return false;
		}
		if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your valid Mobile Number!");
			return false;
		}
		if(details.address === undefined || details.address === null || details.address === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Address!");
			return false;
		}
		if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Pincode!");
			return false;
		}
		if(details.state === undefined || details.state === null || details.state === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your state!");
			return false;
		}
		if(details.city === undefined || details.city === null || details.city === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your city!");
			return false;
		}
		if(details.userType === undefined || details.userType === null || details.userType === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Usertype!");
			return false;
		}
		if(!pattern.test(details.email)){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your valid Email!");
			return false;
		}
		if(details.email === undefined || details.email === null || details.email === "" ){
			$scope.loader=false;	
			$scope.showAlert("info", "Enter your Email!");
			return false;
		}
		$http.post('addUser', details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getUserByUserType = function(details, divName, modelName){	
		$scope.inputJson = {"userType": details, "modelName": modelName};		
		var divId = $parse(divName);	
		if(details == "0" || details === ""){
			divId.assign($scope,  $sce.trustAsHtml(""));
			return false;
		}
		$http.post('getUserByUserType',$scope.inputJson).success(function(data){
			divId.assign($scope,  $sce.trustAsHtml(data.message));			
		}).error(function(data){
			divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
		});
	};
	
	$scope.addBalanceByAdmin = function(details){
		$scope.loader=true;
		  if(details.remarks === undefined || details.remarks === null || details.remarks === "" ){
  			$scope.loader=false;	
  			$scope.showAlert("info", "Enter your remarks!");
  			return false;
  		}
		  
		  
		  if(details.amount === undefined || details.amount === null || details.amount === "" ){
	  			$scope.loader=false;	
	  			$scope.showAlert("info", "Enter Balance!");
	  			return false;
	  		}
		$http.post('addBalance',details).success(function(data){
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}else{
				$scope.showAlert("danger", data.message);
			}
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.filterValue = function($event){
		if(isNaN(String.fromCharCode($event.keyCode))){
			$event.preventDefault();
		}
	};
	
	
	$scope.changeStatus = function(item){	
		$scope.loader=true;
		$http.post('changeStatus',item).success(function(data){

			$scope.loader=false;
		angular.forEach($scope.viewUserDetails, function(value, key) {
		   if(value.userId === item.userId){
			   if(item.status == 0){
				   $scope.viewUserDetails[key].status = 1;
			   } else {
				   $scope.viewUserDetails[key].status = 0;
			   }
		   }
		});
		});
	};
	
	
	$scope.changeP2AStatus = function(item,status){	
		$scope.loader=true;
		item.newstatus=status;
		$http.post('changeP2AStatus',item).success(function(data){

			$scope.loader=false;
			console.log(data);
			if(data.status==1){
			$scope.showAlert("success", data.message);	
			}else{
			$scope.showAlert("danger", data.message);
			}
			$scope.getP2AViewUser();
		/*angular.forEach($scope.p2auserlist, function(value, key) {
		   if(value.userId === item.userId){
			   if(item.status == 0){
				   $scope.p2auserlist[key].status = 1;
			   } else {
				   $scope.p2auserlist[key].status = 0;
			   }
		   }*/
		
		});
	};
	
	
	// REPORT
	$scope.tranReport = {};
	$scope.tranReport.startDate = $scope.date;
	$scope.tranReport.endDate = $scope.date;
	
	$scope.getTransactionReport = function(tranReport){	
		$scope.loader=true;
		$scope.data = [];
		$http.post('getTransactionReport',tranReport).success(function(data){	
			$scope.loader=false;
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewTransactioReportPagination = false;
					$scope.TransactioReport = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewTransactioReportPagination = true;
					$scope.TransactioReport = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.TransactioReport.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				if(data.status === '0'){					
					$scope.data = [];
					$scope.viewTransactioReportPagination = false;
					$scope.TransactioReport = [];
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
		
	};
	
	$scope.getTransactionReportReportExcel = function(data){
		alasql('SELECT * INTO XLSX("TransactionReport.xls",{headers:true}) FROM ?',[data]);		
	};
	$scope.RechargeReports = [];
	$scope.rechargeReport = {};
	$scope.rechargeReport.startDate = $scope.date;
	$scope.rechargeReport.endDate = $scope.date;
	$scope.getRechargeReport = function(details){			
		$scope.loader = true;			
		$http.post('getRechargeReport',details).success(function(data){
			$scope.loader = false;
			if(data.status == "1"){				
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewRechargeReportsPagination = false;
					$scope.RechargeReports = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewRechargeReportsPagination = true;
					$scope.RechargeReports = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.RechargeReports.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewRechargeReportsPagination = false;
				$scope.RechargeReports = [];
				$scope.data = [];
			}
		});
	}
	
	$scope.getRechargeReportExcel = function(data){
		alasql('SELECT * INTO XLSX("RechargeReport.xls",{headers:true}) FROM ?',[data]);		
	};
	
	$scope.getIMPSReportExcel = function(data){
		alasql('SELECT * INTO XLSX("IMPSReport.xls",{headers:true}) FROM ?',[data]);		
	};
	
	$scope.getrblReportExcel = function(data){
		alasql('SELECT * INTO XLSX("aepsReport.xls",{headers:true}) FROM ?',[data]);		
	};
	
	$scope.getp2aimpsReportsExcel = function(data){
		alasql('SELECT * INTO XLSX("p2aimpsReport.xls",{headers:true}) FROM ?',[data]);		
	};
	$scope.getSettlementReportExcel = function(data){
		alasql('SELECT * INTO XLSX("SettlementReport.xls",{headers:true}) FROM ?',[data]);		
	};
	$scope.balReqReport = {};
	$scope.balReqReport.startDate = $scope.date;
	$scope.balReqReport.endDate = $scope.date;
	
	$scope.viewBalReqReport = function(details){	
		
	}
	
	$scope.balRevReport = {};
	$scope.balRevReport.startDate = $scope.date;
	$scope.balRevReport.endDate = $scope.date;
	
	$scope.viewBalRevReport = function(details){	
		$scope.loader=true;		
		$http.post('viewBalRevReport',details).success(function(data) {	
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewBalRevReportPagination = false;
					$scope.balRevTransactioReport = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewBalRevReportPagination = true;
					$scope.balRevTransactioReport = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.balRevTransactioReport.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				if(data.status === '0'){
					setTimeout(function(){
						if(data.nextPage != undefined){
							$window.location.href = data.nextPage;
						 }
					 },1000);
				}
				
			}	
			$scope.loader=false;
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.viewBalRevReportReportExcel = function(data){
		alasql('SELECT * INTO XLSX("RevertBalance.xls",{headers:true}) FROM ?',[data]);		
	};
	
	
	
	
	//-------------------------------
	
	$scope.getMyDiscount = function() {
        $scope.loader = true;
        $http.post('getMyDiscount', $scope.userDetails).success(function(data) {
            $scope.loader = false;
            if (data.status == "1") {
                $scope.myDiscount = data.commissionList;                
            } else {
                $scope.showAlert("danger", data.message);
            }
            setTimeout(function() {
                if (data.nextPage != undefined) {
                    $window.location.href = data.nextPage;
                }
            }, 1000);
        }).error(function(data) {
            $scope.loader = false;
            $scope.showAlert("danger", "Technical Error. Please try after sometime");
        });
    }
	
	$scope.getMyDefaultDiscount = function(){
		$scope.loader=true;		
		var inputJson = {"username": $scope.userDetails.userId};
		$http.post('getMyDefaultDiscount',inputJson).success(function(data) {
			$scope.loader=false;
			console.log(data);
			if(data.status == "1"){				
				$scope.defaultDiscount = data.commissionList;	
				$scope.myCommission = data.myComission;
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.setDefaultDiscount = function(discount){
		$scope.loader=true;
		var inputJson = {"discount": discount};
		$http.post('setDefaultDiscount',discount).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.getIndividualDiscount = function(details){
		$scope.loader=true;
		var inputJson = {"username": details};
		$http.post('getIndividualDiscount',inputJson).success(function(data) {
			console.log(data);
			$scope.loader=false;
			if(data.status == "1"){				
				$scope.individualDiscount = data.commissionList;
				$scope.myCommission = data.myComission
				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.setIndividualDiscount = function(discount){
		$scope.loader=true;
		var inputJson = {"discount": discount};
		$http.post('setIndividualDiscount',discount).success(function(data) {			
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
			$scope.loader=false;
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getDefaultChargeSetting = function(){
		$scope.loader=true;
		var inputJson = {"username": $scope.userDetails.userId};
		$http.post('getDefaultChargeSetting',inputJson).success(function(data) {
			$scope.loader=false;
			if(data.status == "1" && data.chargeList != undefined){					
				$scope.defaultCharge = data.chargeList;				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.setDefaultChargeSetting = function(charge){
		$scope.loader=true;
		var inputJson = {"charge": charge};
		$http.post('setDefaultChargeSetting',charge).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getIndividualCharge = function(details){
		$scope.loader=true;			
		$http.post('getIndividualCharge',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){				
				$scope.individualCharge = data.chargeList;				
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	}
	
	$scope.setIndividualCharge = function(charge){
		$scope.loader=true;
		var inputJson = {"discount": charge};		
		$http.post('setIndividualCharge',charge).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getViewUser = function(details){
		$scope.loader=true;
		$http.post('getViewUser',details).success(function(data) {
			console.log(data);
			$scope.loader=false;			
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewUserPagination = true;
					$scope.viewUserDetails = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.viewUserDetails.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewUserPagination = false;
				$scope.viewUserDetails = [];
				$scope.data = [];
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	
	$scope.getViewInactiveUser = function(details){
		$scope.loader=true;
		$http.post('getViewInactiveUser',details).success(function(data) {
			$scope.loader=false;			
			if(data.status == "1"){
				if(data.report === undefined || data.report.length <= 0){
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}else{
					$scope.data = [];
					$scope.viewUserPagination = true;
					$scope.viewUserDetails = data.report;
					$scope.currentPage = 0;				   
					for (var i=0; i<$scope.viewUserDetails.length; i++) {
				        $scope.data.push("Item "+i);
				    }					
				}
			}else{
				$scope.viewUserPagination = false;
				$scope.viewUserDetails = [];
				$scope.data = [];
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.updateNews = function(details){
		$scope.loader=true;		
		$http.post('updateNews',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.insertBankDetails = function(bankDetails){
		$scope.loader=true;		
		$http.post('insertBankDetails',bankDetails).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.signInByAdmin = function(item){
		$scope.loader=true;		
		$http.post('signInByAdmin',item).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
			setTimeout(function(){
				 if(data.nextPage != undefined){
					 $window.location.href = data.nextPage;
				 }
			 },1000);
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.viewBankDetail = function(){
		$scope.loader=true;		
		$http.post('viewBankDetails').success(function(data) {
			$scope.loader=false;				
			if(data.status == "1"){
				if(data.bankDetails === undefined || data.bankDetails.length <= 0){
					$scope.viewBankDetails = [];					
				}else{				
					$scope.viewBankDetails = data.bankDetails;		
				}
			}else{
				$scope.showAlert("danger", data.message);
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getAddBalanceModal = function(item){		
		$scope.loader=true;	
		if(item != null){
			$scope.userAddBal = {};
			$scope.userAddBal.userId = item.userId;
			$scope.userAddBal.name = item.name;
			$scope.userAddBal.amount = 0;
			$scope.userAddBal.remarks = "";
			$scope.loader=false;	
		} else {
			$scope.loader=false;	
			$scope.showAlert("danger", "Please try after sometime!");
		}
	};
	
	$scope.sendPassword = function(item){
		$scope.loader=true;		
		$http.post('sendPassword',item).success(function(data) {			
			$scope.loader=false;	
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			}else{
				$scope.showAlert("danger", data.message);
			}	
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.deleteUser = function(item){
		$scope.loader=true;	
		$http.post('deleteUser',item).success(function(data) {
			$scope.loader=false;	
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
				angular.forEach($scope.viewUserDetails, function(value, key) {
					if(value.userId === item.userId){						
						$scope.viewUserDetails.splice(key, 1);						
					}
				});
			}else{
				$scope.showAlert("danger", data.message);
			}
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	$scope.getEditBankDetailsModal = function(item){
		$scope.loader=true;	
		$scope.bankDetails1 = item;
		$scope.loader=false;
	};
	
	$scope.updateBankDetails = function(details){		
		$scope.loader=true;	
		$http.post('updateBankDetails',details).success(function(data) {
			$scope.loader=false;
			if(data.status == "1"){
				$scope.showAlert("success", data.message);
			} else{
				$scope.showAlert("danger", data.message);
			}
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	};
	
	 $scope.AdvancedSearchUser = function(details){
		 $scope.loader=true;		
			$http.post('advancedSearchUser', details).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewUserPagination = false;
						$scope.viewUserDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUserPagination = true;
						$scope.viewUserDetails = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUserDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUserPagination = false;
					$scope.viewUserDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
	 };
	 
	 $scope.AdvancedCustomerNo = function(details){
		 $scope.loader=true;
		 $http.post("advancedCustomerNo",details).success(function(data){
			 $scope.loader = false;
				if(data.status == "1"){					
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewRechargeReportsPagination = false;
						$scope.RechargeReports = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewRechargeReportsPagination = true;
						$scope.RechargeReports = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.RechargeReports.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewRechargeReportsPagination = false;
					$scope.RechargeReports = [];
					$scope.data = [];
				}
		 }).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
	 };
	 
	 $scope.deleteBankDetails = function(item){
			$scope.loader=true;	
			$http.post('deleteBankDetails',item).success(function(data) {
				$scope.loader=false;	
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
					angular.forEach($scope.viewBankDetails, function(value, key) {
						if(value.id === item.id){						
							$scope.viewBankDetails.splice(key, 1);						
						   }
						});
				}else{
					$scope.showAlert("danger", data.message);
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		$scope.revertUserBalance = function(details){
			$http.post('revertUserBalance',details).success(function(data){
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.apiSwitching = function(details){
			$scope.loader=true;			
			$http.post('apiSwitching',details).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewComplain = {};
		$scope.viewComplain.startDate = $scope.date;
		$scope.viewComplain.endDate = $scope.date;
		
		$scope.viewlatestComplain = function(details){
			$scope.loader=true;	
			$http.post("viewLatesComplain",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewPendingComplain = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingComplain",details).success(function(data){
				$scope.loader=false;				
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getComplainDetails = function(details){
			$scope.loader=true;	
			$http.post("viewComplain",details).success(function(data){
				$scope.loader=false;				
				if(data.status == "1"){
					if(data.complain === undefined || data.complain.length <= 0){
						$scope.viewComplainPagination = false;
						$scope.viewComplainDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewComplainPagination = true;
						$scope.viewComplainDetails = data.complain;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewComplainDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewComplainPagination = false;
					$scope.viewComplainDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateComplainDetails = function(details){			
			if(details.adminMessage === ""){
				$scope.showAlert("danger", "Enter your message!");
				angular.forEach($scope.viewComplainDetails, function(value, key) {
					if (value.id === details.id) {
						$scope.viewComplainDetails[key].status = "PENDING";		               
	                }
				});
				return false;
			}
			$http.post("updateComplainDetails",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.complain = $scope.notification.complain - 1;
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewComplainDetails, function(value, key) {
						if (value.id === details.id) {
							$scope.viewComplainDetails[key].status = "PENDING";		               
		                }
					});
				}
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.setImpscharge = function(Impscharge){
			$scope.loader=true;
			$http.post('setImpscharge',Impscharge).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}

		$scope.userMappingFunc = function(userMapping,userMappingTo){		
			$scope.loader=true;
			var inputJson = {mapUserType:userMapping.mappuserType, mapUserId:userMapping.userId, mapToUserType : userMappingTo.userType, mapToUserId: userMappingTo.userId};
			$http.post("userMapping",inputJson).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.setUserLockedAmount = function(details){		
			$scope.loader=true;
			if(details.amount === undefined || details.amount === null || details.amount === ""){
				$scope.showAlert("danger", "Enter Amount!");
				$scope.loader=false;
				return false;				
			} 
			$http.post("setUserLockedAmount",details).success(function(data){
				$scope.loader=false;
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getUserDetailsForEdit = function(details){
			$scope.loader=true;
			$http.post("getUserDetailsForEdit",details).success(function(data){
				$scope.loader=false;if(data.status == "1"){	
					$scope.editUserProfile = {};
					$scope.userProfile = {};
					$scope.editUserProfile.status = data.status;
					$scope.userProfile = data.userProfile;
				} else{
					$scope.showAlert("danger", data.message);
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}
				
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.editProfileForUser = function(details){
			$scope.loader=true;
			if(details.password != details.cPassword){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Same Password");
				return false;
			}
			
			if(details.password === undefined||details.password === null ||details.password === ""|| 
					details.cPassword === undefined||details.cPassword === null ||details.cPassword === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Password and Confirm Password");
				return false;
			}
			
			$http.post('editProfileForUser',details).success(function(data) {
				$scope.loader=false;
				if (data.status == '1') {
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				 setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000)
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		} 
		
		$scope.viewBalanceRequest = {};
		$scope.viewBalanceRequest.startDate = $scope.date;
		$scope.viewBalanceRequest.endDate = $scope.date;
		
		$scope.viewPendingBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getBalanceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceRequest",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceRequest === undefined || response.BalanceRequest.length <= 0){
						$scope.viewBalanceRequestPagination = false;
						$scope.viewBalanceRequestDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceRequestPagination = true;
						$scope.viewBalanceRequestDetails = response.BalanceRequest;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceRequestDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceRequestPagination = false;
					$scope.viewBalanceRequestDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateBalanceRequest = function(details, status){
			$scope.loader=true;			
			details.status = status;
			$http.post("updateBalanceRequest",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.balRequest = $scope.notification.balRequest - 1;					
					angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {						
							$scope.viewBalanceRequestDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewBalanceRequestDetails, function(value, key) {
						if (value.requestId === details.requestId) {
							$scope.viewBalanceRequestDetails[key].status = "PENDING";		               
		                }
					});
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewBalanceTransferReport = {};
		$scope.viewBalanceTransferReport.startDate = $scope.date;
		$scope.viewBalanceTransferReport.endDate = $scope.date;
		
		$scope.getBalanceTransferReport = function(details){			
			$scope.loader=true;				
			$http.post("viewBalanceTransferReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.BalanceTransfer === undefined || response.BalanceTransfer.length <= 0){
						$scope.viewBalanceTransferPagination = false;
						$scope.viewBalanceTransferDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewBalanceTransferPagination = true;
						$scope.viewBalanceTransferDetails = response.BalanceTransfer;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewBalanceTransferDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewBalanceTransferPagination = false;
					$scope.viewBalanceTransferDetails = [];
					$scope.data = [];
				}	
			}).error(function(response){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewUtilityRequest = {};
		$scope.viewUtilityRequest.startDate = $scope.date;
		$scope.viewUtilityRequest.endDate = $scope.date;
		
		$scope.viewPendingUtilityRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingUtilityRequest",details).success(function(response){
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.utility === undefined || response.utility.length <= 0){
						$scope.viewUtilityPagination = false;
						$scope.viewUtilityDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUtilityPagination = true;
						$scope.viewUtilityDetails = response.utility;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUtilityDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUtilityPagination = false;
					$scope.viewUtilityDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewUtilityReport = function(details){			
			$scope.loader=true;				
			$http.post("viewUtilityReport",details).success(function(response){				
				$scope.loader=false;					
				if(response.status == "1"){
					if(response.utility === undefined || response.utility.length <= 0){
						$scope.viewUtilityPagination = false;
						$scope.viewUtilityDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewUtilityPagination = true;
						$scope.viewUtilityDetails = response.utility;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewUtilityDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewUtilityPagination = false;
					$scope.viewUtilityDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.updateUtilityReport = function(details, status){
			$scope.loader=true;			
			details.status = status;			
			$http.post("updateUtilityReport",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.utility = $scope.notification.utility - 1;					
					angular.forEach($scope.viewUtilityDetails, function(value, key) {
						if (value.utilityId === details.utilityId) {						
							$scope.viewUtilityDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewUtilityDetails, function(value, key) {
						if (value.utilityId === details.utilityId) {
							$scope.viewUtilityDetails[key].status = "PENDING";		               
		                }
					});
				}
				
				if($scope.viewUtilityDetails.length == 0){
					$scope.viewUtilityPagination = true;
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.viewInsuranceRequest = {};
		$scope.viewInsuranceRequest.startDate = $scope.date;
		$scope.viewInsuranceRequest.endDate = $scope.date;
		
		$scope.viewPendingInsuranceRequest = function(details){			
			$scope.loader=true;				
			$http.post("viewPendingInsuranceRequest",details).success(function(response){	
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.insurance === undefined || response.insurance.length <= 0){
						$scope.viewInsurancePagination = false;
						$scope.viewInsuranceDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewInsurancePagination = true;
						$scope.viewInsuranceDetails = response.insurance;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewInsuranceDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewInsurancePagination = false;
					$scope.viewInsuranceDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		
		$scope.viewInsuranceReport = function(details){			
			$scope.loader=true;				
			$http.post("viewInsuranceReport",details).success(function(response){				
				$scope.loader=false;				
				if(response.status == "1"){
					if(response.insurance === undefined || response.insurance.length <= 0){
						$scope.viewInsurancePagination = false;
						$scope.viewInsuranceDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewInsurancePagination = true;
						$scope.viewInsuranceDetails = response.insurance;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewInsuranceDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewInsurancePagination = false;
					$scope.viewInsuranceDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.updateInsuranceReport = function(details, status){
			$scope.loader=true;			
			details.status = status;			
			$http.post("updateInsuranceReport",details).success(function(data){
				
				if(data.status === "1"){
					$scope.showAlert("success", data.message);
					$scope.notification.insurance = $scope.notification.insurance - 1;					
					angular.forEach($scope.viewInsuranceDetails, function(value, key) {
						if (value.id === details.id) {						
							$scope.viewInsuranceDetails.splice(key, 1);						
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.viewInsuranceDetails, function(value, key) {
						if (value.id === details.id) {
							$scope.viewInsuranceDetails[key].status = "PENDING";		               
		                }
					});
				}
				if($scope.viewInsuranceDetails.length == 0){
					$scope.viewInsurancePagination = true;
				}
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		//========================
		
		$scope.getmodalSuccessRemark=  function(details,status){
			console.log(details);
			$scope.loader=true;	
			details.status = status;
			$scope.popremark = details;
			
			$scope.loader=false;
			
		}		
			
		

		
		
		
		
		$scope.updateRechargeReport = function(details){
			console.log(details);
			$scope.loader=true;			
			var status=details.status;			
			$http.post("updateRechargeReport",details).success(function(data){
				if(data.status === "1"){
					$scope.showAlert("success", data.message);										
					angular.forEach($scope.RechargeReports, function(value, key) {
						
						if (value.id === details.id) {
							//alert(value.validation);
							$scope.RechargeReports[key].validation = status;
							//alert("successss..");
						}
					});
				} else {
					$scope.showAlert("danger", data.message);
					angular.forEach($scope.RechargeReports, function(value, key) {
						
						if (value.id === details.id) {
							//alert(value.validation);
							//$scope.RechargeReports[key].status = "PENDING";	
							$scope.RechargeReports[key].validation = status;	
							//alert("successss..");
		                }
					});
				}			
				
				$scope.loader=false;
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		};
		
		$scope.getThemeName = function(themename){
			$scope.colorManage.theme = themename;
		}
		
		$scope.getExcelReport = function(data,fileName){
			var file = fileName+".xls";
			alasql("SELECT * INTO XLSX('"+file+"',{headers:true}) FROM ?",[data]);		
		};
		
		$scope.addIndex = function(details){
			$scope.loader = true;
			var blogimage = $scope.blogimage;			
			var fd = new FormData();
			fd.append('blogimage', blogimage);
			fd.append('addIndex',angular.toJson(details,true));			
			$http.post("addIndex", fd, {
				transformRequest : angular.identity,
				headers : {'Content-Type' : undefined }
			}).success(function(data) {
				$scope.loader=false;
				});
		}
		
		$scope.addResellerDetails = function(details) {
			$scope.loader = true;
			
			if(details.name === undefined || details.name === null || details.name === "" ){
				$scope.loader=false;
				$scope.showAlert("danger", "Enter Name Properly!");
				return false;
			}
			
			if(details.firmName === undefined || details.firmName === null || details.firmName === "" ){
				$scope.showAlert("danger", "Enter Firm Name Properly!");
				return false;
			}
			if(details.mobile === undefined || details.mobile === null || details.mobile === "" ){
				$scope.showAlert("danger", "Enter Mobile Number Properly!");
				return false;
			}
			if(details.email === undefined || details.email === null || details.email === "" ){
				$scope.showAlert("danger", "Enter Email Address Properly!");
				return false;
			}
			if(details.address === undefined || details.address === null || details.address === "" ){
				$scope.showAlert("danger", "Enter Address Properly!");
				return false;
			}
			if(details.pinCode === undefined || details.pinCode === null || details.pinCode === "" ){
				$scope.showAlert("danger", "Enter Pincode Properly!");
				return false;
			}
			if(details.state === undefined || details.state === null || details.state === "" ){
				$scope.showAlert("danger", "Enter State Properly!");
				return false;
			}
			if(details.city === undefined || details.city === null || details.city === "" ){
				$scope.showAlert("danger", "Enter City Properly!");
				return false;
			}
			if(details.poweredBy === undefined || details.poweredBy === null || details.poweredBy === "" ){
				$scope.showAlert("danger", "Enter PoweredBy Properly!");
				return false;
			}
			if(details.poweredByLink === undefined || details.poweredByLink === null || details.poweredByLink === "" ){
				$scope.showAlert("danger", "Enter PoweredBy Link Properly!");
				return false;
			}
			if(details.pageTitle === undefined || details.pageTitle === null || details.pageTitle === "" ){
				$scope.showAlert("danger", "Enter Page Title Properly!");
				return false;
			}
			var file = $scope.myFile;			
			var fd = new FormData();
			fd.append('file', file);
			fd.append('addReseller',angular.toJson(details,true));			
			$http.post("addReseller", fd, {
				transformRequest : angular.identity,
				headers : {'Content-Type' : undefined }
			}).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					$scope.showAlert("success", data.message);
				}else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data) {
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.viewResellerByAdmin = function(){
			$scope.loader=true;
			var inputJson = {"userType": "2"};	
			$http.post('getViewUser',inputJson).success(function(data) {
				$scope.loader=false;			
				if(data.status == "1"){
					if(data.report === undefined || data.report.length <= 0){
						$scope.viewResellerPagination = false;
						$scope.viewResellerDetails = [];
						$scope.data = [];
					}else{
						$scope.data = [];
						$scope.viewResellerPagination = true;
						$scope.viewResellerDetails = data.report;
						$scope.currentPage = 0;				   
						for (var i=0; i<$scope.viewResellerDetails.length; i++) {
					        $scope.data.push("Item "+i);
					    }					
					}
				}else{
					$scope.viewResellerPagination = false;
					$scope.viewResellerDetails = [];
					$scope.data = [];
				}	
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getResellerDiscount = function(details){
			$scope.loader=true;
			if(details === undefined || details === null || details === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Choose user properly!");
				return false;
			}
			var inputJson = {"username": details};
			$http.post('getIndividualDiscount',inputJson).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){				
					$scope.resellerDiscount = data.commissionList;				
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		$scope.getResellerlCharge = function(details){
			$scope.loader=true;
			if(details === undefined || details === null || details === ""){
				$scope.loader=false;
				$scope.showAlert("danger", "Choose user properly!");
				return false;
			}					
			$http.post('getIndividualCharge',details).success(function(data) {
				$scope.loader=false;
				if(data.status == "1"){				
					$scope.resellerCharge = data.chargeList;				
				} else{
					$scope.showAlert("danger", data.message);
				}
				setTimeout(function(){
					 if(data.nextPage != undefined){
						 $window.location.href = data.nextPage;
					 }
				 },1000);
			}).error(function(data){
				$scope.loader=false;
				$scope.showAlert("danger", "Technical Error. Please try after sometime");
			});
		}
		
		 $scope.getUserByUserType1 = function(details, divName, modelName) {
	            $scope.loader = true;
	            $scope.inputJson = {
	                "userType": details,
	                "modelName": modelName
	            };
	            var divId = $parse(divName);
	            if (details == "10" || details === "") {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml(""));
	                return false;
	            }
	            $http.post('getUserByUserType', $scope.inputJson).success(function(data) {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml(data.message));
	            }).error(function(data) {
	                $scope.loader = false;
	                divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
	            });
	        };
	        
	        $scope.setResellerTheme = function(details){
	        	$scope.loader = true;	
	        	if(details.userType != 10){
		        	if(details.userId === undefined || details.userId === null || details.userId === ""){
		        		$scope.loader=false;
		        		$scope.showAlert("danger", "Choose user properly!");
		        		return false;
		        	}
	        	}
	        	if(details.theme === undefined || details.theme === null || details.theme === ""){
	        		$scope.loader=false;
	        		$scope.showAlert("danger", "Choose Theme properly!");
	        		return false;
	        	}
	        	$http.post('setResellerTheme', details).success(function(data) {
					$scope.loader=false;			
					if(data.status == "1"){
						$scope.showAlert("success", data.message);
					}else{
						$scope.showAlert("danger", data.message);
					}
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}).error(function(data) {
					$scope.loader=false;
					$scope.showAlert("danger", "Technical Error. Please try after sometime");
				});
	        };
	        
	        $scope.getResellerDetails = function(details){
	        	console.log(details);
	        	$scope.loader=true;
	        	if(details.userType === undefined || details.userType === null || details.userType === ""){
	        		$scope.loader=false;
	        		$scope.showAlert("danger", "Choose user properly!");
	        		return false;
	        	}
	        	 if(details.userType != ""){
	        		 if(details.userId === undefined || details.userId === null || details.userId === ""){
	        			 $scope.loader=false;
	        			 $scope.showAlert("danger", "Choose user properly!");
	        			 return false;
	        		 }
	        	 }
	        	 
	        	 $http.post("getResellerDetails",details).success(function(data){
	        		 console.log(data);
	        		 $scope.loader=false;
	        		 if(data.status === "1"){
	        			 $scope.resellerDetails = data.details;
	        		 } else {
	        			 $scope.showAlert("danger", "Invalid Reseller!");
	        		 }
	        	 }).error(function(data){
	        		 $scope.loader=false;
	        		 $scope.showAlert("danger", "Technical Error. Please try after sometime");
	        	 });
	        };
	        
	        $scope.setResellerLogo = function(details) {
				$scope.loader = true;
				if(details.userType === undefined || details.userType === null ||details.userType === ""){
					$scope.loader=false;
					$scope.showAlert("danger", "Select User Properly!");
					return false;
				}
				if(details.userType != 10){
					if(details.userId === undefined || details.userId === null ||details.userId === ""){
						$scope.loader=false;
						$scope.showAlert("danger", "Select User Properly!");
						return false;
					}
				}
				var file = $scope.resLogo;			
				var fd = new FormData();
				fd.append('file', file);
				fd.append('resellerLogo',angular.toJson(details,true));			
				$http.post("setResellerLogo", fd, {
					transformRequest : angular.identity,
					headers : {'Content-Type' : undefined }
				}).success(function(data) {
					$scope.loader=false;			
					if(data.status == "1"){
						$scope.showAlert("success", data.message);
					}else{
						$scope.showAlert("danger", data.message);
					}
					setTimeout(function(){
						 if(data.nextPage != undefined){
							 $window.location.href = data.nextPage;
						 }
					 },1000);
				}).error(function(data) {
					$scope.loader=false;
					$scope.showAlert("danger", "Technical Error. Please try after sometime");
				});
			}
	        
	        $scope.impsReports = [];
    		$scope.impsReport = {};
    		$scope.impsReport.startDate = $scope.date;
    		$scope.impsReport.endDate = $scope.date;
    		$scope.getImpsReport = function(details, divName){	
    			$scope.loader = true;	
    			$http.post('getImpsReport',details).success(function(data){
    				console.log(data);
    				$scope.loader = false;
    				if(data.status == "1"){				
    					if(data.list === undefined || data.list.length <= 0){
    						$scope.viewRechargeReportsPagination = false;
    						$scope.impsReports = [];
    						$scope.data = [];
    					}else{
    						$scope.data = [];
    						$scope.viewRechargeReportsPagination = true;
    						$scope.impsReports = data.list;
    						$scope.currentPage = 0;				   
    						for (var i=0; i<$scope.impsReports.length; i++) {
    					        $scope.data.push("Item "+i);
    					    }					
    					}
    				}else{
    					$scope.viewRechargeReportsPagination = false;
    					$scope.impsReports = [];
    					$scope.data = [];
    				}
    			});
    		}
	        
	        $scope.checkComission = function(defaultComm, myCom){
	        	if($scope.userDetails.roleId == 1){
	        		return false;
	        	} else {	        	
		        	var totalComm = parseFloat(defaultComm.distributor) + parseFloat(defaultComm.superDistributor) + parseFloat(defaultComm.retailer);
		        	if(totalComm >= myCom.commission){
		        		$scope.showAlert("info", "You Cannot Set Comission for "+myCom.serviceProvider +" more thann "+myCom.commission);
		        		angular.forEach($scope.defaultDiscount, function(value, key) {
							if(value.commissionId === defaultComm.commissionId){						
								$scope.defaultDiscount[key].distributor = 0;
								$scope.defaultDiscount[key].superDistributor = 0;
								$scope.defaultDiscount[key].retailer = 0;
							}
						});
		        	} else {
		        		return false;
		        	}
	        	}
	        	
	        };
	        
	        $scope.checkIndividualComission = function(individulaComm, myCom){
	        	if($scope.userDetails.roleId == 1){
	        		return false;
	        	} else {
		        	var totalComm = parseFloat(individulaComm.commission);
		        	if(totalComm >= myCom.commission){
		        		$scope.showAlert("info", "You Cannot Set Comission for "+myCom.serviceProvider +" more thann "+myCom.commission);
		        		angular.forEach($scope.individualDiscount, function(value, key) {
							if(value.commissionId === individulaComm.commissionId){						
								$scope.individualDiscount[key].commission = 0;							
							}
						});
		        	} else {
		        		return false;
		        	}
	        	}
	        };
	        
	        
	        $scope.refundReport = {};
	    	$scope.refundReport.startDate = $scope.date;
	    	$scope.refundReport.endDate = $scope.date;
	    	
	    	$scope.getRefundReport = function(details){	
	    		$scope.loader=true;
	    		$scope.data = [];
	    		$http.post('getRefundReport',details).success(function(data){	
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				if(data.report === undefined || data.report.length <= 0){
	    					$scope.viewRefundReportPagination = false;
	    					$scope.refundReportDetails = [];
	    					$scope.data = [];
	    				}else{
	    					$scope.data = [];
	    					$scope.viewRefundReportPagination = true;
	    					$scope.refundReportDetails = data.report;
	    					$scope.currentPage = 0;				   
	    					for (var i=0; i<$scope.refundReportDetails.length; i++) {
	    				        $scope.data.push("Item "+i);
	    				    }					
	    				}
	    			}else{
	    				if(data.status === '0'){					
	    					$scope.data = [];
	    					$scope.viewRefundReportPagination = false;
	    					$scope.refundReportDetails = [];
	    					setTimeout(function(){
	    						 if(data.nextPage != undefined){
	    							 $window.location.href = data.nextPage;
	    						 }
	    					 },1000);
	    				}
	    			}	
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};
	    	
	    	
	    	$scope.addOperator = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('addOperator',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    				 setTimeout(function(){
		    				 if(data.nextPage != undefined){
		    					 $window.location.href = data.nextPage;
		    				 }
		    			 },1000)
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});      
	    	} 
	    	
	    	$scope.assignPackage = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('assignPackage',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			 setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000)
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	
	    	}
	    	 $scope.myassignedPackage =function(){
		          	$scope.loader = true;
		          	$http.post('assignedPackage').success(function(data){
		          		     $scope.loader = false;
		          			 sshowDiv('sdiv51');
		          			 $scope.Assignedpackdetails = data.report;
		          	}).error(function(data) {
		                  $scope.loader = false;
		                  $scope.showAlert("danger", "Technical Error. Please try after sometime");
		              });
		          	
		          }
	    	
	    	$scope.assignEditPackage = function(details){
	    		console.log(details);
	    		//alert("entry");
	    		$scope.loader=true;
	    		$http.post('assignEditPackage',details).success(function(data) {
	    			$scope.loader=false;
	    			if (data.status == '1') {
	    				$scope.showAlert("success", data.message);
	    			}else{
	    				$scope.showAlert("danger", data.message);
	    			}
	    			 setTimeout(function(){
	    				 if(data.nextPage != undefined){
	    					 $window.location.href = data.nextPage;
	    				 }
	    			 },1000)
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    	}
	    	
	    	$scope.viewAssignPackage =function(){
	    		$scope.loader = true;
	          	$http.post('viewAssignPackage').success(function(data){
	          		$scope.loader = false;
	          		 sshowDiv('sdiv52');
	          		 $scope.ViewPackageDetail = data.report;
	          	}).error(function(data) {
	                $scope.loader = false;
	                $scope.showAlert("danger", "Technical Error. Please try after sometime");
	            });
	          	}
	    	
	    	$scope.editpk=function(details){
	    		console.log(details);
	    		$scope.loader = true;
	    		$scope.edpkg = details;
	    		$scope.loader=false;
	    		
	    	}
	    	
	    	 $scope.viewAssignedPackage =function(details){
	 	      	$scope.loader = true;
	 	      	$http.post('viewPackagewiseCommCharge',details).success(function(data){
	 	      		     $scope.loader = false;
	 	      		     showDiv('div53');
	 	      			 $scope.packdetails = data.packdetails;
	 	      	}).error(function(data) {
	 	              $scope.loader = false;
	 	              $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 	          });
	 	      	
	 	      }
	    	 

	    	 $scope.viewMyPackagechargeDetail =function(details){
		         	$scope.loader = true;
		         	console.log(details)
		         	$http.post('viewPackagewiseCommCharge',details).success(function(data){
		         		     $scope.loader = false;
		         		    console.log(data)
		         		     showDiv('div52');
		         		    $scope.servicetype = details.service_type;
		       			   $scope.MyPackageDetail = data.packdetails;
		         	}).error(function(data) {
		                 $scope.loader = false;
		                 $scope.showAlert("danger", "Technical Error. Please try after sometime");
		             });
		         	
		         }
	    	 
	    	 $scope.updateResellerdetails = function(details){
			    	$scope.loader=true;
					console.log(details);
					$http.post('updateResellerdetails',details).success(function(data){
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("success", data.message);
						}else{
							$scope.showAlert("danger", data.message);
						}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
			    }	

$scope.DeleteMyPackageDetail =function(details){
    	$scope.loader = true;
    	$http.post('DeleteMyPackageDetail',details).success(function(data){
    		     $scope.loader = false;
    			 if(data.status == '1'){
    				$scope.showAlert("success", data.message); 
    				
    			 }
    	}).error(function(data) {
            $scope.loader = false;
            $scope.showAlert("danger", "Technical Error. Please try after sometime");
        });
    	
    }

$scope.packageCreate = function(details){
	console.log(details);
	if(details.name === undefined || details.name === null ||details.name === ""){
		$scope.loader=false;
		$scope.showAlert("danger", "Insert Package Name!");
		return false;
	}
	if(details.type=='0'){
		$scope.loader=false;
		$scope.showAlert("danger", "Select Package Type!");
		return false;
	}
	$scope.loader=true;		
	$http.post('packageCreate',details).success(function(data) {
		$scope.loader=false;
		$scope.showAlert("success", data.message);
	}).error(function(data){
		$scope.loader=false;
		$scope.showAlert("danger", "Technical Error. Please try after sometime");
	});
};

$http.post('getPackagesDetails').success(function(data) {	
	if (data.status == '1') {
		$scope.packageDetails = data.packagelist;
		console.log(data);
	} else {
		
	}
});

$scope.viewMyPackage = function(){

		$scope.loader=true;
		$http.post('getPackagesDetails').success(function(data) {
			$scope.loader=false;
			if (data.status == '1') {
				sshowDiv('sdiv50');
 			$scope.packageDetail = data.packagelist;
 			console.log(data);
 		} else {
 			
 		}
			
		}).error(function(data){
			$scope.loader=false;
			$scope.showAlert("danger", "Technical Error. Please try after sometime");
		});
	
		
	}
 
$scope.updatemyPackage =function(details){
 	console.log(details);
 	$scope.loader = true;
 	$http.post('updatemyPackage',details).success(function(data){
 		     $scope.loader = false;
 		     if(data.status== '1'){
 		    	  $scope.showAlert("success", data.message);
              } else {
                  $scope.showAlert("danger", data.message);
              }
 	}).error(function(data) {
         $scope.loader = false;
         $scope.showAlert("danger", "Technical Error. Please try after sometime");
     });
 	
 }

	    	
	    	$scope.earningReportDetails = [];
	    	$scope.earningReport = {};
	    	$scope.earningReport.startDate = $scope.date;
	    	$scope.earningReport.endDate = $scope.date;
	    	
	    	$scope.getEarningReport = function(details){	
	    		$scope.loader=true;
	    		$scope.data = [];
	    		$http.post('getEarningReport',details).success(function(data){	
	    			$scope.loader=false;
	    			if(data.status == "1"){
	    				if(data.report === undefined || data.report.length <= 0){
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];
	    					$scope.data = [];
	    				}else{
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = true;
	    					$scope.earningReportDetails = data.report;
	    					$scope.currentPage = 0;				   
	    					for (var i=0; i<$scope.earningReportDetails.length; i++) {
	    				        $scope.data.push("Item "+i);
	    				    }					
	    				}
	    			}else{
	    				
	    				 $scope.viewRechargeReportsPagination = false;
	                     $scope.earningReportDetails = [];
	                     $scope.data = [];
	    			}
	    				/*if(data.status === '0'){					
	    					$scope.data = [];
	    					$scope.viewEarningReportPagination = false;
	    					$scope.earningReportDetails = [];	    					
	    				}
	    			}	
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");*/
	    		});
	    		
	    	};
	    	
	    	$scope.getIMPScharge = function(details){
	    		console.log(details);
	    		$scope.loader=true;
	    		$http.post('getIMPScharge',details).success(function(data) {
	    			$scope.loader=false;
	    			sshowDiv('sdiv90');
	    			$scope.viewIMPSchargeDetails = data.impscommission;
	    			
	    		}).error(function(data){
	    			$scope.loader=false;
	    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
	    		});
	    		
	    	};

	    	
	    	$scope.getMyCharge = function() {
	            $scope.loader = true;
	            $http.post('getMyCharge', $scope.userDetails).success(function(data) {
	                $scope.loader = false;
	                if (data.status == "1") {
	                    $scope.chargeList = data.chargeList;                
	                } else {
	                    $scope.showAlert("danger", data.message);
	                }
	                setTimeout(function() {
	                    if (data.nextPage != undefined) {
	                        $window.location.href = data.nextPage;
	                    }
	                }, 1000);
	            }).error(function(data) {
	                $scope.loader = false;
	                $scope.showAlert("danger", "Technical Error. Please try after sometime");
	            });
	        }
	    	
	    	$scope.viewWebEnquery = function(details){
	    		$scope.loader=true;
	    		$http.post('viewWebEnquery',details).success(function(data) {
	    			console.log(data);
	    			$scope.loader=false;
	    			$scope.viewEnqueryReport=data.report;
	    		});
	    	}
	    	
	    	$scope.fetchDomain = function(){
	    		$scope.loader=true;
	    		$http.post('fetchDomain').success(function(data) {
	    			console.log(data);
	    			$scope.loader=false;
	    			$scope.domainlist=data.domainlist;
	    		});
	    	}
	    	
	    	$scope.updateImpsReport = function(details){
    			console.log(details);
    			$scope.loader=true;			
    			var status=details.status;			
    			$http.post("updateImpsReport",details).success(function(data){
    				if(data.status === "1"){
    					$scope.showAlert("success", data.message);										
    					angular.forEach($scope.RechargeReports, function(value, key) {
    						
    						if (value.id === details.id) {
    							$scope.RechargeReports[key].validation = status;
    						}
    					});
    				} else {
    					$scope.showAlert("danger", data.message);
    					angular.forEach($scope.RechargeReports, function(value, key) {
    						if (value.id === details.id) {	
    							$scope.RechargeReports[key].validation = status;	
    		                }
    					});
    				}		
    				$scope.loader=false;
    			}).error(function(data){
    				$scope.loader=false;
    				$scope.showAlert("danger", "Technical Error. Please try after sometime");
    			});
    		};
    		
    		$scope.getmodalImpsRemark=  function(details,status){
    			console.log(details);
    			$scope.loader=true;	
    			details.status = status;
    			$scope.popremark = details;
    			$scope.loader=false;
    		}
    		
    		$scope.getmodalP2ARemark=  function(details,status){
    			console.log(details);
    			$scope.loader=true;	
    			details.status = status;
    			$scope.popremark = details;
    			$scope.loader=false;
    		}
    		
    		$scope.updatep2astatus =function(details,status){
    			details.status = status;
    			
    			$http.post("updatep2astatus",details).success(function(data){
    				if(data.status === "1"){
    					$scope.showAlert("success", data.message);										
    					angular.forEach($scope.p2aimpsReports, function(value, key) {
    						
    						if (value.id === details.id) {
    							$scope.p2aimpsReports[key].status = status;
    						}
    					});
    				} else {
    					$scope.showAlert("danger", data.message);
    					angular.forEach($scope.RechargeReports, function(value, key) {
    						if (value.id === details.id) {	
    							$scope.RechargeReports[key].validation = status;	
    		                }
    					});
    				}		
    				$scope.loader=false;
    			}).error(function(data){
    				$scope.loader=false;
    				$scope.showAlert("danger", "Technical Error. Please try after sometime");
    			});
    		}
    		
    		
    		$scope.panReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanReport = function(details){			
				$scope.loader = true;
				$http.post('getpanReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						sshowDiv('sdiv19');
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panReports = [];
							$scope.data = [];
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panReports = data.report;
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			$scope.panCouponReports = [];
			$scope.panReport = {};
			$scope.panReport.startDate = $scope.date;
			$scope.panReport.endDate = $scope.date;
			$scope.getpanCouponReport = function(details){			
				$scope.loader = true;
				$http.post('getpanCouponReport',details).success(function(data){
					console.log(data);
					$scope.loader = false;
					if(data.status == "1"){	
						
						if(data.report === undefined || data.report.length <= 0){
							$scope.viewRechargeReportsPagination = false;
							$scope.panCouponReports = [];
							$scope.data = [];
							sshowDiv('sdiv20');
						}else{
							$scope.data = [];
							$scope.viewRechargeReportsPagination = true;
							$scope.panCouponReports = data.report;
							sshowDiv('sdiv20');
							$scope.currentPage = 0;				   
							for (var i=0; i<$scope.panCouponReports.length; i++) {
						        $scope.data.push("Item "+i);
						    }					
						}
					}else{
						$scope.viewRechargeReportsPagination = false;
						$scope.impsReports = [];
						$scope.data = [];
					}
				});
			}
			
			
			 $scope.agentstatusmodal = function(details,status){
					$scope.loader=true;
					details.status = status;
						$scope.loader=false;
						$scope.popstatus=details;
					
				}
			 $scope.couponstatusmodal = function(details,status){
	    		 console.log(details);
					$scope.loader=true;
					details.status = status;
						$scope.loader=false;
						$scope.popcouponstatus=details;
					
				}
			 $scope.agentstatusupdate = function(details){
					$scope.loader=true;
					console.log(details);
					//details.status = status;
					$http.post('agentstatusupdate',details).success(function(data){
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("success", data.message);
						}else{
							$scope.showAlert("danger", data.message);
						}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				}
			 
			 $scope.couponstatusupdate = function(details){
					$scope.loader=true;
					console.log(details);
					//details.status = status;
					$http.post('couponstatusupdate',details).success(function(data){
						$scope.loader=false;
						if(data.status == '1'){
							$scope.showAlert("success", data.message);
						}else{
							$scope.showAlert("danger", data.message);
						}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				}
	    		    	
	    	
			 $scope.getnsdlReport =function(details){
				 console.log(details);
	 		     	$scope.loader = true;
	 		     	$http.post('getnsdlReport',details).success(function(data){
	 		     		console.log(data);
	 		     		     $scope.loader = false;
	 		     			
	 		     			if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     			 
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.fetchnsdlpan =function(){
	 		     	$scope.loader = true;
	 		     	$http.post('fetchnsdlpan').success(function(data){
	 		     		     $scope.loader = false;
	 		     		     console.log(data);
	 		     			if (data.status == "1") {
	 		                    if (data.report === undefined || data.report.length <= 0) {
	 		                        $scope.viewnsdlReportPagination = false;
	 		                        $scope.nsdlReport = [];
	 		                        $scope.data = [];
	 		                    } else {
	 		                        $scope.data = [];
	 		                        $scope.viewnsdlReportPagination = true;
	 		                        $scope.nsdlReport = data.report;
	 		                        $scope.currentPage = 0;
	 		                        for (var i = 0; i < $scope.nsdlReport.length; i++) {
	 		                            $scope.data.push("Item " + i);
	 		                        }
	 		                    }
	 		                } else {
	 		                	$scope.showAlert("danger", data.message);
	 		                    $scope.viewnsdlReportPagination = false;
	 		                    $scope.nsdlReport = [];
	 		                    $scope.data = [];
	 		                }
	 		     	}).error(function(data) {
	 		             $scope.loader = false;
	 		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
	 		         });
	 		     	
	 		     }
			 
			 $scope.getNSDLDetails = function(details,status){
				 console.log(details);
				 details.status=status;
				 $scope.nsdl=details;
				 //showDiv('div37');
				 
			 }
			 
			 $scope.updateNSDLReport = function(details){
				 console.log(details);
				 var ackslip = $scope.ackslip;
				 var fd = new FormData();
	 		     	fd.append('ackslip', ackslip);
	 		     	fd.append('NSDLReport',angular.toJson(details,true));	
				 $http.post('updateNSDLReport',fd,{
	 					transformRequest : angular.identity,
	 					headers : {'Content-Type' : undefined }}).success(function(data){
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			 
			 $scope.updateNSDLReportFailed = function(details){
				 console.log(details);
				 $http.post('updateNSDLReportFailed',details).success(function(data){
	 					
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			 
			 $scope.updateNSDLHoldReport = function(details){
				 console.log(details);
				 $http.post('updateNSDLHoldReport',details).success(function(data){
	 					
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
				 
			 }
			/* 
			 $scope.getNSDLAttachmentDetails=function(details){
				 console.log(details);
				 $http.post('getNSDLAttachmentDetails',details).success(function(data){
		     		     $scope.loader = false;
		     		     console.log(data);
		     			 if(data.status == '1'){
		     				$scope.showAlert("success", data.message);
		     				
		     			 }else{
 	    					$scope.showAlert("danger", data.message);
 	    				}
		     	}).error(function(data) {
		             $scope.loader = false;
		             $scope.showAlert("danger", "Technical Error. Please try after sometime");
		         });
			 }*/
			 
			 $scope.getNSDLAttachmentView = function(details){
				 $scope.viewnsdl=details;
				 console.log($scope.viewnsdl);
			 }
			
			 $scope.getNSDLAttachmentDetails = function(details){
					console.log(details);
					$scope.loader=true;
				
					$http.post('getNSDLAttachmentDetails',details).success(function(data) {
						console.log(data);
						$scope.loader=false;
						if(data.status=="1"){
							$scope.filepath=data.filepath;
							$scope.filename=data.filename;
							$scope.fileurl=data.fileurl;
							/*
						$scope.documentdetail= data.documentlist[0];
						
						
						if(data.documentlist[0].idprooftype!=""){
							$scope.Idproofname=data.Idproofname;
							var base64String5 = $scope.Uint8ToBase64(data.documentlist[0].bytesProofOfIdentity);
							 var byteCharactersProofOfIdentity = atob(base64String5);
								var byteNumbersProofOfIdentity = new Array(byteCharactersProofOfIdentity.length);
								for (var j = 0; j < byteCharactersProofOfIdentity.length; j++) {
									byteNumbersProofOfIdentity[j] = byteCharactersProofOfIdentity.charCodeAt(j);
								}
								var byteArrayProofOfIdentity = new Uint8Array(byteNumbersProofOfIdentity);
								  var fileProofOfIdentity = new Blob([ byteArrayProofOfIdentity ], {
					                    type : data.idprooftype
					                });
					                var fileURLProofOfIdentity = URL.createObjectURL(fileProofOfIdentity);
					                $scope.documentdetail.fileurlProofOfIdentity = fileURLProofOfIdentity;
				
						}
					*/}else{
						$scope.showAlert("danger", data.message);
					}
					}).error(function(data){
						$scope.loader=false;
						$scope.showAlert("danger", "Technical Error. Please try after sometime");
					});
				};
				
				 $scope.getNSDLASKDetails = function(details){
					 console.log(details);
					 $http.post("getNSDLASKDetails",details).success(function(data){
						 console.log(data);
						 $scope.filename=data.acknm;
						 var base64String = $scope.Uint8ToBase64(data.list.bytesackno);
						// $scope.documentdetail.documentImage="data:"+data.imagetype+";base64," + base64String;
							var byteCharactersImage = atob(base64String);
							var byteNumbersImage = new Array(byteCharactersImage.length);
							for (var j = 0; j < byteCharactersImage.length; j++) {
								byteNumbersImage[j] = byteCharactersImage.charCodeAt(j);
							}
							var byteArrayImage = new Uint8Array(byteNumbersImage);
							  var fileImage = new Blob([ byteArrayImage ], {
				                    type : data.list.acktype
				                });
				                var fileURLImage = URL.createObjectURL(fileImage);
				                $scope.fileurlImage = fileURLImage;
				              
					 }).error(function(data) {
		 					$scope.loader=false;
		 					$scope.showAlert("danger", "Technical Error. Please try after sometime");
		 				});
					 $scope.nsdl=details;
					 //showDiv('div37');
					 
				 }
				 
				 $scope.searchackno=function(details){
					 console.log(details);
					 $http.post('searchackno',details).success(function(data){
			     		     $scope.loader = false;
			     		     console.log(data);
			     			 if(data.status == '1'){
			     				$scope.nsdlReport = data.report;
			     				showDiv('div50');
			     				
			     			 }else{
	 	    					$scope.showAlert("danger", data.message);
	 	    				}
			     	}).error(function(data) {
			             $scope.loader = false;
			             $scope.showAlert("danger", "Technical Error. Please try after sometime");
			         });
				 }
				 
				 $scope.fetchnonpkguser=function(){
					
					 $http.post('fetchnonpkguser').success(function(data){
			     		     $scope.loader = false;
			     		     console.log(data);
			     			 if(data.status == '1'){
			     				$scope.viewUserDetails=data.listu;
			     				$scope.data = [];
								$scope.viewUserPagination = true;
								
								$scope.currentPage = 0;				   
								for (var i=0; i<$scope.viewUserDetails.length; i++) {
							        $scope.data.push("Item "+i);
							    }	
			     			 }else{
	 	    					$scope.showAlert("danger", data.message);
	 	    				}
			     	}).error(function(data) {
			             $scope.loader = false;
			             $scope.showAlert("danger", "Technical Error. Please try after sometime");
			         });
				 }
				 
				 $scope.getviewBalanceRequestDetailsExcel = function(data){
						alasql('SELECT * INTO XLSX("BalanceRequest.xls",{headers:true}) FROM ?',[data]);		
					};
					
					 $scope.getViewUserExcel = function(data){
							alasql('SELECT * INTO XLSX("ViewUser.xls",{headers:true}) FROM ?',[data]);		
						};
						
						
						$scope.getBooikngReportExcel = function(data){
							alasql('SELECT * INTO XLSX("Flight.xls",{headers:true}) FROM ?',[data]);		
						};
					
					 $scope.getViewP2aUserExcel = function(data){
							alasql('SELECT * INTO XLSX("ViewP2AUser.xls",{headers:true}) FROM ?',[data]);		
						};
						 $scope.getp2aimoneyReportsExcel = function(data){
								alasql('SELECT * INTO XLSX("p2aReport.xls",{headers:true}) FROM ?',[data]);		
							};
							$scope.getp2microatmReportsExcel = function(data){
								alasql('SELECT * INTO XLSX("p2aReport.xls",{headers:true}) FROM ?',[data]);		
							};
						
						$scope.getViewAEPSUserExcel = function(data){
							alasql('SELECT * INTO XLSX("ViewAEPSUser.xls",{headers:true}) FROM ?',[data]);		
						};
					
					$scope.fetchoutletid = function(){
						$scope.loader=true;
						$http.post('fetchoutletid').success(function(data){
							console.log(data);
							$scope.loader=false;
							if(data.status == '1'){
								$scope.showAlert("success", data.message);
							}else{
								$scope.showAlert("danger", data.message);
							}
						}).error(function(data){
							$scope.loader=false;
							$scope.showAlert("danger", "Technical Error. Please try after sometime");
						});
					}
					
					$scope.getUserByUserTypelatest= function(details){	
						$scope.loader=true;
						$http.post('getUserByUserTypelatest',details).success(function(data){
							console.log(data);
							$scope.loader=false;
							if(data.status == "1"){
								$scope.userdetl=data.userList;
							}else{
								$scope.showAlert("danger", data.message);
							}
						}).error(function(data){
							divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
						});
					};
					
					
					$scope.getUserByUserTypelatest1= function(details){	
						$scope.loader=true;
						$http.post('getUserByUserTypelatest',details).success(function(data){
							console.log(data);
							$scope.loader=false;
							if(data.status == "1"){
								$scope.userdetl1=data.userList;
							}else{
								$scope.showAlert("danger", data.message);
							}
						}).error(function(data){
							divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
						});
					};
					$scope.getUserByUserTypelatest2= function(details){	
						$scope.loader=true;
						$http.post('getUserByUserTypelatest',details).success(function(data){
							console.log(data);
							$scope.loader=false;
							if(data.status == "1"){
								$scope.userdetl2=data.userList;
							}else{
								$scope.showAlert("danger", data.message);
							}
						}).error(function(data){
							divId.assign($scope, $sce.trustAsHtml("<div class='row-fluid'><div class='span8'><div class='control-group'><label class='control-label'>Name: </label><div class='controls'><div class='input-prepend'><h5 style='color:red;'>Error! No Data Found.</h5></div></div></div></div></div>"));
						});
					};

					$scope.fetchoutletidotp = function(details){
						$scope.loader=true;
						console.log(details);
						$http.post('fetchoutletidotp',details).success(function(data){
							console.log(data);
							$scope.loader=false;
							if(data.status == '1'){
								$scope.showAlert("success", data.message);
							}else{
								$scope.showAlert("danger", data.message);
							}
						}).error(function(data){
							$scope.loader=false;
							$scope.showAlert("danger", "Technical Error. Please try after sometime");
						});
					}
					
					
					
					//---------------------------------------FLIGHT-MARKUP----------------------------------------------------
					$scope.SaveMarkUpData = function(details){
					  	 console.log(details);
					  	 $scope.loader = true;
					  	 $http.post('saveMarkUpData',details).success(function(data){
					  		 $scope.loader = false;
					  		 $scope.showAlert("success", data.message); 
					  		 
					  	 }).error(function(data){
					  		 $scope.loader=false;
					  		 $scope.showAlert("danger", "Technical Error. Please try after sometime");
					  	 });
					  	 
					   };
					   
					   $scope.savesingleData = function(details){
						  	 console.log(details);
						  	 $scope.loader = true;
						  	 $http.post('savesingleData',details).success(function(data){
						  		 $scope.loader = false;
						  		if(data.status == '1'){
									$scope.showAlert("success", data.message);
								}else{
									$scope.showAlert("danger", data.message);
								}
						  	 }).error(function(data){
						  		 $scope.loader=false;
						  		 $scope.showAlert("danger", "Technical Error. Please try after sometime");
						  	 });
						  	 
						   };
					   
					   $scope.showAllDomesticMarkup = function(){
					  	 $scope.loader = true;
					  	 $http.post('showAllDomesticMarkup').success(function(data){
					  		 if(data.message==null){
					  			 $scope.loader = false;
					  			 sshowDiv('sdiv601');
					  			 console.log(data);
					  			$scope.DomesticMarkuplist = data.DomesticMarkup;
					  		 }else{
					  			 $scope.loader = false;
					  			 $scope.showAlert("danger", data.message);  
					  		 }
					  	 }).error(function(data){
					  		    $scope.loader=false;
					   			$scope.showAlert("danger", "Technical Error. Please try after sometime"); 
					  	 });
					  	 
					   };
					   
					   
						$scope.bookingRequest={};
					 	$scope.bookingRequest.startDate=$scope.date;
					 	$scope.bookingRequest.endDate=$scope.date;
					 	$scope.viewBooikngReport=function(details){
					 		$http.post('viewBooikngReport',details).success(function(data){
					 			console.log(data);
					 			if(data.status == '1'){
									$scope.bookingreport=data.bookingreport;
									
								}else{
									$scope.bookingreport=[];
									$scope.showAlert("danger", data.message);
								}
					 		});
					 	}
					 	
					 	$scope.edittran="0";
					 	$scope.fees="0";
					 	$scope.edittransaction=function(){
					 		$scope.edittran="1";
						 	}
					 	$scope.calcuedittran=function(details){
					 		$scope.Totalttran=parseInt(details)+parseInt($scope.listFlightFare.totalamount)+parseInt($scope.listFlightFare.usermarkup)+parseInt($scope.listFlightFare.adminmarkup);
					 		
						 	}
						$scope.donetran=function(details){
							$scope.fees=details;
							$scope.trandt=$scope.listFlightFare;
							$scope.trandt.fees=parseInt(details);
							console.log($scope.trandt);
							$http.post('donetransactionfess',$scope.trandt).success(function(data){
					 			console.log(data);
					 			if(data.status=='1'){
					 				$scope.edittran="0";
					 			}else{
					 				$scope.edittran="1";
					 			}
					 		
					 		});
					 		
						 	}
						
						$scope.editdis="0";
					 	$scope.disfees="0";
					 	$scope.editdiscount=function(){
					 		$scope.editdis="1";
						 	}
					 	
					 	$scope.donedisfees=function(details){
							$scope.disfees=details;
							$scope.trandts=$scope.listFlightFare;
							$scope.trandts.discount=parseInt(details);
							console.log($scope.trandts);
							$http.post('donetransactionfess',$scope.trandts).success(function(data){
					 			console.log(data);
					 			if(data.status=='1'){
					 				$scope.editdis="2";
					 			}else{
					 				$scope.editdis="1";
					 			}
					 		
					 		});
					 		
						 	}
					 	$scope.ViewTickets=function(details){
					 	//	alert("hi");
					 		console.log(details);
					 		$http.post('ViewTicket',details).success(function(data){
					 			console.log(data);
					 			showDiv('div1011');
					 			$scope.requestticket=data.request;
					 			$scope.traveldate=data.traveldate;
					 			$scope.listFlightFare=data.listFlightFare[0];
					 			$scope.flightuser=data.flightuser;
					 			// $window.location.href ="flightTicket";
					 			$scope.fees=$scope.listFlightFare.fees;
					 			$scope.disfees=$scope.listFlightFare.discount;
					 		});
					 	}
					 	
						$scope.ViewInvoice=function(details){
					 		console.log(details);
					 		$http.post('ViewTicket',details).success(function(data){
					 			console.log(data);
					 			showDiv('div1012');
					 			$scope.requestticket=data.request;
					 			$scope.traveldate=data.traveldate;
					 			$scope.istPassengerfare=data.listPassengerfare;
					 			$scope.listFlightFare=data.listFlightFare[0];
					 			$scope.flightuser=data.flightuser;
					 			$scope.GstFlight=data.GstFlight;
					 			console.log($scope.istPassengerfare);
					 			// $window.location.href ="flightTicket";
					 		});
					 	}
					 	
					 	$scope.printInvoice = function(divId) {	    	
					    	var myDiv = "#"+divId;
					    	
				    	     var printContents = $(myDiv).html();
				    	     //console.log(printContents);
				    	     
				    	     var newWin=window.open('','Print-Window');
				    	     newWin.document.open();
				    	     newWin.document.write('<html><body onload="window.print()">'+
				    	    		 '<link rel="stylesheet" type="text/css" href="assets/skyflight/plugins/print.css">'+
				    	    		 '<link href="assets/skyflight/plugins/responsive.bootstrap.min.css" rel="stylesheet" type="text/css" />' +
				    	    			'<link href="assets/skyflight/plugins/bootstrap.min.css" rel="stylesheet" type="text/css">'+
				    	    			'<link rel="stylesheet" href="assets/skyflight/plugins/bootstrap-datepicker.css">'+printContents+'</body></html>');
				    	     newWin.document.close();
				    	     setTimeout(function(){newWin.close();},10);
						}
					 	
					 	$scope.cancelRequest = function(detail){
				        	//$scope.loader = true;
				        	showDiv('div41');
				        	console.log(detail)
				        	$scope.bookingcancel = detail;
				        }
					 	
					 	
					 	$scope.pasengrs = {};
					     $scope.pasengrs.loc = [];
					    $scope.cancelTicket = function(detail,item){
				        	var canceltype = document.getElementById('canceltype').value;
				        	detail.type = canceltype;
				        	console.log(detail);
				        	 
				        	detail.ticketlist=item.loc;
				        	console.log(item);
				           
				        	$scope.loader = true;
				        	$http.post('cancelTicket',detail).success(function(data){
				        		$scope.loader = false;
				        		console.log(data);
				        		if(data.type=='FULL'){
				        		if(data.status==1){
				        		sshowDiv('sdiv6');
				        		$scope.showAlert("success",data.message);
				        	    }else{
				        	    $scope.showAlert("success",data.message);
				        	    }
				        		}else{
				        		sshowDiv('sdiv42');	
				        		$scope.cancellationdetail = data;
				        		}
				        	}).error(function(data){
				    			$scope.loader=false;
				    			$scope.showAlert("danger", "Technical Error. Please try after sometime");
				        	});
				        }
					    
						$scope.getEarningReportReportExcel = function(data){
							alasql('SELECT * INTO XLSX("EarningReport.xls",{headers:true}) FROM ?',[data]);		
						};
						$scope.getPanReportReportExcel = function(data){
							alasql('SELECT * INTO XLSX("PanReport.xls",{headers:true}) FROM ?',[data]);		
						};
						
						
						
						$scope.viewuserbankdt = function(){

							$scope.loader=true;
							$http.post('viewuserbankdt').success(function(data) {
								$scope.loader=false;
					 			$scope.bavkslist = data.list;
					 		
								
							}).error(function(data){
								$scope.loader=false;
								$scope.showAlert("danger", "Technical Error. Please try after sometime");
							});
						
							
						}
						
						$scope.updatebankt = function(details,status){
							details.status=status;
							$scope.loader=true;
							$http.post('updatebankt',details).success(function(data) {
								$scope.loader=false;
								if(data.status==1){
								$scope.showAlert("success",data.message);
			        	    }else{
			        	    $scope.showAlert("success",data.message);
			        	    }
					 		
								
							}).error(function(data){
								$scope.loader=false;
								$scope.showAlert("danger", "Technical Error. Please try after sometime");
							});
						
							
						}
						
						$scope.addgstdt = function(details){
							$scope.loader=true;
							$http.post('addgstdt',details).success(function(data) {
								$scope.loader=false;
								if(data.status==1){
								$scope.showAlert("success",data.message);
			        	    }else{
			        	    $scope.showAlert("success",data.message);
			        	    }
					 		
								
							}).error(function(data){
								$scope.loader=false;
								$scope.showAlert("danger", "Technical Error. Please try after sometime");
							});
						
							
						}
}]);



//==================
/*.controller('AdminListController',["$scope","$modal", function($scope,$modal ) {
    //code
	$scope.open = function ( ) {
	      alertModalInstance = $modal.open({
	        animation: $scope.animationsEnabled,
	        templateUrl: 'popup.html',
	        scope: $scope
	      });

    
};

}]);*/